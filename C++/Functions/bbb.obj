
bbb:     file format elf64-x86-64


Disassembly of section .interp:

0000000000400238 <.interp>:
  400238:	2f                   	(bad)  
  400239:	6c                   	ins    BYTE PTR es:[rdi],dx
  40023a:	69 62 36 34 2f 6c 64 	imul   esp,DWORD PTR [rdx+0x36],0x646c2f34
  400241:	2d 6c 69 6e 75       	sub    eax,0x756e696c
  400246:	78 2d                	js     400275 <_init-0x8a3>
  400248:	78 38                	js     400282 <_init-0x896>
  40024a:	36 2d 36 34 2e 73    	ss sub eax,0x732e3436
  400250:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  400251:	2e 32 00             	xor    al,BYTE PTR cs:[rax]

Disassembly of section .note.ABI-tag:

0000000000400254 <.note.ABI-tag>:
  400254:	04 00                	add    al,0x0
  400256:	00 00                	add    BYTE PTR [rax],al
  400258:	10 00                	adc    BYTE PTR [rax],al
  40025a:	00 00                	add    BYTE PTR [rax],al
  40025c:	01 00                	add    DWORD PTR [rax],eax
  40025e:	00 00                	add    BYTE PTR [rax],al
  400260:	47                   	rex.RXB
  400261:	4e 55                	rex.WRX push rbp
  400263:	00 00                	add    BYTE PTR [rax],al
  400265:	00 00                	add    BYTE PTR [rax],al
  400267:	00 02                	add    BYTE PTR [rdx],al
  400269:	00 00                	add    BYTE PTR [rax],al
  40026b:	00 06                	add    BYTE PTR [rsi],al
  40026d:	00 00                	add    BYTE PTR [rax],al
  40026f:	00 20                	add    BYTE PTR [rax],ah
  400271:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .note.gnu.build-id:

0000000000400274 <.note.gnu.build-id>:
  400274:	04 00                	add    al,0x0
  400276:	00 00                	add    BYTE PTR [rax],al
  400278:	14 00                	adc    al,0x0
  40027a:	00 00                	add    BYTE PTR [rax],al
  40027c:	03 00                	add    eax,DWORD PTR [rax]
  40027e:	00 00                	add    BYTE PTR [rax],al
  400280:	47                   	rex.RXB
  400281:	4e 55                	rex.WRX push rbp
  400283:	00 88 c9 c8 bb da    	add    BYTE PTR [rax-0x25443737],cl
  400289:	42 96                	rex.X xchg esi,eax
  40028b:	fe                   	(bad)  
  40028c:	7f 11                	jg     40029f <_init-0x879>
  40028e:	7f c3                	jg     400253 <_init-0x8c5>
  400290:	7a bd                	jp     40024f <_init-0x8c9>
  400292:	f4                   	hlt    
  400293:	00 4b 67             	add    BYTE PTR [rbx+0x67],cl
  400296:	5e                   	pop    rsi
  400297:	3c                   	.byte 0x3c

Disassembly of section .gnu.hash:

0000000000400298 <.gnu.hash>:
  400298:	03 00                	add    eax,DWORD PTR [rax]
  40029a:	00 00                	add    BYTE PTR [rax],al
  40029c:	13 00                	adc    eax,DWORD PTR [rax]
  40029e:	00 00                	add    BYTE PTR [rax],al
  4002a0:	01 00                	add    DWORD PTR [rax],eax
  4002a2:	00 00                	add    BYTE PTR [rax],al
  4002a4:	06                   	(bad)  
  4002a5:	00 00                	add    BYTE PTR [rax],al
  4002a7:	00 00                	add    BYTE PTR [rax],al
  4002a9:	00 10                	add    BYTE PTR [rax],dl
  4002ab:	00 21                	add    BYTE PTR [rcx],ah
  4002ad:	01 10                	add    DWORD PTR [rax],edx
  4002af:	01 00                	add    DWORD PTR [rax],eax
  4002b1:	00 00                	add    BYTE PTR [rax],al
  4002b3:	00 13                	add    BYTE PTR [rbx],dl
  4002b5:	00 00                	add    BYTE PTR [rax],al
  4002b7:	00 14 00             	add    BYTE PTR [rax+rax*1],dl
  4002ba:	00 00                	add    BYTE PTR [rax],al
  4002bc:	21 fd                	and    ebp,edi
  4002be:	f4                   	hlt    
  4002bf:	09 28                	or     DWORD PTR [rax],ebp
  4002c1:	45 d5                	rex.RB (bad) 
  4002c3:	4c 14 98             	rex.WR adc al,0x98
  4002c6:	0c 43                	or     al,0x43
  4002c8:	79 49                	jns    400313 <_init-0x805>
  4002ca:	6b                   	.byte 0x6b
  4002cb:	b6                   	.byte 0xb6

Disassembly of section .dynsym:

00000000004002d0 <.dynsym>:
	...
  4002e8:	84 01                	test   BYTE PTR [rcx],al
  4002ea:	00 00                	add    BYTE PTR [rax],al
  4002ec:	12 00                	adc    al,BYTE PTR [rax]
	...
  4002fe:	00 00                	add    BYTE PTR [rax],al
  400300:	10 00                	adc    BYTE PTR [rax],al
  400302:	00 00                	add    BYTE PTR [rax],al
  400304:	20 00                	and    BYTE PTR [rax],al
	...
  400316:	00 00                	add    BYTE PTR [rax],al
  400318:	7d 01                	jge    40031b <_init-0x7fd>
  40031a:	00 00                	add    BYTE PTR [rax],al
  40031c:	12 00                	adc    al,BYTE PTR [rax]
	...
  40032e:	00 00                	add    BYTE PTR [rax],al
  400330:	f6 01 00             	test   BYTE PTR [rcx],0x0
  400333:	00 12                	add    BYTE PTR [rdx],dl
	...
  400345:	00 00                	add    BYTE PTR [rax],al
  400347:	00 12                	add    BYTE PTR [rdx],dl
  400349:	03 00                	add    eax,DWORD PTR [rax]
  40034b:	00 12                	add    BYTE PTR [rdx],dl
	...
  40035d:	00 00                	add    BYTE PTR [rax],al
  40035f:	00 fd                	add    ch,bh
  400361:	02 00                	add    al,BYTE PTR [rax]
  400363:	00 12                	add    BYTE PTR [rdx],dl
	...
  400375:	00 00                	add    BYTE PTR [rax],al
  400377:	00 92 02 00 00 12    	add    BYTE PTR [rdx+0x12000002],dl
	...
  40038d:	00 00                	add    BYTE PTR [rax],al
  40038f:	00 0e                	add    BYTE PTR [rsi],cl
  400391:	02 00                	add    al,BYTE PTR [rax]
  400393:	00 12                	add    BYTE PTR [rdx],dl
	...
  4003a5:	00 00                	add    BYTE PTR [rax],al
  4003a7:	00 0a                	add    BYTE PTR [rdx],cl
  4003a9:	03 00                	add    eax,DWORD PTR [rax]
  4003ab:	00 12                	add    BYTE PTR [rdx],dl
	...
  4003bd:	00 00                	add    BYTE PTR [rax],al
  4003bf:	00 fd                	add    ch,bh
  4003c1:	00 00                	add    BYTE PTR [rax],al
  4003c3:	00 12                	add    BYTE PTR [rdx],dl
	...
  4003d5:	00 00                	add    BYTE PTR [rax],al
  4003d7:	00 d7                	add    bh,dl
  4003d9:	00 00                	add    BYTE PTR [rax],al
  4003db:	00 12                	add    BYTE PTR [rdx],dl
	...
  4003ed:	00 00                	add    BYTE PTR [rax],al
  4003ef:	00 3b                	add    BYTE PTR [rbx],bh
  4003f1:	01 00                	add    DWORD PTR [rax],eax
  4003f3:	00 12                	add    BYTE PTR [rdx],dl
	...
  400405:	00 00                	add    BYTE PTR [rax],al
  400407:	00 dd                	add    ch,bl
  400409:	01 00                	add    DWORD PTR [rax],eax
  40040b:	00 12                	add    BYTE PTR [rdx],dl
	...
  40041d:	00 00                	add    BYTE PTR [rax],al
  40041f:	00 5b 00             	add    BYTE PTR [rbx+0x0],bl
  400422:	00 00                	add    BYTE PTR [rax],al
  400424:	12 00                	adc    al,BYTE PTR [rax]
	...
  400436:	00 00                	add    BYTE PTR [rax],al
  400438:	82                   	(bad)  
  400439:	02 00                	add    al,BYTE PTR [rax]
  40043b:	00 12                	add    BYTE PTR [rdx],dl
	...
  40044d:	00 00                	add    BYTE PTR [rax],al
  40044f:	00 e4                	add    ah,ah
  400451:	02 00                	add    al,BYTE PTR [rax]
  400453:	00 12                	add    BYTE PTR [rdx],dl
	...
  400465:	00 00                	add    BYTE PTR [rax],al
  400467:	00 48 02             	add    BYTE PTR [rax+0x2],cl
  40046a:	00 00                	add    BYTE PTR [rax],al
  40046c:	12 00                	adc    al,BYTE PTR [rax]
	...
  40047e:	00 00                	add    BYTE PTR [rax],al
  400480:	1f                   	(bad)  
  400481:	00 00                	add    BYTE PTR [rax],al
  400483:	00 12                	add    BYTE PTR [rdx],dl
	...
  400495:	00 00                	add    BYTE PTR [rax],al
  400497:	00 a2 01 00 00 12    	add    BYTE PTR [rdx+0x12000001],ah
  40049d:	00 00                	add    BYTE PTR [rax],al
  40049f:	00 20                	add    BYTE PTR [rax],ah
  4004a1:	0c 40                	or     al,0x40
	...
  4004af:	00 bf 00 00 00 12    	add    BYTE PTR [rdi+0x12000000],bh
  4004b5:	00 00                	add    BYTE PTR [rax],al
  4004b7:	00 a0 0b 40 00 00    	add    BYTE PTR [rax+0x400b],ah
	...
  4004c5:	00 00                	add    BYTE PTR [rax],al
  4004c7:	00 88 02 00 00 11    	add    BYTE PTR [rax+0x11000002],cl
  4004cd:	00 1b                	add    BYTE PTR [rbx],bl
  4004cf:	00 e0                	add    al,ah
  4004d1:	50                   	push   rax
  4004d2:	60                   	(bad)  
  4004d3:	00 00                	add    BYTE PTR [rax],al
  4004d5:	00 00                	add    BYTE PTR [rax],al
  4004d7:	00 10                	add    BYTE PTR [rax],dl
  4004d9:	01 00                	add    DWORD PTR [rax],eax
  4004db:	00 00                	add    BYTE PTR [rax],al
  4004dd:	00 00                	add    BYTE PTR [rax],al
  4004df:	00 e8                	add    al,ch
  4004e1:	00 00                	add    BYTE PTR [rax],al
  4004e3:	00 12                	add    BYTE PTR [rdx],dl
  4004e5:	00 00                	add    BYTE PTR [rax],al
  4004e7:	00 30                	add    BYTE PTR [rax],dh
  4004e9:	0c 40                	or     al,0x40
	...

Disassembly of section .dynstr:

00000000004004f8 <.dynstr>:
  4004f8:	00 6c 69 62          	add    BYTE PTR [rcx+rbp*2+0x62],ch
  4004fc:	73 74                	jae    400572 <_init-0x5a6>
  4004fe:	64 63 2b             	movsxd ebp,DWORD PTR fs:[rbx]
  400501:	2b 2e                	sub    ebp,DWORD PTR [rsi]
  400503:	73 6f                	jae    400574 <_init-0x5a4>
  400505:	2e 36 00 5f 5f       	cs add BYTE PTR ss:[rdi+0x5f],bl
  40050a:	67 6d                	ins    DWORD PTR es:[edi],dx
  40050c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  40050d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  40050e:	5f                   	pop    rdi
  40050f:	73 74                	jae    400585 <_init-0x593>
  400511:	61                   	(bad)  
  400512:	72 74                	jb     400588 <_init-0x590>
  400514:	5f                   	pop    rdi
  400515:	5f                   	pop    rdi
  400516:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
  400519:	4e 53                	rex.WRX push rbx
  40051b:	74 37                	je     400554 <_init-0x5c4>
  40051d:	5f                   	pop    rdi
  40051e:	5f                   	pop    rdi
  40051f:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
  400522:	31 31                	xor    DWORD PTR [rcx],esi
  400524:	31 32                	xor    DWORD PTR [rdx],esi
  400526:	62 61                	(bad)  
  400528:	73 69                	jae    400593 <_init-0x585>
  40052a:	63 5f 73             	movsxd ebx,DWORD PTR [rdi+0x73]
  40052d:	74 72                	je     4005a1 <_init-0x577>
  40052f:	69 6e 67 49 63 53 74 	imul   ebp,DWORD PTR [rsi+0x67],0x74536349
  400536:	31 31                	xor    DWORD PTR [rcx],esi
  400538:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
  40053b:	72 5f                	jb     40059c <_init-0x57c>
  40053d:	74 72                	je     4005b1 <_init-0x567>
  40053f:	61                   	(bad)  
  400540:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
  400547:	61 
  400548:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
  40054c:	61                   	(bad)  
  40054d:	53                   	push   rbx
  40054e:	45 50                	rex.RB push r8
  400550:	4b 63 00             	rex.WXB movsxd rax,DWORD PTR [r8]
  400553:	5f                   	pop    rdi
  400554:	5a                   	pop    rdx
  400555:	53                   	push   rbx
  400556:	74 6c                	je     4005c4 <_init-0x554>
  400558:	73 49                	jae    4005a3 <_init-0x575>
  40055a:	63 53 74             	movsxd edx,DWORD PTR [rbx+0x74]
  40055d:	31 31                	xor    DWORD PTR [rcx],esi
  40055f:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
  400562:	72 5f                	jb     4005c3 <_init-0x555>
  400564:	74 72                	je     4005d8 <_init-0x540>
  400566:	61                   	(bad)  
  400567:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
  40056e:	61 
  40056f:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
  400573:	52                   	push   rdx
  400574:	53                   	push   rbx
  400575:	74 31                	je     4005a8 <_init-0x570>
  400577:	33 62 61             	xor    esp,DWORD PTR [rdx+0x61]
  40057a:	73 69                	jae    4005e5 <_init-0x533>
  40057c:	63 5f 6f             	movsxd ebx,DWORD PTR [rdi+0x6f]
  40057f:	73 74                	jae    4005f5 <_init-0x523>
  400581:	72 65                	jb     4005e8 <_init-0x530>
  400583:	61                   	(bad)  
  400584:	6d                   	ins    DWORD PTR es:[rdi],dx
  400585:	49 54                	rex.WB push r12
  400587:	5f                   	pop    rdi
  400588:	54                   	push   rsp
  400589:	30 5f 45             	xor    BYTE PTR [rdi+0x45],bl
  40058c:	53                   	push   rbx
  40058d:	37                   	(bad)  
  40058e:	5f                   	pop    rdi
  40058f:	52                   	push   rdx
  400590:	4b                   	rex.WXB
  400591:	4e 53                	rex.WRX push rbx
  400593:	74 37                	je     4005cc <_init-0x54c>
  400595:	5f                   	pop    rdi
  400596:	5f                   	pop    rdi
  400597:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
  40059a:	31 31                	xor    DWORD PTR [rcx],esi
  40059c:	31 32                	xor    DWORD PTR [rdx],esi
  40059e:	62 61                	(bad)  
  4005a0:	73 69                	jae    40060b <_init-0x50d>
  4005a2:	63 5f 73             	movsxd ebx,DWORD PTR [rdi+0x73]
  4005a5:	74 72                	je     400619 <_init-0x4ff>
  4005a7:	69 6e 67 49 53 34 5f 	imul   ebp,DWORD PTR [rsi+0x67],0x5f345349
  4005ae:	53                   	push   rbx
  4005af:	35 5f 54 31 5f       	xor    eax,0x5f31545f
  4005b4:	45                   	rex.RB
  4005b5:	45 00 5f 5a          	add    BYTE PTR [r15+0x5a],r11b
  4005b9:	4e 53                	rex.WRX push rbx
  4005bb:	74 38                	je     4005f5 <_init-0x523>
  4005bd:	69 6f 73 5f 62 61 73 	imul   ebp,DWORD PTR [rdi+0x73],0x7361625f
  4005c4:	65 34 49             	gs xor al,0x49
  4005c7:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  4005c8:	69 74 44 31 45 76 00 	imul   esi,DWORD PTR [rsp+rax*2+0x31],0x5f007645
  4005cf:	5f 
  4005d0:	5a                   	pop    rdx
  4005d1:	4e 53                	rex.WRX push rbx
  4005d3:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  4005d4:	6c                   	ins    BYTE PTR es:[rdi],dx
  4005d5:	73 45                	jae    40061c <_init-0x4fc>
  4005d7:	50                   	push   rax
  4005d8:	46 52                	rex.RX push rdx
  4005da:	53                   	push   rbx
  4005db:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  4005dc:	53                   	push   rbx
  4005dd:	5f                   	pop    rdi
  4005de:	45 00 5f 5f          	add    BYTE PTR [r15+0x5f],r11b
  4005e2:	67 78 78             	addr32 js 40065d <_init-0x4bb>
  4005e5:	5f                   	pop    rdi
  4005e6:	70 65                	jo     40064d <_init-0x4cb>
  4005e8:	72 73                	jb     40065d <_init-0x4bb>
  4005ea:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  4005eb:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  4005ec:	61                   	(bad)  
  4005ed:	6c                   	ins    BYTE PTR es:[rdi],dx
  4005ee:	69 74 79 5f 76 30 00 	imul   esi,DWORD PTR [rcx+rdi*2+0x5f],0x5f003076
  4005f5:	5f 
  4005f6:	5a                   	pop    rdx
  4005f7:	4e                   	rex.WRX
  4005f8:	4b 53                	rex.WXB push r11
  4005fa:	74 37                	je     400633 <_init-0x4e5>
  4005fc:	5f                   	pop    rdi
  4005fd:	5f                   	pop    rdi
  4005fe:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
  400601:	31 31                	xor    DWORD PTR [rcx],esi
  400603:	31 32                	xor    DWORD PTR [rdx],esi
  400605:	62 61                	(bad)  
  400607:	73 69                	jae    400672 <_init-0x4a6>
  400609:	63 5f 73             	movsxd ebx,DWORD PTR [rdi+0x73]
  40060c:	74 72                	je     400680 <_init-0x498>
  40060e:	69 6e 67 49 63 53 74 	imul   ebp,DWORD PTR [rsi+0x67],0x74536349
  400615:	31 31                	xor    DWORD PTR [rcx],esi
  400617:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
  40061a:	72 5f                	jb     40067b <_init-0x49d>
  40061c:	74 72                	je     400690 <_init-0x488>
  40061e:	61                   	(bad)  
  40061f:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
  400626:	61 
  400627:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
  40062b:	34 73                	xor    al,0x73
  40062d:	69 7a 65 45 76 00 5f 	imul   edi,DWORD PTR [rdx+0x65],0x5f007645
  400634:	5a                   	pop    rdx
  400635:	4e 53                	rex.WRX push rbx
  400637:	74 37                	je     400670 <_init-0x4a8>
  400639:	5f                   	pop    rdi
  40063a:	5f                   	pop    rdi
  40063b:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
  40063e:	31 31                	xor    DWORD PTR [rcx],esi
  400640:	31 32                	xor    DWORD PTR [rdx],esi
  400642:	62 61                	(bad)  
  400644:	73 69                	jae    4006af <_init-0x469>
  400646:	63 5f 73             	movsxd ebx,DWORD PTR [rdi+0x73]
  400649:	74 72                	je     4006bd <_init-0x45b>
  40064b:	69 6e 67 49 63 53 74 	imul   ebp,DWORD PTR [rsi+0x67],0x74536349
  400652:	31 31                	xor    DWORD PTR [rcx],esi
  400654:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
  400657:	72 5f                	jb     4006b8 <_init-0x460>
  400659:	74 72                	je     4006cd <_init-0x44b>
  40065b:	61                   	(bad)  
  40065c:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
  400663:	61 
  400664:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
  400668:	39 70 75             	cmp    DWORD PTR [rax+0x75],esi
  40066b:	73 68                	jae    4006d5 <_init-0x443>
  40066d:	5f                   	pop    rdi
  40066e:	62 61                	(bad)  
  400670:	63 6b 45             	movsxd ebp,DWORD PTR [rbx+0x45]
  400673:	63 00                	movsxd eax,DWORD PTR [rax]
  400675:	5f                   	pop    rdi
  400676:	5a                   	pop    rdx
  400677:	64 6c                	fs ins BYTE PTR es:[rdi],dx
  400679:	50                   	push   rax
  40067a:	76 00                	jbe    40067c <_init-0x49c>
  40067c:	5f                   	pop    rdi
  40067d:	5a                   	pop    rdx
  40067e:	53                   	push   rbx
  40067f:	74 32                	je     4006b3 <_init-0x465>
  400681:	30 5f 5f             	xor    BYTE PTR [rdi+0x5f],bl
  400684:	74 68                	je     4006ee <_init-0x42a>
  400686:	72 6f                	jb     4006f7 <_init-0x421>
  400688:	77 5f                	ja     4006e9 <_init-0x42f>
  40068a:	6c                   	ins    BYTE PTR es:[rdi],dx
  40068b:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
  40068d:	67 74 68             	addr32 je 4006f8 <_init-0x420>
  400690:	5f                   	pop    rdi
  400691:	65 72 72             	gs jb  400706 <_init-0x412>
  400694:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  400695:	72 50                	jb     4006e7 <_init-0x431>
  400697:	4b 63 00             	rex.WXB movsxd rax,DWORD PTR [r8]
  40069a:	5f                   	pop    rdi
  40069b:	5a                   	pop    rdx
  40069c:	53                   	push   rbx
  40069d:	74 34                	je     4006d3 <_init-0x445>
  40069f:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
  4006a1:	64 6c                	fs ins BYTE PTR es:[rdi],dx
  4006a3:	49 63 53 74          	movsxd rdx,DWORD PTR [r11+0x74]
  4006a7:	31 31                	xor    DWORD PTR [rcx],esi
  4006a9:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
  4006ac:	72 5f                	jb     40070d <_init-0x40b>
  4006ae:	74 72                	je     400722 <_init-0x3f6>
  4006b0:	61                   	(bad)  
  4006b1:	69 74 73 49 63 45 45 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x52454563
  4006b8:	52 
  4006b9:	53                   	push   rbx
  4006ba:	74 31                	je     4006ed <_init-0x42b>
  4006bc:	33 62 61             	xor    esp,DWORD PTR [rdx+0x61]
  4006bf:	73 69                	jae    40072a <_init-0x3ee>
  4006c1:	63 5f 6f             	movsxd ebx,DWORD PTR [rdi+0x6f]
  4006c4:	73 74                	jae    40073a <_init-0x3de>
  4006c6:	72 65                	jb     40072d <_init-0x3eb>
  4006c8:	61                   	(bad)  
  4006c9:	6d                   	ins    DWORD PTR es:[rdi],dx
  4006ca:	49 54                	rex.WB push r12
  4006cc:	5f                   	pop    rdi
  4006cd:	54                   	push   rsp
  4006ce:	30 5f 45             	xor    BYTE PTR [rdi+0x45],bl
  4006d1:	53                   	push   rbx
  4006d2:	36 5f                	ss pop rdi
  4006d4:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
  4006d7:	53                   	push   rbx
  4006d8:	74 31                	je     40070b <_init-0x40d>
  4006da:	37                   	(bad)  
  4006db:	5f                   	pop    rdi
  4006dc:	5f                   	pop    rdi
  4006dd:	74 68                	je     400747 <_init-0x3d1>
  4006df:	72 6f                	jb     400750 <_init-0x3c8>
  4006e1:	77 5f                	ja     400742 <_init-0x3d6>
  4006e3:	62 61 64 5f 61       	(bad)  {k7}
  4006e8:	6c                   	ins    BYTE PTR es:[rdi],dx
  4006e9:	6c                   	ins    BYTE PTR es:[rdi],dx
  4006ea:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  4006eb:	63 76 00             	movsxd esi,DWORD PTR [rsi+0x0]
  4006ee:	5f                   	pop    rdi
  4006ef:	5a                   	pop    rdx
  4006f0:	4e 53                	rex.WRX push rbx
  4006f2:	74 38                	je     40072c <_init-0x3ec>
  4006f4:	69 6f 73 5f 62 61 73 	imul   ebp,DWORD PTR [rdi+0x73],0x7361625f
  4006fb:	65 34 49             	gs xor al,0x49
  4006fe:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  4006ff:	69 74 43 31 45 76 00 	imul   esi,DWORD PTR [rbx+rax*2+0x31],0x5f007645
  400706:	5f 
  400707:	5a                   	pop    rdx
  400708:	4e 53                	rex.WRX push rbx
  40070a:	74 37                	je     400743 <_init-0x3d5>
  40070c:	5f                   	pop    rdi
  40070d:	5f                   	pop    rdi
  40070e:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
  400711:	31 31                	xor    DWORD PTR [rcx],esi
  400713:	31 32                	xor    DWORD PTR [rdx],esi
  400715:	62 61                	(bad)  {k7}
  400717:	73 69                	jae    400782 <_init-0x396>
  400719:	63 5f 73             	movsxd ebx,DWORD PTR [rdi+0x73]
  40071c:	74 72                	je     400790 <_init-0x388>
  40071e:	69 6e 67 49 63 53 74 	imul   ebp,DWORD PTR [rsi+0x67],0x74536349
  400725:	31 31                	xor    DWORD PTR [rcx],esi
  400727:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
  40072a:	72 5f                	jb     40078b <_init-0x38d>
  40072c:	74 72                	je     4007a0 <_init-0x378>
  40072e:	61                   	(bad)  
  40072f:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
  400736:	61 
  400737:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
  40073b:	44 31 45 76          	xor    DWORD PTR [rbp+0x76],r8d
  40073f:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
  400742:	4e 53                	rex.WRX push rbx
  400744:	74 37                	je     40077d <_init-0x39b>
  400746:	5f                   	pop    rdi
  400747:	5f                   	pop    rdi
  400748:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
  40074b:	31 31                	xor    DWORD PTR [rcx],esi
  40074d:	31 32                	xor    DWORD PTR [rdx],esi
  40074f:	62 61                	(bad)  {k7}
  400751:	73 69                	jae    4007bc <_init-0x35c>
  400753:	63 5f 73             	movsxd ebx,DWORD PTR [rdi+0x73]
  400756:	74 72                	je     4007ca <_init-0x34e>
  400758:	69 6e 67 49 63 53 74 	imul   ebp,DWORD PTR [rsi+0x67],0x74536349
  40075f:	31 31                	xor    DWORD PTR [rcx],esi
  400761:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
  400764:	72 5f                	jb     4007c5 <_init-0x353>
  400766:	74 72                	je     4007da <_init-0x33e>
  400768:	61                   	(bad)  
  400769:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
  400770:	61 
  400771:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
  400775:	69 78 45 6d 00 5f 5a 	imul   edi,DWORD PTR [rax+0x45],0x5a5f006d
  40077c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  40077d:	77 6d                	ja     4007ec <_init-0x32c>
  40077f:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
  400782:	53                   	push   rbx
  400783:	74 34                	je     4007b9 <_init-0x35f>
  400785:	63 6f 75             	movsxd ebp,DWORD PTR [rdi+0x75]
  400788:	74 00                	je     40078a <_init-0x38e>
  40078a:	5f                   	pop    rdi
  40078b:	5a                   	pop    rdx
  40078c:	4e 53                	rex.WRX push rbx
  40078e:	74 37                	je     4007c7 <_init-0x351>
  400790:	5f                   	pop    rdi
  400791:	5f                   	pop    rdi
  400792:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
  400795:	31 31                	xor    DWORD PTR [rcx],esi
  400797:	31 32                	xor    DWORD PTR [rdx],esi
  400799:	62 61                	(bad)  {k7}
  40079b:	73 69                	jae    400806 <_init-0x312>
  40079d:	63 5f 73             	movsxd ebx,DWORD PTR [rdi+0x73]
  4007a0:	74 72                	je     400814 <_init-0x304>
  4007a2:	69 6e 67 49 63 53 74 	imul   ebp,DWORD PTR [rsi+0x67],0x74536349
  4007a9:	31 31                	xor    DWORD PTR [rcx],esi
  4007ab:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
  4007ae:	72 5f                	jb     40080f <_init-0x309>
  4007b0:	74 72                	je     400824 <_init-0x2f4>
  4007b2:	61                   	(bad)  
  4007b3:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
  4007ba:	61 
  4007bb:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
  4007bf:	43 31 45 76          	rex.XB xor DWORD PTR [r13+0x76],eax
  4007c3:	00 6c 69 62          	add    BYTE PTR [rcx+rbp*2+0x62],ch
  4007c7:	6d                   	ins    DWORD PTR es:[rdi],dx
  4007c8:	2e 73 6f             	cs jae 40083a <_init-0x2de>
  4007cb:	2e 36 00 6c 69 62    	cs add BYTE PTR ss:[rcx+rbp*2+0x62],ch
  4007d1:	67 63 63 5f          	movsxd esp,DWORD PTR [ebx+0x5f]
  4007d5:	73 2e                	jae    400805 <_init-0x313>
  4007d7:	73 6f                	jae    400848 <_init-0x2d0>
  4007d9:	2e 31 00             	xor    DWORD PTR cs:[rax],eax
  4007dc:	5f                   	pop    rdi
  4007dd:	55                   	push   rbp
  4007de:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  4007df:	77 69                	ja     40084a <_init-0x2ce>
  4007e1:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  4007e2:	64 5f                	fs pop rdi
  4007e4:	52                   	push   rdx
  4007e5:	65 73 75             	gs jae 40085d <_init-0x2bb>
  4007e8:	6d                   	ins    DWORD PTR es:[rdi],dx
  4007e9:	65 00 6c 69 62       	add    BYTE PTR gs:[rcx+rbp*2+0x62],ch
  4007ee:	63 2e                	movsxd ebp,DWORD PTR [rsi]
  4007f0:	73 6f                	jae    400861 <_init-0x2b7>
  4007f2:	2e 36 00 5f 5f       	cs add BYTE PTR ss:[rdi+0x5f],bl
  4007f7:	63 78 61             	movsxd edi,DWORD PTR [rax+0x61]
  4007fa:	5f                   	pop    rdi
  4007fb:	61                   	(bad)  
  4007fc:	74 65                	je     400863 <_init-0x2b5>
  4007fe:	78 69                	js     400869 <_init-0x2af>
  400800:	74 00                	je     400802 <_init-0x316>
  400802:	6d                   	ins    DWORD PTR es:[rdi],dx
  400803:	65 6d                	gs ins DWORD PTR es:[rdi],dx
  400805:	6d                   	ins    DWORD PTR es:[rdi],dx
  400806:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  400807:	76 65                	jbe    40086e <_init-0x2aa>
  400809:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
  40080c:	6c                   	ins    BYTE PTR es:[rdi],dx
  40080d:	69 62 63 5f 73 74 61 	imul   esp,DWORD PTR [rdx+0x63],0x6174735f
  400814:	72 74                	jb     40088a <_init-0x28e>
  400816:	5f                   	pop    rdi
  400817:	6d                   	ins    DWORD PTR es:[rdi],dx
  400818:	61                   	(bad)  
  400819:	69 6e 00 47 43 43 5f 	imul   ebp,DWORD PTR [rsi+0x0],0x5f434347
  400820:	33 2e                	xor    ebp,DWORD PTR [rsi]
  400822:	30 00                	xor    BYTE PTR [rax],al
  400824:	47                   	rex.RXB
  400825:	4c                   	rex.WR
  400826:	49                   	rex.WB
  400827:	42                   	rex.X
  400828:	43 5f                	rex.XB pop r15
  40082a:	32 2e                	xor    ch,BYTE PTR [rsi]
  40082c:	32 2e                	xor    ch,BYTE PTR [rsi]
  40082e:	35 00 43 58 58       	xor    eax,0x58584300
  400833:	41                   	rex.B
  400834:	42                   	rex.X
  400835:	49 5f                	rex.WB pop r15
  400837:	31 2e                	xor    DWORD PTR [rsi],ebp
  400839:	33 00                	xor    eax,DWORD PTR [rax]
  40083b:	47                   	rex.RXB
  40083c:	4c                   	rex.WR
  40083d:	49                   	rex.WB
  40083e:	42                   	rex.X
  40083f:	43 58                	rex.XB pop r8
  400841:	58                   	pop    rax
  400842:	5f                   	pop    rdi
  400843:	33 2e                	xor    ebp,DWORD PTR [rsi]
  400845:	34 2e                	xor    al,0x2e
  400847:	32 31                	xor    dh,BYTE PTR [rcx]
  400849:	00 47 4c             	add    BYTE PTR [rdi+0x4c],al
  40084c:	49                   	rex.WB
  40084d:	42                   	rex.X
  40084e:	43 58                	rex.XB pop r8
  400850:	58                   	pop    rax
  400851:	5f                   	pop    rdi
  400852:	33 2e                	xor    ebp,DWORD PTR [rsi]
  400854:	34 00                	xor    al,0x0

Disassembly of section .gnu.version:

0000000000400856 <.gnu.version>:
  400856:	00 00                	add    BYTE PTR [rax],al
  400858:	02 00                	add    al,BYTE PTR [rax]
  40085a:	00 00                	add    BYTE PTR [rax],al
  40085c:	02 00                	add    al,BYTE PTR [rax]
  40085e:	02 00                	add    al,BYTE PTR [rax]
  400860:	03 00                	add    eax,DWORD PTR [rax]
  400862:	03 00                	add    eax,DWORD PTR [rax]
  400864:	04 00                	add    al,0x0
  400866:	04 00                	add    al,0x0
  400868:	03 00                	add    eax,DWORD PTR [rax]
  40086a:	04 00                	add    al,0x0
  40086c:	02 00                	add    al,BYTE PTR [rax]
  40086e:	04 00                	add    al,0x0
  400870:	02 00                	add    al,BYTE PTR [rax]
  400872:	04 00                	add    al,0x0
  400874:	02 00                	add    al,BYTE PTR [rax]
  400876:	06                   	(bad)  
  400877:	00 04 00             	add    BYTE PTR [rax+rax*1],al
  40087a:	04 00                	add    al,0x0
  40087c:	02 00                	add    al,BYTE PTR [rax]
  40087e:	02 00                	add    al,BYTE PTR [rax]
  400880:	02 00                	add    al,BYTE PTR [rax]
  400882:	05                   	.byte 0x5
	...

Disassembly of section .gnu.version_r:

0000000000400888 <.gnu.version_r>:
  400888:	01 00                	add    DWORD PTR [rax],eax
  40088a:	01 00                	add    DWORD PTR [rax],eax
  40088c:	d6                   	(bad)  
  40088d:	02 00                	add    al,BYTE PTR [rax]
  40088f:	00 10                	add    BYTE PTR [rax],dl
  400891:	00 00                	add    BYTE PTR [rax],al
  400893:	00 20                	add    BYTE PTR [rax],ah
  400895:	00 00                	add    BYTE PTR [rax],al
  400897:	00 50 26             	add    BYTE PTR [rax+0x26],dl
  40089a:	79 0b                	jns    4008a7 <_init-0x271>
  40089c:	00 00                	add    BYTE PTR [rax],al
  40089e:	06                   	(bad)  
  40089f:	00 24 03             	add    BYTE PTR [rbx+rax*1],ah
  4008a2:	00 00                	add    BYTE PTR [rax],al
  4008a4:	00 00                	add    BYTE PTR [rax],al
  4008a6:	00 00                	add    BYTE PTR [rax],al
  4008a8:	01 00                	add    DWORD PTR [rax],eax
  4008aa:	01 00                	add    DWORD PTR [rax],eax
  4008ac:	f3 02 00             	repz add al,BYTE PTR [rax]
  4008af:	00 10                	add    BYTE PTR [rax],dl
  4008b1:	00 00                	add    BYTE PTR [rax],al
  4008b3:	00 20                	add    BYTE PTR [rax],ah
  4008b5:	00 00                	add    BYTE PTR [rax],al
  4008b7:	00 75 1a             	add    BYTE PTR [rbp+0x1a],dh
  4008ba:	69 09 00 00 03 00    	imul   ecx,DWORD PTR [rcx],0x30000
  4008c0:	2c 03                	sub    al,0x3
  4008c2:	00 00                	add    BYTE PTR [rax],al
  4008c4:	00 00                	add    BYTE PTR [rax],al
  4008c6:	00 00                	add    BYTE PTR [rax],al
  4008c8:	01 00                	add    DWORD PTR [rax],eax
  4008ca:	03 00                	add    eax,DWORD PTR [rax]
  4008cc:	01 00                	add    DWORD PTR [rax],eax
  4008ce:	00 00                	add    BYTE PTR [rax],al
  4008d0:	10 00                	adc    BYTE PTR [rax],al
  4008d2:	00 00                	add    BYTE PTR [rax],al
  4008d4:	00 00                	add    BYTE PTR [rax],al
  4008d6:	00 00                	add    BYTE PTR [rax],al
  4008d8:	d3 af 6b 05 00 00    	shr    DWORD PTR [rdi+0x56b],cl
  4008de:	05 00 38 03 00       	add    eax,0x33800
  4008e3:	00 10                	add    BYTE PTR [rax],dl
  4008e5:	00 00                	add    BYTE PTR [rax],al
  4008e7:	00 71 f8             	add    BYTE PTR [rcx-0x8],dh
  4008ea:	97                   	xchg   edi,eax
  4008eb:	02 00                	add    al,BYTE PTR [rax]
  4008ed:	00 04 00             	add    BYTE PTR [rax+rax*1],al
  4008f0:	43 03 00             	rex.XB add eax,DWORD PTR [r8]
  4008f3:	00 10                	add    BYTE PTR [rax],dl
  4008f5:	00 00                	add    BYTE PTR [rax],al
  4008f7:	00 74 29 92          	add    BYTE PTR [rcx+rbp*1-0x6e],dh
  4008fb:	08 00                	or     BYTE PTR [rax],al
  4008fd:	00 02                	add    BYTE PTR [rdx],al
  4008ff:	00 52 03             	add    BYTE PTR [rdx+0x3],dl
  400902:	00 00                	add    BYTE PTR [rax],al
  400904:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .rela.dyn:

0000000000400908 <.rela.dyn>:
  400908:	f8                   	clc    
  400909:	4f 60                	rex.WRXB (bad) 
  40090b:	00 00                	add    BYTE PTR [rax],al
  40090d:	00 00                	add    BYTE PTR [rax],al
  40090f:	00 06                	add    BYTE PTR [rsi],al
  400911:	00 00                	add    BYTE PTR [rax],al
  400913:	00 02                	add    BYTE PTR [rdx],al
	...
  40091d:	00 00                	add    BYTE PTR [rax],al
  40091f:	00 e0                	add    al,ah
  400921:	50                   	push   rax
  400922:	60                   	(bad)  
  400923:	00 00                	add    BYTE PTR [rax],al
  400925:	00 00                	add    BYTE PTR [rax],al
  400927:	00 05 00 00 00 15    	add    BYTE PTR [rip+0x15000000],al        # 1540092d <_end+0x14dfb735>
	...

Disassembly of section .rela.plt:

0000000000400938 <.rela.plt>:
  400938:	18 50 60             	sbb    BYTE PTR [rax+0x60],dl
  40093b:	00 00                	add    BYTE PTR [rax],al
  40093d:	00 00                	add    BYTE PTR [rax],al
  40093f:	00 07                	add    BYTE PTR [rdi],al
  400941:	00 00                	add    BYTE PTR [rax],al
  400943:	00 01                	add    BYTE PTR [rcx],al
	...
  40094d:	00 00                	add    BYTE PTR [rax],al
  40094f:	00 20                	add    BYTE PTR [rax],ah
  400951:	50                   	push   rax
  400952:	60                   	(bad)  
  400953:	00 00                	add    BYTE PTR [rax],al
  400955:	00 00                	add    BYTE PTR [rax],al
  400957:	00 07                	add    BYTE PTR [rdi],al
  400959:	00 00                	add    BYTE PTR [rax],al
  40095b:	00 03                	add    BYTE PTR [rbx],al
	...
  400965:	00 00                	add    BYTE PTR [rax],al
  400967:	00 28                	add    BYTE PTR [rax],ch
  400969:	50                   	push   rax
  40096a:	60                   	(bad)  
  40096b:	00 00                	add    BYTE PTR [rax],al
  40096d:	00 00                	add    BYTE PTR [rax],al
  40096f:	00 07                	add    BYTE PTR [rdi],al
  400971:	00 00                	add    BYTE PTR [rax],al
  400973:	00 04 00             	add    BYTE PTR [rax+rax*1],al
	...
  40097e:	00 00                	add    BYTE PTR [rax],al
  400980:	30 50 60             	xor    BYTE PTR [rax+0x60],dl
  400983:	00 00                	add    BYTE PTR [rax],al
  400985:	00 00                	add    BYTE PTR [rax],al
  400987:	00 07                	add    BYTE PTR [rdi],al
  400989:	00 00                	add    BYTE PTR [rax],al
  40098b:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 400991 <_init-0x187>
  400991:	00 00                	add    BYTE PTR [rax],al
  400993:	00 00                	add    BYTE PTR [rax],al
  400995:	00 00                	add    BYTE PTR [rax],al
  400997:	00 38                	add    BYTE PTR [rax],bh
  400999:	50                   	push   rax
  40099a:	60                   	(bad)  
  40099b:	00 00                	add    BYTE PTR [rax],al
  40099d:	00 00                	add    BYTE PTR [rax],al
  40099f:	00 07                	add    BYTE PTR [rdi],al
  4009a1:	00 00                	add    BYTE PTR [rax],al
  4009a3:	00 06                	add    BYTE PTR [rsi],al
	...
  4009ad:	00 00                	add    BYTE PTR [rax],al
  4009af:	00 40 50             	add    BYTE PTR [rax+0x50],al
  4009b2:	60                   	(bad)  
  4009b3:	00 00                	add    BYTE PTR [rax],al
  4009b5:	00 00                	add    BYTE PTR [rax],al
  4009b7:	00 07                	add    BYTE PTR [rdi],al
  4009b9:	00 00                	add    BYTE PTR [rax],al
  4009bb:	00 14 00             	add    BYTE PTR [rax+rax*1],dl
	...
  4009c6:	00 00                	add    BYTE PTR [rax],al
  4009c8:	48 50                	rex.W push rax
  4009ca:	60                   	(bad)  
  4009cb:	00 00                	add    BYTE PTR [rax],al
  4009cd:	00 00                	add    BYTE PTR [rax],al
  4009cf:	00 07                	add    BYTE PTR [rdi],al
  4009d1:	00 00                	add    BYTE PTR [rax],al
  4009d3:	00 07                	add    BYTE PTR [rdi],al
	...
  4009dd:	00 00                	add    BYTE PTR [rax],al
  4009df:	00 50 50             	add    BYTE PTR [rax+0x50],dl
  4009e2:	60                   	(bad)  
  4009e3:	00 00                	add    BYTE PTR [rax],al
  4009e5:	00 00                	add    BYTE PTR [rax],al
  4009e7:	00 07                	add    BYTE PTR [rdi],al
  4009e9:	00 00                	add    BYTE PTR [rax],al
  4009eb:	00 08                	add    BYTE PTR [rax],cl
	...
  4009f5:	00 00                	add    BYTE PTR [rax],al
  4009f7:	00 58 50             	add    BYTE PTR [rax+0x50],bl
  4009fa:	60                   	(bad)  
  4009fb:	00 00                	add    BYTE PTR [rax],al
  4009fd:	00 00                	add    BYTE PTR [rax],al
  4009ff:	00 07                	add    BYTE PTR [rdi],al
  400a01:	00 00                	add    BYTE PTR [rax],al
  400a03:	00 09                	add    BYTE PTR [rcx],cl
	...
  400a0d:	00 00                	add    BYTE PTR [rax],al
  400a0f:	00 60 50             	add    BYTE PTR [rax+0x50],ah
  400a12:	60                   	(bad)  
  400a13:	00 00                	add    BYTE PTR [rax],al
  400a15:	00 00                	add    BYTE PTR [rax],al
  400a17:	00 07                	add    BYTE PTR [rdi],al
  400a19:	00 00                	add    BYTE PTR [rax],al
  400a1b:	00 0a                	add    BYTE PTR [rdx],cl
	...
  400a25:	00 00                	add    BYTE PTR [rax],al
  400a27:	00 68 50             	add    BYTE PTR [rax+0x50],ch
  400a2a:	60                   	(bad)  
  400a2b:	00 00                	add    BYTE PTR [rax],al
  400a2d:	00 00                	add    BYTE PTR [rax],al
  400a2f:	00 07                	add    BYTE PTR [rdi],al
  400a31:	00 00                	add    BYTE PTR [rax],al
  400a33:	00 0b                	add    BYTE PTR [rbx],cl
	...
  400a3d:	00 00                	add    BYTE PTR [rax],al
  400a3f:	00 70 50             	add    BYTE PTR [rax+0x50],dh
  400a42:	60                   	(bad)  
  400a43:	00 00                	add    BYTE PTR [rax],al
  400a45:	00 00                	add    BYTE PTR [rax],al
  400a47:	00 07                	add    BYTE PTR [rdi],al
  400a49:	00 00                	add    BYTE PTR [rax],al
  400a4b:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
	...
  400a56:	00 00                	add    BYTE PTR [rax],al
  400a58:	78 50                	js     400aaa <_init-0x6e>
  400a5a:	60                   	(bad)  
  400a5b:	00 00                	add    BYTE PTR [rax],al
  400a5d:	00 00                	add    BYTE PTR [rax],al
  400a5f:	00 07                	add    BYTE PTR [rdi],al
  400a61:	00 00                	add    BYTE PTR [rax],al
  400a63:	00 0d 00 00 00 00    	add    BYTE PTR [rip+0x0],cl        # 400a69 <_init-0xaf>
  400a69:	00 00                	add    BYTE PTR [rax],al
  400a6b:	00 00                	add    BYTE PTR [rax],al
  400a6d:	00 00                	add    BYTE PTR [rax],al
  400a6f:	00 80 50 60 00 00    	add    BYTE PTR [rax+0x6050],al
  400a75:	00 00                	add    BYTE PTR [rax],al
  400a77:	00 07                	add    BYTE PTR [rdi],al
  400a79:	00 00                	add    BYTE PTR [rax],al
  400a7b:	00 13                	add    BYTE PTR [rbx],dl
	...
  400a85:	00 00                	add    BYTE PTR [rax],al
  400a87:	00 88 50 60 00 00    	add    BYTE PTR [rax+0x6050],cl
  400a8d:	00 00                	add    BYTE PTR [rax],al
  400a8f:	00 07                	add    BYTE PTR [rdi],al
  400a91:	00 00                	add    BYTE PTR [rax],al
  400a93:	00 16                	add    BYTE PTR [rsi],dl
	...
  400a9d:	00 00                	add    BYTE PTR [rax],al
  400a9f:	00 90 50 60 00 00    	add    BYTE PTR [rax+0x6050],dl
  400aa5:	00 00                	add    BYTE PTR [rax],al
  400aa7:	00 07                	add    BYTE PTR [rdi],al
  400aa9:	00 00                	add    BYTE PTR [rax],al
  400aab:	00 0e                	add    BYTE PTR [rsi],cl
	...
  400ab5:	00 00                	add    BYTE PTR [rax],al
  400ab7:	00 98 50 60 00 00    	add    BYTE PTR [rax+0x6050],bl
  400abd:	00 00                	add    BYTE PTR [rax],al
  400abf:	00 07                	add    BYTE PTR [rdi],al
  400ac1:	00 00                	add    BYTE PTR [rax],al
  400ac3:	00 0f                	add    BYTE PTR [rdi],cl
	...
  400acd:	00 00                	add    BYTE PTR [rax],al
  400acf:	00 a0 50 60 00 00    	add    BYTE PTR [rax+0x6050],ah
  400ad5:	00 00                	add    BYTE PTR [rax],al
  400ad7:	00 07                	add    BYTE PTR [rdi],al
  400ad9:	00 00                	add    BYTE PTR [rax],al
  400adb:	00 10                	add    BYTE PTR [rax],dl
	...
  400ae5:	00 00                	add    BYTE PTR [rax],al
  400ae7:	00 a8 50 60 00 00    	add    BYTE PTR [rax+0x6050],ch
  400aed:	00 00                	add    BYTE PTR [rax],al
  400aef:	00 07                	add    BYTE PTR [rdi],al
  400af1:	00 00                	add    BYTE PTR [rax],al
  400af3:	00 11                	add    BYTE PTR [rcx],dl
	...
  400afd:	00 00                	add    BYTE PTR [rax],al
  400aff:	00 b0 50 60 00 00    	add    BYTE PTR [rax+0x6050],dh
  400b05:	00 00                	add    BYTE PTR [rax],al
  400b07:	00 07                	add    BYTE PTR [rdi],al
  400b09:	00 00                	add    BYTE PTR [rax],al
  400b0b:	00 12                	add    BYTE PTR [rdx],dl
	...

Disassembly of section .init:

0000000000400b18 <_init>:
  400b18:	48 83 ec 08          	sub    rsp,0x8
  400b1c:	48 8b 05 d5 44 20 00 	mov    rax,QWORD PTR [rip+0x2044d5]        # 604ff8 <_DYNAMIC+0x200>
  400b23:	48 85 c0             	test   rax,rax
  400b26:	74 05                	je     400b2d <_init+0x15>
  400b28:	e8 63 01 00 00       	call   400c90 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc@plt+0x10>
  400b2d:	48 83 c4 08          	add    rsp,0x8
  400b31:	c3                   	ret    

Disassembly of section .plt:

0000000000400b40 <_ZSt20__throw_length_errorPKc@plt-0x10>:
  400b40:	ff 35 c2 44 20 00    	push   QWORD PTR [rip+0x2044c2]        # 605008 <_GLOBAL_OFFSET_TABLE_+0x8>
  400b46:	ff 25 c4 44 20 00    	jmp    QWORD PTR [rip+0x2044c4]        # 605010 <_GLOBAL_OFFSET_TABLE_+0x10>
  400b4c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000400b50 <_ZSt20__throw_length_errorPKc@plt>:
  400b50:	ff 25 c2 44 20 00    	jmp    QWORD PTR [rip+0x2044c2]        # 605018 <_GLOBAL_OFFSET_TABLE_+0x18>
  400b56:	68 00 00 00 00       	push   0x0
  400b5b:	e9 e0 ff ff ff       	jmp    400b40 <_init+0x28>

0000000000400b60 <_ZdlPv@plt>:
  400b60:	ff 25 ba 44 20 00    	jmp    QWORD PTR [rip+0x2044ba]        # 605020 <_GLOBAL_OFFSET_TABLE_+0x20>
  400b66:	68 01 00 00 00       	push   0x1
  400b6b:	e9 d0 ff ff ff       	jmp    400b40 <_init+0x28>

0000000000400b70 <_ZNSt8ios_base4InitC1Ev@plt>:
  400b70:	ff 25 b2 44 20 00    	jmp    QWORD PTR [rip+0x2044b2]        # 605028 <_GLOBAL_OFFSET_TABLE_+0x28>
  400b76:	68 02 00 00 00       	push   0x2
  400b7b:	e9 c0 ff ff ff       	jmp    400b40 <_init+0x28>

0000000000400b80 <__libc_start_main@plt>:
  400b80:	ff 25 aa 44 20 00    	jmp    QWORD PTR [rip+0x2044aa]        # 605030 <_GLOBAL_OFFSET_TABLE_+0x30>
  400b86:	68 03 00 00 00       	push   0x3
  400b8b:	e9 b0 ff ff ff       	jmp    400b40 <_init+0x28>

0000000000400b90 <__cxa_atexit@plt>:
  400b90:	ff 25 a2 44 20 00    	jmp    QWORD PTR [rip+0x2044a2]        # 605038 <_GLOBAL_OFFSET_TABLE_+0x38>
  400b96:	68 04 00 00 00       	push   0x4
  400b9b:	e9 a0 ff ff ff       	jmp    400b40 <_init+0x28>

0000000000400ba0 <_ZNSt8ios_base4InitD1Ev@plt>:
  400ba0:	ff 25 9a 44 20 00    	jmp    QWORD PTR [rip+0x20449a]        # 605040 <_GLOBAL_OFFSET_TABLE_+0x40>
  400ba6:	68 05 00 00 00       	push   0x5
  400bab:	e9 90 ff ff ff       	jmp    400b40 <_init+0x28>

0000000000400bb0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev@plt>:
  400bb0:	ff 25 92 44 20 00    	jmp    QWORD PTR [rip+0x204492]        # 605048 <_GLOBAL_OFFSET_TABLE_+0x48>
  400bb6:	68 06 00 00 00       	push   0x6
  400bbb:	e9 80 ff ff ff       	jmp    400b40 <_init+0x28>

0000000000400bc0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>:
  400bc0:	ff 25 8a 44 20 00    	jmp    QWORD PTR [rip+0x20448a]        # 605050 <_GLOBAL_OFFSET_TABLE_+0x50>
  400bc6:	68 07 00 00 00       	push   0x7
  400bcb:	e9 70 ff ff ff       	jmp    400b40 <_init+0x28>

0000000000400bd0 <memmove@plt>:
  400bd0:	ff 25 82 44 20 00    	jmp    QWORD PTR [rip+0x204482]        # 605058 <_GLOBAL_OFFSET_TABLE_+0x58>
  400bd6:	68 08 00 00 00       	push   0x8
  400bdb:	e9 60 ff ff ff       	jmp    400b40 <_init+0x28>

0000000000400be0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv@plt>:
  400be0:	ff 25 7a 44 20 00    	jmp    QWORD PTR [rip+0x20447a]        # 605060 <_GLOBAL_OFFSET_TABLE_+0x60>
  400be6:	68 09 00 00 00       	push   0x9
  400beb:	e9 50 ff ff ff       	jmp    400b40 <_init+0x28>

0000000000400bf0 <_ZNSolsEPFRSoS_E@plt>:
  400bf0:	ff 25 72 44 20 00    	jmp    QWORD PTR [rip+0x204472]        # 605068 <_GLOBAL_OFFSET_TABLE_+0x68>
  400bf6:	68 0a 00 00 00       	push   0xa
  400bfb:	e9 40 ff ff ff       	jmp    400b40 <_init+0x28>

0000000000400c00 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9push_backEc@plt>:
  400c00:	ff 25 6a 44 20 00    	jmp    QWORD PTR [rip+0x20446a]        # 605070 <_GLOBAL_OFFSET_TABLE_+0x70>
  400c06:	68 0b 00 00 00       	push   0xb
  400c0b:	e9 30 ff ff ff       	jmp    400b40 <_init+0x28>

0000000000400c10 <_ZSt17__throw_bad_allocv@plt>:
  400c10:	ff 25 62 44 20 00    	jmp    QWORD PTR [rip+0x204462]        # 605078 <_GLOBAL_OFFSET_TABLE_+0x78>
  400c16:	68 0c 00 00 00       	push   0xc
  400c1b:	e9 20 ff ff ff       	jmp    400b40 <_init+0x28>

0000000000400c20 <_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@plt>:
  400c20:	ff 25 5a 44 20 00    	jmp    QWORD PTR [rip+0x20445a]        # 605080 <_GLOBAL_OFFSET_TABLE_+0x80>
  400c26:	68 0d 00 00 00       	push   0xd
  400c2b:	e9 10 ff ff ff       	jmp    400b40 <_init+0x28>

0000000000400c30 <__gxx_personality_v0@plt>:
  400c30:	ff 25 52 44 20 00    	jmp    QWORD PTR [rip+0x204452]        # 605088 <_GLOBAL_OFFSET_TABLE_+0x88>
  400c36:	68 0e 00 00 00       	push   0xe
  400c3b:	e9 00 ff ff ff       	jmp    400b40 <_init+0x28>

0000000000400c40 <_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE@plt>:
  400c40:	ff 25 4a 44 20 00    	jmp    QWORD PTR [rip+0x20444a]        # 605090 <_GLOBAL_OFFSET_TABLE_+0x90>
  400c46:	68 0f 00 00 00       	push   0xf
  400c4b:	e9 f0 fe ff ff       	jmp    400b40 <_init+0x28>

0000000000400c50 <_Znwm@plt>:
  400c50:	ff 25 42 44 20 00    	jmp    QWORD PTR [rip+0x204442]        # 605098 <_GLOBAL_OFFSET_TABLE_+0x98>
  400c56:	68 10 00 00 00       	push   0x10
  400c5b:	e9 e0 fe ff ff       	jmp    400b40 <_init+0x28>

0000000000400c60 <_Unwind_Resume@plt>:
  400c60:	ff 25 3a 44 20 00    	jmp    QWORD PTR [rip+0x20443a]        # 6050a0 <_GLOBAL_OFFSET_TABLE_+0xa0>
  400c66:	68 11 00 00 00       	push   0x11
  400c6b:	e9 d0 fe ff ff       	jmp    400b40 <_init+0x28>

0000000000400c70 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEixEm@plt>:
  400c70:	ff 25 32 44 20 00    	jmp    QWORD PTR [rip+0x204432]        # 6050a8 <_GLOBAL_OFFSET_TABLE_+0xa8>
  400c76:	68 12 00 00 00       	push   0x12
  400c7b:	e9 c0 fe ff ff       	jmp    400b40 <_init+0x28>

0000000000400c80 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc@plt>:
  400c80:	ff 25 2a 44 20 00    	jmp    QWORD PTR [rip+0x20442a]        # 6050b0 <_GLOBAL_OFFSET_TABLE_+0xb0>
  400c86:	68 13 00 00 00       	push   0x13
  400c8b:	e9 b0 fe ff ff       	jmp    400b40 <_init+0x28>

Disassembly of section .plt.got:

0000000000400c90 <.plt.got>:
  400c90:	ff 25 62 43 20 00    	jmp    QWORD PTR [rip+0x204362]        # 604ff8 <_DYNAMIC+0x200>
  400c96:	66 90                	xchg   ax,ax

Disassembly of section .text:

0000000000400ca0 <_start>:
  400ca0:	31 ed                	xor    ebp,ebp
  400ca2:	49 89 d1             	mov    r9,rdx
  400ca5:	5e                   	pop    rsi
  400ca6:	48 89 e2             	mov    rdx,rsp
  400ca9:	48 83 e4 f0          	and    rsp,0xfffffffffffffff0
  400cad:	50                   	push   rax
  400cae:	54                   	push   rsp
  400caf:	49 c7 c0 60 31 40 00 	mov    r8,0x403160
  400cb6:	48 c7 c1 f0 30 40 00 	mov    rcx,0x4030f0
  400cbd:	48 c7 c7 a8 12 40 00 	mov    rdi,0x4012a8
  400cc4:	e8 b7 fe ff ff       	call   400b80 <__libc_start_main@plt>
  400cc9:	f4                   	hlt    
  400cca:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000400cd0 <deregister_tm_clones>:
  400cd0:	b8 cf 50 60 00       	mov    eax,0x6050cf
  400cd5:	55                   	push   rbp
  400cd6:	48 2d c8 50 60 00    	sub    rax,0x6050c8
  400cdc:	48 83 f8 0e          	cmp    rax,0xe
  400ce0:	48 89 e5             	mov    rbp,rsp
  400ce3:	76 1b                	jbe    400d00 <deregister_tm_clones+0x30>
  400ce5:	b8 00 00 00 00       	mov    eax,0x0
  400cea:	48 85 c0             	test   rax,rax
  400ced:	74 11                	je     400d00 <deregister_tm_clones+0x30>
  400cef:	5d                   	pop    rbp
  400cf0:	bf c8 50 60 00       	mov    edi,0x6050c8
  400cf5:	ff e0                	jmp    rax
  400cf7:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
  400cfe:	00 00 
  400d00:	5d                   	pop    rbp
  400d01:	c3                   	ret    
  400d02:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
  400d06:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  400d0d:	00 00 00 

0000000000400d10 <register_tm_clones>:
  400d10:	be c8 50 60 00       	mov    esi,0x6050c8
  400d15:	55                   	push   rbp
  400d16:	48 81 ee c8 50 60 00 	sub    rsi,0x6050c8
  400d1d:	48 c1 fe 03          	sar    rsi,0x3
  400d21:	48 89 e5             	mov    rbp,rsp
  400d24:	48 89 f0             	mov    rax,rsi
  400d27:	48 c1 e8 3f          	shr    rax,0x3f
  400d2b:	48 01 c6             	add    rsi,rax
  400d2e:	48 d1 fe             	sar    rsi,1
  400d31:	74 15                	je     400d48 <register_tm_clones+0x38>
  400d33:	b8 00 00 00 00       	mov    eax,0x0
  400d38:	48 85 c0             	test   rax,rax
  400d3b:	74 0b                	je     400d48 <register_tm_clones+0x38>
  400d3d:	5d                   	pop    rbp
  400d3e:	bf c8 50 60 00       	mov    edi,0x6050c8
  400d43:	ff e0                	jmp    rax
  400d45:	0f 1f 00             	nop    DWORD PTR [rax]
  400d48:	5d                   	pop    rbp
  400d49:	c3                   	ret    
  400d4a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000400d50 <__do_global_dtors_aux>:
  400d50:	80 3d 99 44 20 00 00 	cmp    BYTE PTR [rip+0x204499],0x0        # 6051f0 <completed.6979>
  400d57:	75 11                	jne    400d6a <__do_global_dtors_aux+0x1a>
  400d59:	55                   	push   rbp
  400d5a:	48 89 e5             	mov    rbp,rsp
  400d5d:	e8 6e ff ff ff       	call   400cd0 <deregister_tm_clones>
  400d62:	5d                   	pop    rbp
  400d63:	c6 05 86 44 20 00 01 	mov    BYTE PTR [rip+0x204486],0x1        # 6051f0 <completed.6979>
  400d6a:	f3 c3                	repz ret 
  400d6c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000400d70 <frame_dummy>:
  400d70:	bf f0 4d 60 00       	mov    edi,0x604df0
  400d75:	48 83 3f 00          	cmp    QWORD PTR [rdi],0x0
  400d79:	75 05                	jne    400d80 <frame_dummy+0x10>
  400d7b:	eb 93                	jmp    400d10 <register_tm_clones>
  400d7d:	0f 1f 00             	nop    DWORD PTR [rax]
  400d80:	b8 00 00 00 00       	mov    eax,0x0
  400d85:	48 85 c0             	test   rax,rax
  400d88:	74 f1                	je     400d7b <frame_dummy+0xb>
  400d8a:	55                   	push   rbp
  400d8b:	48 89 e5             	mov    rbp,rsp
  400d8e:	ff d0                	call   rax
  400d90:	5d                   	pop    rbp
  400d91:	e9 7a ff ff ff       	jmp    400d10 <register_tm_clones>

0000000000400d96 <_Z5add_bRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_RjS6_>:
  400d96:	55                   	push   rbp
  400d97:	48 89 e5             	mov    rbp,rsp
  400d9a:	41 54                	push   r12
  400d9c:	53                   	push   rbx
  400d9d:	48 81 ec 70 01 00 00 	sub    rsp,0x170
  400da4:	48 89 bd a8 fe ff ff 	mov    QWORD PTR [rbp-0x158],rdi
  400dab:	48 89 b5 a0 fe ff ff 	mov    QWORD PTR [rbp-0x160],rsi
  400db2:	48 89 95 98 fe ff ff 	mov    QWORD PTR [rbp-0x168],rdx
  400db9:	48 89 8d 90 fe ff ff 	mov    QWORD PTR [rbp-0x170],rcx
  400dc0:	4c 89 85 88 fe ff ff 	mov    QWORD PTR [rbp-0x178],r8
  400dc7:	48 8b 95 88 fe ff ff 	mov    rdx,QWORD PTR [rbp-0x178]
  400dce:	48 8b 85 90 fe ff ff 	mov    rax,QWORD PTR [rbp-0x170]
  400dd5:	48 89 d6             	mov    rsi,rdx
  400dd8:	48 89 c7             	mov    rdi,rax
  400ddb:	e8 4b 0b 00 00       	call   40192b <_Z6GetMaxIjET_RS0_S1_>
  400de0:	89 45 d4             	mov    DWORD PTR [rbp-0x2c],eax
  400de3:	48 8d 85 3c ff ff ff 	lea    rax,[rbp-0xc4]
  400dea:	48 89 c7             	mov    rdi,rax
  400ded:	e8 66 0b 00 00       	call   401958 <_ZNSaIbEC1Ev>
  400df2:	c6 85 3d ff ff ff 00 	mov    BYTE PTR [rbp-0xc3],0x0
  400df9:	8b 75 d4             	mov    esi,DWORD PTR [rbp-0x2c]
  400dfc:	48 8d 8d 3c ff ff ff 	lea    rcx,[rbp-0xc4]
  400e03:	48 8d 95 3d ff ff ff 	lea    rdx,[rbp-0xc3]
  400e0a:	48 8d 85 10 ff ff ff 	lea    rax,[rbp-0xf0]
  400e11:	48 89 c7             	mov    rdi,rax
  400e14:	e8 77 0b 00 00       	call   401990 <_ZNSt6vectorIbSaIbEEC1EmRKbRKS0_>
  400e19:	48 8d 85 3c ff ff ff 	lea    rax,[rbp-0xc4]
  400e20:	48 89 c7             	mov    rdi,rax
  400e23:	e8 4c 0b 00 00       	call   401974 <_ZNSaIbED1Ev>
  400e28:	48 8d 85 3e ff ff ff 	lea    rax,[rbp-0xc2]
  400e2f:	48 89 c7             	mov    rdi,rax
  400e32:	e8 21 0b 00 00       	call   401958 <_ZNSaIbEC1Ev>
  400e37:	c6 85 3f ff ff ff 00 	mov    BYTE PTR [rbp-0xc1],0x0
  400e3e:	8b 75 d4             	mov    esi,DWORD PTR [rbp-0x2c]
  400e41:	48 8d 8d 3e ff ff ff 	lea    rcx,[rbp-0xc2]
  400e48:	48 8d 95 3f ff ff ff 	lea    rdx,[rbp-0xc1]
  400e4f:	48 8d 85 e0 fe ff ff 	lea    rax,[rbp-0x120]
  400e56:	48 89 c7             	mov    rdi,rax
  400e59:	e8 32 0b 00 00       	call   401990 <_ZNSt6vectorIbSaIbEEC1EmRKbRKS0_>
  400e5e:	48 8d 85 3e ff ff ff 	lea    rax,[rbp-0xc2]
  400e65:	48 89 c7             	mov    rdi,rax
  400e68:	e8 07 0b 00 00       	call   401974 <_ZNSaIbED1Ev>
  400e6d:	48 8d 85 b0 fe ff ff 	lea    rax,[rbp-0x150]
  400e74:	48 89 c7             	mov    rdi,rax
  400e77:	e8 d2 0b 00 00       	call   401a4e <_ZNSt6vectorIbSaIbEEC1Ev>
  400e7c:	48 8b 85 90 fe ff ff 	mov    rax,QWORD PTR [rbp-0x170]
  400e83:	8b 00                	mov    eax,DWORD PTR [rax]
  400e85:	83 e8 01             	sub    eax,0x1
  400e88:	89 45 ec             	mov    DWORD PTR [rbp-0x14],eax
  400e8b:	c7 45 e8 00 00 00 00 	mov    DWORD PTR [rbp-0x18],0x0
  400e92:	83 7d ec 00          	cmp    DWORD PTR [rbp-0x14],0x0
  400e96:	0f 8e 98 00 00 00    	jle    400f34 <_Z5add_bRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_RjS6_+0x19e>
  400e9c:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
  400e9f:	48 63 d0             	movsxd rdx,eax
  400ea2:	48 8b 85 a0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x160]
  400ea9:	48 89 d6             	mov    rsi,rdx
  400eac:	48 89 c7             	mov    rdi,rax
  400eaf:	e8 bc fd ff ff       	call   400c70 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEixEm@plt>
  400eb4:	0f b6 08             	movzx  ecx,BYTE PTR [rax]
  400eb7:	66 0f be d1          	movsx  dx,cl
  400ebb:	89 d0                	mov    eax,edx
  400ebd:	c1 e0 02             	shl    eax,0x2
  400ec0:	01 d0                	add    eax,edx
  400ec2:	c1 e0 02             	shl    eax,0x2
  400ec5:	01 d0                	add    eax,edx
  400ec7:	01 c0                	add    eax,eax
  400ec9:	01 d0                	add    eax,edx
  400ecb:	66 c1 e8 08          	shr    ax,0x8
  400ecf:	89 c2                	mov    edx,eax
  400ed1:	c0 fa 03             	sar    dl,0x3
  400ed4:	89 c8                	mov    eax,ecx
  400ed6:	c0 f8 07             	sar    al,0x7
  400ed9:	29 c2                	sub    edx,eax
  400edb:	89 d0                	mov    eax,edx
  400edd:	01 c0                	add    eax,eax
  400edf:	01 d0                	add    eax,edx
  400ee1:	c1 e0 04             	shl    eax,0x4
  400ee4:	29 c1                	sub    ecx,eax
  400ee6:	89 ca                	mov    edx,ecx
  400ee8:	84 d2                	test   dl,dl
  400eea:	0f 95 c0             	setne  al
  400eed:	0f b6 d8             	movzx  ebx,al
  400ef0:	8b 45 e8             	mov    eax,DWORD PTR [rbp-0x18]
  400ef3:	48 63 d0             	movsxd rdx,eax
  400ef6:	48 8d 85 10 ff ff ff 	lea    rax,[rbp-0xf0]
  400efd:	48 89 d6             	mov    rsi,rdx
  400f00:	48 89 c7             	mov    rdi,rax
  400f03:	e8 62 0b 00 00       	call   401a6a <_ZNSt6vectorIbSaIbEEixEm>
  400f08:	48 89 85 40 ff ff ff 	mov    QWORD PTR [rbp-0xc0],rax
  400f0f:	48 89 95 48 ff ff ff 	mov    QWORD PTR [rbp-0xb8],rdx
  400f16:	48 8d 85 40 ff ff ff 	lea    rax,[rbp-0xc0]
  400f1d:	89 de                	mov    esi,ebx
  400f1f:	48 89 c7             	mov    rdi,rax
  400f22:	e8 2d 05 00 00       	call   401454 <_ZNSt14_Bit_referenceaSEb>
  400f27:	83 6d ec 01          	sub    DWORD PTR [rbp-0x14],0x1
  400f2b:	83 45 e8 01          	add    DWORD PTR [rbp-0x18],0x1
  400f2f:	e9 5e ff ff ff       	jmp    400e92 <_Z5add_bRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_RjS6_+0xfc>
  400f34:	48 8b 85 88 fe ff ff 	mov    rax,QWORD PTR [rbp-0x178]
  400f3b:	8b 00                	mov    eax,DWORD PTR [rax]
  400f3d:	83 e8 01             	sub    eax,0x1
  400f40:	89 45 e4             	mov    DWORD PTR [rbp-0x1c],eax
  400f43:	c7 45 e0 00 00 00 00 	mov    DWORD PTR [rbp-0x20],0x0
  400f4a:	83 7d e4 00          	cmp    DWORD PTR [rbp-0x1c],0x0
  400f4e:	0f 8e 98 00 00 00    	jle    400fec <_Z5add_bRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_RjS6_+0x256>
  400f54:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
  400f57:	48 63 d0             	movsxd rdx,eax
  400f5a:	48 8b 85 98 fe ff ff 	mov    rax,QWORD PTR [rbp-0x168]
  400f61:	48 89 d6             	mov    rsi,rdx
  400f64:	48 89 c7             	mov    rdi,rax
  400f67:	e8 04 fd ff ff       	call   400c70 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEixEm@plt>
  400f6c:	0f b6 08             	movzx  ecx,BYTE PTR [rax]
  400f6f:	66 0f be d1          	movsx  dx,cl
  400f73:	89 d0                	mov    eax,edx
  400f75:	c1 e0 02             	shl    eax,0x2
  400f78:	01 d0                	add    eax,edx
  400f7a:	c1 e0 02             	shl    eax,0x2
  400f7d:	01 d0                	add    eax,edx
  400f7f:	01 c0                	add    eax,eax
  400f81:	01 d0                	add    eax,edx
  400f83:	66 c1 e8 08          	shr    ax,0x8
  400f87:	89 c2                	mov    edx,eax
  400f89:	c0 fa 03             	sar    dl,0x3
  400f8c:	89 c8                	mov    eax,ecx
  400f8e:	c0 f8 07             	sar    al,0x7
  400f91:	29 c2                	sub    edx,eax
  400f93:	89 d0                	mov    eax,edx
  400f95:	01 c0                	add    eax,eax
  400f97:	01 d0                	add    eax,edx
  400f99:	c1 e0 04             	shl    eax,0x4
  400f9c:	29 c1                	sub    ecx,eax
  400f9e:	89 ca                	mov    edx,ecx
  400fa0:	84 d2                	test   dl,dl
  400fa2:	0f 95 c0             	setne  al
  400fa5:	0f b6 d8             	movzx  ebx,al
  400fa8:	8b 45 e0             	mov    eax,DWORD PTR [rbp-0x20]
  400fab:	48 63 d0             	movsxd rdx,eax
  400fae:	48 8d 85 e0 fe ff ff 	lea    rax,[rbp-0x120]
  400fb5:	48 89 d6             	mov    rsi,rdx
  400fb8:	48 89 c7             	mov    rdi,rax
  400fbb:	e8 aa 0a 00 00       	call   401a6a <_ZNSt6vectorIbSaIbEEixEm>
  400fc0:	48 89 85 50 ff ff ff 	mov    QWORD PTR [rbp-0xb0],rax
  400fc7:	48 89 95 58 ff ff ff 	mov    QWORD PTR [rbp-0xa8],rdx
  400fce:	48 8d 85 50 ff ff ff 	lea    rax,[rbp-0xb0]
  400fd5:	89 de                	mov    esi,ebx
  400fd7:	48 89 c7             	mov    rdi,rax
  400fda:	e8 75 04 00 00       	call   401454 <_ZNSt14_Bit_referenceaSEb>
  400fdf:	83 6d e4 01          	sub    DWORD PTR [rbp-0x1c],0x1
  400fe3:	83 45 e0 01          	add    DWORD PTR [rbp-0x20],0x1
  400fe7:	e9 5e ff ff ff       	jmp    400f4a <_Z5add_bRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_RjS6_+0x1b4>
  400fec:	c7 45 dc 00 00 00 00 	mov    DWORD PTR [rbp-0x24],0x0
  400ff3:	8b 45 dc             	mov    eax,DWORD PTR [rbp-0x24]
  400ff6:	3b 45 d4             	cmp    eax,DWORD PTR [rbp-0x2c]
  400ff9:	0f 83 73 01 00 00    	jae    401172 <_Z5add_bRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_RjS6_+0x3dc>
  400fff:	8b 45 dc             	mov    eax,DWORD PTR [rbp-0x24]
  401002:	48 63 d0             	movsxd rdx,eax
  401005:	48 8d 85 10 ff ff ff 	lea    rax,[rbp-0xf0]
  40100c:	48 89 d6             	mov    rsi,rdx
  40100f:	48 89 c7             	mov    rdi,rax
  401012:	e8 53 0a 00 00       	call   401a6a <_ZNSt6vectorIbSaIbEEixEm>
  401017:	48 89 85 60 ff ff ff 	mov    QWORD PTR [rbp-0xa0],rax
  40101e:	48 89 95 68 ff ff ff 	mov    QWORD PTR [rbp-0x98],rdx
  401025:	48 8d 85 60 ff ff ff 	lea    rax,[rbp-0xa0]
  40102c:	48 89 c7             	mov    rdi,rax
  40102f:	e8 fa 03 00 00       	call   40142e <_ZNKSt14_Bit_referencecvbEv>
  401034:	89 c3                	mov    ebx,eax
  401036:	8b 45 dc             	mov    eax,DWORD PTR [rbp-0x24]
  401039:	48 63 d0             	movsxd rdx,eax
  40103c:	48 8d 85 e0 fe ff ff 	lea    rax,[rbp-0x120]
  401043:	48 89 d6             	mov    rsi,rdx
  401046:	48 89 c7             	mov    rdi,rax
  401049:	e8 1c 0a 00 00       	call   401a6a <_ZNSt6vectorIbSaIbEEixEm>
  40104e:	48 89 85 70 ff ff ff 	mov    QWORD PTR [rbp-0x90],rax
  401055:	48 89 95 78 ff ff ff 	mov    QWORD PTR [rbp-0x88],rdx
  40105c:	48 8d 85 70 ff ff ff 	lea    rax,[rbp-0x90]
  401063:	48 89 c7             	mov    rdi,rax
  401066:	e8 c3 03 00 00       	call   40142e <_ZNKSt14_Bit_referencecvbEv>
  40106b:	31 c3                	xor    ebx,eax
  40106d:	89 da                	mov    edx,ebx
  40106f:	0f b6 05 7c 41 20 00 	movzx  eax,BYTE PTR [rip+0x20417c]        # 6051f2 <_ZZ5add_bRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_RjS6_E2cc>
  401076:	38 c2                	cmp    dl,al
  401078:	0f 95 c0             	setne  al
  40107b:	0f b6 d0             	movzx  edx,al
  40107e:	48 8d 85 b0 fe ff ff 	lea    rax,[rbp-0x150]
  401085:	89 d6                	mov    esi,edx
  401087:	48 89 c7             	mov    rdi,rax
  40108a:	e8 27 0a 00 00       	call   401ab6 <_ZNSt6vectorIbSaIbEE9push_backEb>
  40108f:	8b 45 dc             	mov    eax,DWORD PTR [rbp-0x24]
  401092:	48 63 d0             	movsxd rdx,eax
  401095:	48 8d 85 10 ff ff ff 	lea    rax,[rbp-0xf0]
  40109c:	48 89 d6             	mov    rsi,rdx
  40109f:	48 89 c7             	mov    rdi,rax
  4010a2:	e8 c3 09 00 00       	call   401a6a <_ZNSt6vectorIbSaIbEEixEm>
  4010a7:	48 89 45 80          	mov    QWORD PTR [rbp-0x80],rax
  4010ab:	48 89 55 88          	mov    QWORD PTR [rbp-0x78],rdx
  4010af:	48 8d 45 80          	lea    rax,[rbp-0x80]
  4010b3:	48 89 c7             	mov    rdi,rax
  4010b6:	e8 73 03 00 00       	call   40142e <_ZNKSt14_Bit_referencecvbEv>
  4010bb:	0f b6 d8             	movzx  ebx,al
  4010be:	8b 45 dc             	mov    eax,DWORD PTR [rbp-0x24]
  4010c1:	48 63 d0             	movsxd rdx,eax
  4010c4:	48 8d 85 e0 fe ff ff 	lea    rax,[rbp-0x120]
  4010cb:	48 89 d6             	mov    rsi,rdx
  4010ce:	48 89 c7             	mov    rdi,rax
  4010d1:	e8 94 09 00 00       	call   401a6a <_ZNSt6vectorIbSaIbEEixEm>
  4010d6:	48 89 45 90          	mov    QWORD PTR [rbp-0x70],rax
  4010da:	48 89 55 98          	mov    QWORD PTR [rbp-0x68],rdx
  4010de:	48 8d 45 90          	lea    rax,[rbp-0x70]
  4010e2:	48 89 c7             	mov    rdi,rax
  4010e5:	e8 44 03 00 00       	call   40142e <_ZNKSt14_Bit_referencecvbEv>
  4010ea:	0f b6 c0             	movzx  eax,al
  4010ed:	21 c3                	and    ebx,eax
  4010ef:	8b 45 dc             	mov    eax,DWORD PTR [rbp-0x24]
  4010f2:	48 63 d0             	movsxd rdx,eax
  4010f5:	48 8d 85 10 ff ff ff 	lea    rax,[rbp-0xf0]
  4010fc:	48 89 d6             	mov    rsi,rdx
  4010ff:	48 89 c7             	mov    rdi,rax
  401102:	e8 63 09 00 00       	call   401a6a <_ZNSt6vectorIbSaIbEEixEm>
  401107:	48 89 45 a0          	mov    QWORD PTR [rbp-0x60],rax
  40110b:	48 89 55 a8          	mov    QWORD PTR [rbp-0x58],rdx
  40110f:	48 8d 45 a0          	lea    rax,[rbp-0x60]
  401113:	48 89 c7             	mov    rdi,rax
  401116:	e8 13 03 00 00       	call   40142e <_ZNKSt14_Bit_referencecvbEv>
  40111b:	41 89 c4             	mov    r12d,eax
  40111e:	8b 45 dc             	mov    eax,DWORD PTR [rbp-0x24]
  401121:	48 63 d0             	movsxd rdx,eax
  401124:	48 8d 85 e0 fe ff ff 	lea    rax,[rbp-0x120]
  40112b:	48 89 d6             	mov    rsi,rdx
  40112e:	48 89 c7             	mov    rdi,rax
  401131:	e8 34 09 00 00       	call   401a6a <_ZNSt6vectorIbSaIbEEixEm>
  401136:	48 89 45 b0          	mov    QWORD PTR [rbp-0x50],rax
  40113a:	48 89 55 b8          	mov    QWORD PTR [rbp-0x48],rdx
  40113e:	48 8d 45 b0          	lea    rax,[rbp-0x50]
  401142:	48 89 c7             	mov    rdi,rax
  401145:	e8 e4 02 00 00       	call   40142e <_ZNKSt14_Bit_referencecvbEv>
  40114a:	44 31 e0             	xor    eax,r12d
  40114d:	0f b6 d0             	movzx  edx,al
  401150:	0f b6 05 9b 40 20 00 	movzx  eax,BYTE PTR [rip+0x20409b]        # 6051f2 <_ZZ5add_bRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_RjS6_E2cc>
  401157:	0f b6 c0             	movzx  eax,al
  40115a:	21 d0                	and    eax,edx
  40115c:	09 d8                	or     eax,ebx
  40115e:	85 c0                	test   eax,eax
  401160:	0f 95 c0             	setne  al
  401163:	88 05 89 40 20 00    	mov    BYTE PTR [rip+0x204089],al        # 6051f2 <_ZZ5add_bRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_RjS6_E2cc>
  401169:	83 45 dc 01          	add    DWORD PTR [rbp-0x24],0x1
  40116d:	e9 81 fe ff ff       	jmp    400ff3 <_Z5add_bRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_RjS6_+0x25d>
  401172:	48 8b 85 a8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x158]
  401179:	48 89 c7             	mov    rdi,rax
  40117c:	e8 2f fa ff ff       	call   400bb0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev@plt>
  401181:	48 8d 85 b0 fe ff ff 	lea    rax,[rbp-0x150]
  401188:	48 89 c7             	mov    rdi,rax
  40118b:	e8 de 09 00 00       	call   401b6e <_ZNKSt6vectorIbSaIbEE4sizeEv>
  401190:	83 e8 01             	sub    eax,0x1
  401193:	89 45 d8             	mov    DWORD PTR [rbp-0x28],eax
  401196:	83 7d d8 00          	cmp    DWORD PTR [rbp-0x28],0x0
  40119a:	7e 46                	jle    4011e2 <_Z5add_bRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_RjS6_+0x44c>
  40119c:	8b 45 d8             	mov    eax,DWORD PTR [rbp-0x28]
  40119f:	48 63 d0             	movsxd rdx,eax
  4011a2:	48 8d 85 b0 fe ff ff 	lea    rax,[rbp-0x150]
  4011a9:	48 89 d6             	mov    rsi,rdx
  4011ac:	48 89 c7             	mov    rdi,rax
  4011af:	e8 b6 08 00 00       	call   401a6a <_ZNSt6vectorIbSaIbEEixEm>
  4011b4:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
  4011b8:	48 89 55 c8          	mov    QWORD PTR [rbp-0x38],rdx
  4011bc:	48 8d 45 c0          	lea    rax,[rbp-0x40]
  4011c0:	48 89 c7             	mov    rdi,rax
  4011c3:	e8 66 02 00 00       	call   40142e <_ZNKSt14_Bit_referencecvbEv>
  4011c8:	0f b6 d0             	movzx  edx,al
  4011cb:	48 8b 85 a8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x158]
  4011d2:	89 d6                	mov    esi,edx
  4011d4:	48 89 c7             	mov    rdi,rax
  4011d7:	e8 24 fa ff ff       	call   400c00 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9push_backEc@plt>
  4011dc:	83 6d d8 01          	sub    DWORD PTR [rbp-0x28],0x1
  4011e0:	eb b4                	jmp    401196 <_Z5add_bRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_RjS6_+0x400>
  4011e2:	90                   	nop
  4011e3:	48 8d 85 b0 fe ff ff 	lea    rax,[rbp-0x150]
  4011ea:	48 89 c7             	mov    rdi,rax
  4011ed:	e8 40 08 00 00       	call   401a32 <_ZNSt6vectorIbSaIbEED1Ev>
  4011f2:	48 8d 85 e0 fe ff ff 	lea    rax,[rbp-0x120]
  4011f9:	48 89 c7             	mov    rdi,rax
  4011fc:	e8 31 08 00 00       	call   401a32 <_ZNSt6vectorIbSaIbEED1Ev>
  401201:	48 8d 85 10 ff ff ff 	lea    rax,[rbp-0xf0]
  401208:	48 89 c7             	mov    rdi,rax
  40120b:	e8 22 08 00 00       	call   401a32 <_ZNSt6vectorIbSaIbEED1Ev>
  401210:	e9 80 00 00 00       	jmp    401295 <_Z5add_bRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_RjS6_+0x4ff>
  401215:	48 89 c3             	mov    rbx,rax
  401218:	48 8d 85 3c ff ff ff 	lea    rax,[rbp-0xc4]
  40121f:	48 89 c7             	mov    rdi,rax
  401222:	e8 4d 07 00 00       	call   401974 <_ZNSaIbED1Ev>
  401227:	48 89 d8             	mov    rax,rbx
  40122a:	48 89 c7             	mov    rdi,rax
  40122d:	e8 2e fa ff ff       	call   400c60 <_Unwind_Resume@plt>
  401232:	48 89 c3             	mov    rbx,rax
  401235:	48 8d 85 3e ff ff ff 	lea    rax,[rbp-0xc2]
  40123c:	48 89 c7             	mov    rdi,rax
  40123f:	e8 30 07 00 00       	call   401974 <_ZNSaIbED1Ev>
  401244:	eb 35                	jmp    40127b <_Z5add_bRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_RjS6_+0x4e5>
  401246:	48 89 c3             	mov    rbx,rax
  401249:	48 8b 85 a8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x158]
  401250:	48 89 c7             	mov    rdi,rax
  401253:	e8 68 f9 ff ff       	call   400bc0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
  401258:	eb 03                	jmp    40125d <_Z5add_bRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_RjS6_+0x4c7>
  40125a:	48 89 c3             	mov    rbx,rax
  40125d:	48 8d 85 b0 fe ff ff 	lea    rax,[rbp-0x150]
  401264:	48 89 c7             	mov    rdi,rax
  401267:	e8 c6 07 00 00       	call   401a32 <_ZNSt6vectorIbSaIbEED1Ev>
  40126c:	48 8d 85 e0 fe ff ff 	lea    rax,[rbp-0x120]
  401273:	48 89 c7             	mov    rdi,rax
  401276:	e8 b7 07 00 00       	call   401a32 <_ZNSt6vectorIbSaIbEED1Ev>
  40127b:	48 8d 85 10 ff ff ff 	lea    rax,[rbp-0xf0]
  401282:	48 89 c7             	mov    rdi,rax
  401285:	e8 a8 07 00 00       	call   401a32 <_ZNSt6vectorIbSaIbEED1Ev>
  40128a:	48 89 d8             	mov    rax,rbx
  40128d:	48 89 c7             	mov    rdi,rax
  401290:	e8 cb f9 ff ff       	call   400c60 <_Unwind_Resume@plt>
  401295:	48 8b 85 a8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x158]
  40129c:	48 81 c4 70 01 00 00 	add    rsp,0x170
  4012a3:	5b                   	pop    rbx
  4012a4:	41 5c                	pop    r12
  4012a6:	5d                   	pop    rbp
  4012a7:	c3                   	ret    

00000000004012a8 <main>:
  4012a8:	55                   	push   rbp
  4012a9:	48 89 e5             	mov    rbp,rsp
  4012ac:	53                   	push   rbx
  4012ad:	48 83 ec 78          	sub    rsp,0x78
  4012b1:	48 8d 45 b0          	lea    rax,[rbp-0x50]
  4012b5:	48 89 c7             	mov    rdi,rax
  4012b8:	e8 f3 f8 ff ff       	call   400bb0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev@plt>
  4012bd:	48 8d 45 90          	lea    rax,[rbp-0x70]
  4012c1:	48 89 c7             	mov    rdi,rax
  4012c4:	e8 e7 f8 ff ff       	call   400bb0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev@plt>
  4012c9:	48 8d 45 b0          	lea    rax,[rbp-0x50]
  4012cd:	be 75 31 40 00       	mov    esi,0x403175
  4012d2:	48 89 c7             	mov    rdi,rax
  4012d5:	e8 a6 f9 ff ff       	call   400c80 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc@plt>
  4012da:	48 8d 45 90          	lea    rax,[rbp-0x70]
  4012de:	be 7a 31 40 00       	mov    esi,0x40317a
  4012e3:	48 89 c7             	mov    rdi,rax
  4012e6:	e8 95 f9 ff ff       	call   400c80 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc@plt>
  4012eb:	48 8d 45 b0          	lea    rax,[rbp-0x50]
  4012ef:	48 89 c7             	mov    rdi,rax
  4012f2:	e8 e9 f8 ff ff       	call   400be0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv@plt>
  4012f7:	89 45 8c             	mov    DWORD PTR [rbp-0x74],eax
  4012fa:	48 8d 45 90          	lea    rax,[rbp-0x70]
  4012fe:	48 89 c7             	mov    rdi,rax
  401301:	e8 da f8 ff ff       	call   400be0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv@plt>
  401306:	89 45 88             	mov    DWORD PTR [rbp-0x78],eax
  401309:	48 8d 45 d0          	lea    rax,[rbp-0x30]
  40130d:	48 8d 7d 88          	lea    rdi,[rbp-0x78]
  401311:	48 8d 4d 8c          	lea    rcx,[rbp-0x74]
  401315:	48 8d 55 90          	lea    rdx,[rbp-0x70]
  401319:	48 8d 75 b0          	lea    rsi,[rbp-0x50]
  40131d:	49 89 f8             	mov    r8,rdi
  401320:	48 89 c7             	mov    rdi,rax
  401323:	e8 6e fa ff ff       	call   400d96 <_Z5add_bRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_RjS6_>
  401328:	48 8d 45 d0          	lea    rax,[rbp-0x30]
  40132c:	48 89 c6             	mov    rsi,rax
  40132f:	bf e0 50 60 00       	mov    edi,0x6050e0
  401334:	e8 07 f9 ff ff       	call   400c40 <_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE@plt>
  401339:	be 20 0c 40 00       	mov    esi,0x400c20
  40133e:	48 89 c7             	mov    rdi,rax
  401341:	e8 aa f8 ff ff       	call   400bf0 <_ZNSolsEPFRSoS_E@plt>
  401346:	48 8d 45 d0          	lea    rax,[rbp-0x30]
  40134a:	48 89 c7             	mov    rdi,rax
  40134d:	e8 6e f8 ff ff       	call   400bc0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
  401352:	bb 00 00 00 00       	mov    ebx,0x0
  401357:	48 8d 45 90          	lea    rax,[rbp-0x70]
  40135b:	48 89 c7             	mov    rdi,rax
  40135e:	e8 5d f8 ff ff       	call   400bc0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
  401363:	48 8d 45 b0          	lea    rax,[rbp-0x50]
  401367:	48 89 c7             	mov    rdi,rax
  40136a:	e8 51 f8 ff ff       	call   400bc0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
  40136f:	89 d8                	mov    eax,ebx
  401371:	eb 37                	jmp    4013aa <main+0x102>
  401373:	48 89 c3             	mov    rbx,rax
  401376:	48 8d 45 d0          	lea    rax,[rbp-0x30]
  40137a:	48 89 c7             	mov    rdi,rax
  40137d:	e8 3e f8 ff ff       	call   400bc0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
  401382:	eb 03                	jmp    401387 <main+0xdf>
  401384:	48 89 c3             	mov    rbx,rax
  401387:	48 8d 45 90          	lea    rax,[rbp-0x70]
  40138b:	48 89 c7             	mov    rdi,rax
  40138e:	e8 2d f8 ff ff       	call   400bc0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
  401393:	48 8d 45 b0          	lea    rax,[rbp-0x50]
  401397:	48 89 c7             	mov    rdi,rax
  40139a:	e8 21 f8 ff ff       	call   400bc0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
  40139f:	48 89 d8             	mov    rax,rbx
  4013a2:	48 89 c7             	mov    rdi,rax
  4013a5:	e8 b6 f8 ff ff       	call   400c60 <_Unwind_Resume@plt>
  4013aa:	48 83 c4 78          	add    rsp,0x78
  4013ae:	5b                   	pop    rbx
  4013af:	5d                   	pop    rbp
  4013b0:	c3                   	ret    

00000000004013b1 <_Z41__static_initialization_and_destruction_0ii>:
  4013b1:	55                   	push   rbp
  4013b2:	48 89 e5             	mov    rbp,rsp
  4013b5:	48 83 ec 10          	sub    rsp,0x10
  4013b9:	89 7d fc             	mov    DWORD PTR [rbp-0x4],edi
  4013bc:	89 75 f8             	mov    DWORD PTR [rbp-0x8],esi
  4013bf:	83 7d fc 01          	cmp    DWORD PTR [rbp-0x4],0x1
  4013c3:	75 27                	jne    4013ec <_Z41__static_initialization_and_destruction_0ii+0x3b>
  4013c5:	81 7d f8 ff ff 00 00 	cmp    DWORD PTR [rbp-0x8],0xffff
  4013cc:	75 1e                	jne    4013ec <_Z41__static_initialization_and_destruction_0ii+0x3b>
  4013ce:	bf f1 51 60 00       	mov    edi,0x6051f1
  4013d3:	e8 98 f7 ff ff       	call   400b70 <_ZNSt8ios_base4InitC1Ev@plt>
  4013d8:	ba c0 50 60 00       	mov    edx,0x6050c0
  4013dd:	be f1 51 60 00       	mov    esi,0x6051f1
  4013e2:	bf a0 0b 40 00       	mov    edi,0x400ba0
  4013e7:	e8 a4 f7 ff ff       	call   400b90 <__cxa_atexit@plt>
  4013ec:	90                   	nop
  4013ed:	c9                   	leave  
  4013ee:	c3                   	ret    

00000000004013ef <_GLOBAL__sub_I__Z5add_bRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_RjS6_>:
  4013ef:	55                   	push   rbp
  4013f0:	48 89 e5             	mov    rbp,rsp
  4013f3:	be ff ff 00 00       	mov    esi,0xffff
  4013f8:	bf 01 00 00 00       	mov    edi,0x1
  4013fd:	e8 af ff ff ff       	call   4013b1 <_Z41__static_initialization_and_destruction_0ii>
  401402:	5d                   	pop    rbp
  401403:	c3                   	ret    

0000000000401404 <_ZNSt14_Bit_referenceC1EPmm>:
  401404:	55                   	push   rbp
  401405:	48 89 e5             	mov    rbp,rsp
  401408:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
  40140c:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
  401410:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
  401414:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  401418:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
  40141c:	48 89 10             	mov    QWORD PTR [rax],rdx
  40141f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  401423:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
  401427:	48 89 50 08          	mov    QWORD PTR [rax+0x8],rdx
  40142b:	90                   	nop
  40142c:	5d                   	pop    rbp
  40142d:	c3                   	ret    

000000000040142e <_ZNKSt14_Bit_referencecvbEv>:
  40142e:	55                   	push   rbp
  40142f:	48 89 e5             	mov    rbp,rsp
  401432:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
  401436:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  40143a:	48 8b 00             	mov    rax,QWORD PTR [rax]
  40143d:	48 8b 10             	mov    rdx,QWORD PTR [rax]
  401440:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  401444:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
  401448:	48 21 d0             	and    rax,rdx
  40144b:	48 85 c0             	test   rax,rax
  40144e:	0f 95 c0             	setne  al
  401451:	5d                   	pop    rbp
  401452:	c3                   	ret    
  401453:	90                   	nop

0000000000401454 <_ZNSt14_Bit_referenceaSEb>:
  401454:	55                   	push   rbp
  401455:	48 89 e5             	mov    rbp,rsp
  401458:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
  40145c:	89 f0                	mov    eax,esi
  40145e:	88 45 f4             	mov    BYTE PTR [rbp-0xc],al
  401461:	80 7d f4 00          	cmp    BYTE PTR [rbp-0xc],0x0
  401465:	74 21                	je     401488 <_ZNSt14_Bit_referenceaSEb+0x34>
  401467:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  40146b:	48 8b 00             	mov    rax,QWORD PTR [rax]
  40146e:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
  401472:	48 8b 12             	mov    rdx,QWORD PTR [rdx]
  401475:	48 8b 0a             	mov    rcx,QWORD PTR [rdx]
  401478:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
  40147c:	48 8b 52 08          	mov    rdx,QWORD PTR [rdx+0x8]
  401480:	48 09 ca             	or     rdx,rcx
  401483:	48 89 10             	mov    QWORD PTR [rax],rdx
  401486:	eb 22                	jmp    4014aa <_ZNSt14_Bit_referenceaSEb+0x56>
  401488:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  40148c:	48 8b 00             	mov    rax,QWORD PTR [rax]
  40148f:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
  401493:	48 8b 12             	mov    rdx,QWORD PTR [rdx]
  401496:	48 8b 0a             	mov    rcx,QWORD PTR [rdx]
  401499:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
  40149d:	48 8b 52 08          	mov    rdx,QWORD PTR [rdx+0x8]
  4014a1:	48 f7 d2             	not    rdx
  4014a4:	48 21 ca             	and    rdx,rcx
  4014a7:	48 89 10             	mov    QWORD PTR [rax],rdx
  4014aa:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  4014ae:	5d                   	pop    rbp
  4014af:	c3                   	ret    

00000000004014b0 <_ZNSt14_Bit_referenceaSERKS_>:
  4014b0:	55                   	push   rbp
  4014b1:	48 89 e5             	mov    rbp,rsp
  4014b4:	48 83 ec 10          	sub    rsp,0x10
  4014b8:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
  4014bc:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
  4014c0:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
  4014c4:	48 89 c7             	mov    rdi,rax
  4014c7:	e8 62 ff ff ff       	call   40142e <_ZNKSt14_Bit_referencecvbEv>
  4014cc:	0f b6 d0             	movzx  edx,al
  4014cf:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  4014d3:	89 d6                	mov    esi,edx
  4014d5:	48 89 c7             	mov    rdi,rax
  4014d8:	e8 77 ff ff ff       	call   401454 <_ZNSt14_Bit_referenceaSEb>
  4014dd:	c9                   	leave  
  4014de:	c3                   	ret    
  4014df:	90                   	nop

00000000004014e0 <_ZNSt8iteratorISt26random_access_iterator_tagblPbRbEC1Ev>:
  4014e0:	55                   	push   rbp
  4014e1:	48 89 e5             	mov    rbp,rsp
  4014e4:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
  4014e8:	90                   	nop
  4014e9:	5d                   	pop    rbp
  4014ea:	c3                   	ret    
  4014eb:	90                   	nop

00000000004014ec <_ZNSt18_Bit_iterator_baseC1EPmj>:
  4014ec:	55                   	push   rbp
  4014ed:	48 89 e5             	mov    rbp,rsp
  4014f0:	48 83 ec 20          	sub    rsp,0x20
  4014f4:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
  4014f8:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
  4014fc:	89 55 ec             	mov    DWORD PTR [rbp-0x14],edx
  4014ff:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  401503:	48 89 c7             	mov    rdi,rax
  401506:	e8 d5 ff ff ff       	call   4014e0 <_ZNSt8iteratorISt26random_access_iterator_tagblPbRbEC1Ev>
  40150b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  40150f:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
  401513:	48 89 10             	mov    QWORD PTR [rax],rdx
  401516:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  40151a:	8b 55 ec             	mov    edx,DWORD PTR [rbp-0x14]
  40151d:	89 50 08             	mov    DWORD PTR [rax+0x8],edx
  401520:	90                   	nop
  401521:	c9                   	leave  
  401522:	c3                   	ret    
  401523:	90                   	nop

0000000000401524 <_ZNSt18_Bit_iterator_base10_M_bump_upEv>:
  401524:	55                   	push   rbp
  401525:	48 89 e5             	mov    rbp,rsp
  401528:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
  40152c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  401530:	8b 40 08             	mov    eax,DWORD PTR [rax+0x8]
  401533:	8d 48 01             	lea    ecx,[rax+0x1]
  401536:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
  40153a:	89 4a 08             	mov    DWORD PTR [rdx+0x8],ecx
  40153d:	83 f8 3f             	cmp    eax,0x3f
  401540:	0f 94 c0             	sete   al
  401543:	84 c0                	test   al,al
  401545:	74 1d                	je     401564 <_ZNSt18_Bit_iterator_base10_M_bump_upEv+0x40>
  401547:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  40154b:	c7 40 08 00 00 00 00 	mov    DWORD PTR [rax+0x8],0x0
  401552:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  401556:	48 8b 00             	mov    rax,QWORD PTR [rax]
  401559:	48 8d 50 08          	lea    rdx,[rax+0x8]
  40155d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  401561:	48 89 10             	mov    QWORD PTR [rax],rdx
  401564:	90                   	nop
  401565:	5d                   	pop    rbp
  401566:	c3                   	ret    
  401567:	90                   	nop

0000000000401568 <_ZNSt18_Bit_iterator_base12_M_bump_downEv>:
  401568:	55                   	push   rbp
  401569:	48 89 e5             	mov    rbp,rsp
  40156c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
  401570:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  401574:	8b 40 08             	mov    eax,DWORD PTR [rax+0x8]
  401577:	8d 48 ff             	lea    ecx,[rax-0x1]
  40157a:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
  40157e:	89 4a 08             	mov    DWORD PTR [rdx+0x8],ecx
  401581:	85 c0                	test   eax,eax
  401583:	0f 94 c0             	sete   al
  401586:	84 c0                	test   al,al
  401588:	74 1d                	je     4015a7 <_ZNSt18_Bit_iterator_base12_M_bump_downEv+0x3f>
  40158a:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  40158e:	c7 40 08 3f 00 00 00 	mov    DWORD PTR [rax+0x8],0x3f
  401595:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  401599:	48 8b 00             	mov    rax,QWORD PTR [rax]
  40159c:	48 8d 50 f8          	lea    rdx,[rax-0x8]
  4015a0:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  4015a4:	48 89 10             	mov    QWORD PTR [rax],rdx
  4015a7:	90                   	nop
  4015a8:	5d                   	pop    rbp
  4015a9:	c3                   	ret    

00000000004015aa <_ZNSt18_Bit_iterator_base7_M_incrEl>:
  4015aa:	55                   	push   rbp
  4015ab:	48 89 e5             	mov    rbp,rsp
  4015ae:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
  4015b2:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
  4015b6:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  4015ba:	8b 40 08             	mov    eax,DWORD PTR [rax+0x8]
  4015bd:	89 c2                	mov    edx,eax
  4015bf:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
  4015c3:	48 01 d0             	add    rax,rdx
  4015c6:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
  4015ca:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  4015ce:	48 8b 10             	mov    rdx,QWORD PTR [rax]
  4015d1:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  4015d5:	48 8d 48 3f          	lea    rcx,[rax+0x3f]
  4015d9:	48 85 c0             	test   rax,rax
  4015dc:	48 0f 48 c1          	cmovs  rax,rcx
  4015e0:	48 c1 f8 06          	sar    rax,0x6
  4015e4:	48 c1 e0 03          	shl    rax,0x3
  4015e8:	48 01 c2             	add    rdx,rax
  4015eb:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  4015ef:	48 89 10             	mov    QWORD PTR [rax],rdx
  4015f2:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  4015f6:	48 99                	cqo    
  4015f8:	48 c1 ea 3a          	shr    rdx,0x3a
  4015fc:	48 01 d0             	add    rax,rdx
  4015ff:	83 e0 3f             	and    eax,0x3f
  401602:	48 29 d0             	sub    rax,rdx
  401605:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
  401609:	48 83 7d f8 00       	cmp    QWORD PTR [rbp-0x8],0x0
  40160e:	79 17                	jns    401627 <_ZNSt18_Bit_iterator_base7_M_incrEl+0x7d>
  401610:	48 83 45 f8 40       	add    QWORD PTR [rbp-0x8],0x40
  401615:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  401619:	48 8b 00             	mov    rax,QWORD PTR [rax]
  40161c:	48 8d 50 f8          	lea    rdx,[rax-0x8]
  401620:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  401624:	48 89 10             	mov    QWORD PTR [rax],rdx
  401627:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  40162b:	89 c2                	mov    edx,eax
  40162d:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  401631:	89 50 08             	mov    DWORD PTR [rax+0x8],edx
  401634:	90                   	nop
  401635:	5d                   	pop    rbp
  401636:	c3                   	ret    

0000000000401637 <_ZStmiRKSt18_Bit_iterator_baseS1_>:
  401637:	55                   	push   rbp
  401638:	48 89 e5             	mov    rbp,rsp
  40163b:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
  40163f:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
  401643:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  401647:	48 8b 00             	mov    rax,QWORD PTR [rax]
  40164a:	48 89 c2             	mov    rdx,rax
  40164d:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
  401651:	48 8b 00             	mov    rax,QWORD PTR [rax]
  401654:	48 29 c2             	sub    rdx,rax
  401657:	48 89 d0             	mov    rax,rdx
  40165a:	48 c1 f8 03          	sar    rax,0x3
  40165e:	48 c1 e0 06          	shl    rax,0x6
  401662:	48 89 c2             	mov    rdx,rax
  401665:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  401669:	8b 40 08             	mov    eax,DWORD PTR [rax+0x8]
  40166c:	89 c0                	mov    eax,eax
  40166e:	48 01 c2             	add    rdx,rax
  401671:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
  401675:	8b 40 08             	mov    eax,DWORD PTR [rax+0x8]
  401678:	89 c0                	mov    eax,eax
  40167a:	48 29 c2             	sub    rdx,rax
  40167d:	48 89 d0             	mov    rax,rdx
  401680:	5d                   	pop    rbp
  401681:	c3                   	ret    

0000000000401682 <_ZNSt13_Bit_iteratorC1Ev>:
  401682:	55                   	push   rbp
  401683:	48 89 e5             	mov    rbp,rsp
  401686:	48 83 ec 10          	sub    rsp,0x10
  40168a:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
  40168e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  401692:	ba 00 00 00 00       	mov    edx,0x0
  401697:	be 00 00 00 00       	mov    esi,0x0
  40169c:	48 89 c7             	mov    rdi,rax
  40169f:	e8 48 fe ff ff       	call   4014ec <_ZNSt18_Bit_iterator_baseC1EPmj>
  4016a4:	90                   	nop
  4016a5:	c9                   	leave  
  4016a6:	c3                   	ret    
  4016a7:	90                   	nop

00000000004016a8 <_ZNSt13_Bit_iteratorC1EPmj>:
  4016a8:	55                   	push   rbp
  4016a9:	48 89 e5             	mov    rbp,rsp
  4016ac:	48 83 ec 20          	sub    rsp,0x20
  4016b0:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
  4016b4:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
  4016b8:	89 55 ec             	mov    DWORD PTR [rbp-0x14],edx
  4016bb:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  4016bf:	8b 55 ec             	mov    edx,DWORD PTR [rbp-0x14]
  4016c2:	48 8b 4d f0          	mov    rcx,QWORD PTR [rbp-0x10]
  4016c6:	48 89 ce             	mov    rsi,rcx
  4016c9:	48 89 c7             	mov    rdi,rax
  4016cc:	e8 1b fe ff ff       	call   4014ec <_ZNSt18_Bit_iterator_baseC1EPmj>
  4016d1:	90                   	nop
  4016d2:	c9                   	leave  
  4016d3:	c3                   	ret    

00000000004016d4 <_ZNKSt13_Bit_iteratordeEv>:
  4016d4:	55                   	push   rbp
  4016d5:	48 89 e5             	mov    rbp,rsp
  4016d8:	48 83 ec 20          	sub    rsp,0x20
  4016dc:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
  4016e0:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  4016e4:	8b 40 08             	mov    eax,DWORD PTR [rax+0x8]
  4016e7:	ba 01 00 00 00       	mov    edx,0x1
  4016ec:	89 c1                	mov    ecx,eax
  4016ee:	48 d3 e2             	shl    rdx,cl
  4016f1:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  4016f5:	48 8b 08             	mov    rcx,QWORD PTR [rax]
  4016f8:	48 8d 45 f0          	lea    rax,[rbp-0x10]
  4016fc:	48 89 ce             	mov    rsi,rcx
  4016ff:	48 89 c7             	mov    rdi,rax
  401702:	e8 fd fc ff ff       	call   401404 <_ZNSt14_Bit_referenceC1EPmm>
  401707:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
  40170b:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
  40170f:	c9                   	leave  
  401710:	c3                   	ret    
  401711:	90                   	nop

0000000000401712 <_ZNSt13_Bit_iteratorppEv>:
  401712:	55                   	push   rbp
  401713:	48 89 e5             	mov    rbp,rsp
  401716:	48 83 ec 10          	sub    rsp,0x10
  40171a:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
  40171e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  401722:	48 89 c7             	mov    rdi,rax
  401725:	e8 fa fd ff ff       	call   401524 <_ZNSt18_Bit_iterator_base10_M_bump_upEv>
  40172a:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  40172e:	c9                   	leave  
  40172f:	c3                   	ret    

0000000000401730 <_ZNSt13_Bit_iteratorppEi>:
  401730:	55                   	push   rbp
  401731:	48 89 e5             	mov    rbp,rsp
  401734:	48 83 ec 40          	sub    rsp,0x40
  401738:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
  40173c:	89 75 d4             	mov    DWORD PTR [rbp-0x2c],esi
  40173f:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
  401743:	48 8b 10             	mov    rdx,QWORD PTR [rax]
  401746:	48 89 55 e0          	mov    QWORD PTR [rbp-0x20],rdx
  40174a:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
  40174e:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
  401752:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
  401756:	48 89 c7             	mov    rdi,rax
  401759:	e8 c6 fd ff ff       	call   401524 <_ZNSt18_Bit_iterator_base10_M_bump_upEv>
  40175e:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
  401762:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
  401766:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  40176a:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
  40176e:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
  401772:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  401776:	48 89 d1             	mov    rcx,rdx
  401779:	48 89 c2             	mov    rdx,rax
  40177c:	48 89 c8             	mov    rax,rcx
  40177f:	c9                   	leave  
  401780:	c3                   	ret    
  401781:	90                   	nop

0000000000401782 <_ZNSt13_Bit_iteratormmEv>:
  401782:	55                   	push   rbp
  401783:	48 89 e5             	mov    rbp,rsp
  401786:	48 83 ec 10          	sub    rsp,0x10
  40178a:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
  40178e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  401792:	48 89 c7             	mov    rdi,rax
  401795:	e8 ce fd ff ff       	call   401568 <_ZNSt18_Bit_iterator_base12_M_bump_downEv>
  40179a:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  40179e:	c9                   	leave  
  40179f:	c3                   	ret    

00000000004017a0 <_ZNSt13_Bit_iteratorpLEl>:
  4017a0:	55                   	push   rbp
  4017a1:	48 89 e5             	mov    rbp,rsp
  4017a4:	48 83 ec 10          	sub    rsp,0x10
  4017a8:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
  4017ac:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
  4017b0:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  4017b4:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
  4017b8:	48 89 d6             	mov    rsi,rdx
  4017bb:	48 89 c7             	mov    rdi,rax
  4017be:	e8 e7 fd ff ff       	call   4015aa <_ZNSt18_Bit_iterator_base7_M_incrEl>
  4017c3:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  4017c7:	c9                   	leave  
  4017c8:	c3                   	ret    
  4017c9:	90                   	nop

00000000004017ca <_ZNKSt13_Bit_iteratorplEl>:
  4017ca:	55                   	push   rbp
  4017cb:	48 89 e5             	mov    rbp,rsp
  4017ce:	48 83 ec 40          	sub    rsp,0x40
  4017d2:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
  4017d6:	48 89 75 d0          	mov    QWORD PTR [rbp-0x30],rsi
  4017da:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
  4017de:	48 8b 10             	mov    rdx,QWORD PTR [rax]
  4017e1:	48 89 55 e0          	mov    QWORD PTR [rbp-0x20],rdx
  4017e5:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
  4017e9:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
  4017ed:	48 8b 55 d0          	mov    rdx,QWORD PTR [rbp-0x30]
  4017f1:	48 8d 45 e0          	lea    rax,[rbp-0x20]
  4017f5:	48 89 d6             	mov    rsi,rdx
  4017f8:	48 89 c7             	mov    rdi,rax
  4017fb:	e8 a0 ff ff ff       	call   4017a0 <_ZNSt13_Bit_iteratorpLEl>
  401800:	48 8b 10             	mov    rdx,QWORD PTR [rax]
  401803:	48 89 55 f0          	mov    QWORD PTR [rbp-0x10],rdx
  401807:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
  40180b:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
  40180f:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
  401813:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  401817:	48 89 d1             	mov    rcx,rdx
  40181a:	48 89 c2             	mov    rdx,rax
  40181d:	48 89 c8             	mov    rax,rcx
  401820:	c9                   	leave  
  401821:	c3                   	ret    

0000000000401822 <_ZNSt19_Bit_const_iteratorC1EPmj>:
  401822:	55                   	push   rbp
  401823:	48 89 e5             	mov    rbp,rsp
  401826:	48 83 ec 20          	sub    rsp,0x20
  40182a:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
  40182e:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
  401832:	89 55 ec             	mov    DWORD PTR [rbp-0x14],edx
  401835:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  401839:	8b 55 ec             	mov    edx,DWORD PTR [rbp-0x14]
  40183c:	48 8b 4d f0          	mov    rcx,QWORD PTR [rbp-0x10]
  401840:	48 89 ce             	mov    rsi,rcx
  401843:	48 89 c7             	mov    rdi,rax
  401846:	e8 a1 fc ff ff       	call   4014ec <_ZNSt18_Bit_iterator_baseC1EPmj>
  40184b:	90                   	nop
  40184c:	c9                   	leave  
  40184d:	c3                   	ret    

000000000040184e <_ZNSt19_Bit_const_iteratorC1ERKSt13_Bit_iterator>:
  40184e:	55                   	push   rbp
  40184f:	48 89 e5             	mov    rbp,rsp
  401852:	48 83 ec 10          	sub    rsp,0x10
  401856:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
  40185a:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
  40185e:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
  401862:	8b 50 08             	mov    edx,DWORD PTR [rax+0x8]
  401865:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
  401869:	48 8b 08             	mov    rcx,QWORD PTR [rax]
  40186c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  401870:	48 89 ce             	mov    rsi,rcx
  401873:	48 89 c7             	mov    rdi,rax
  401876:	e8 71 fc ff ff       	call   4014ec <_ZNSt18_Bit_iterator_baseC1EPmj>
  40187b:	90                   	nop
  40187c:	c9                   	leave  
  40187d:	c3                   	ret    

000000000040187e <_ZNKSt19_Bit_const_iteratordeEv>:
  40187e:	55                   	push   rbp
  40187f:	48 89 e5             	mov    rbp,rsp
  401882:	48 83 ec 20          	sub    rsp,0x20
  401886:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
  40188a:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  40188e:	8b 40 08             	mov    eax,DWORD PTR [rax+0x8]
  401891:	ba 01 00 00 00       	mov    edx,0x1
  401896:	89 c1                	mov    ecx,eax
  401898:	48 d3 e2             	shl    rdx,cl
  40189b:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  40189f:	48 8b 08             	mov    rcx,QWORD PTR [rax]
  4018a2:	48 8d 45 f0          	lea    rax,[rbp-0x10]
  4018a6:	48 89 ce             	mov    rsi,rcx
  4018a9:	48 89 c7             	mov    rdi,rax
  4018ac:	e8 53 fb ff ff       	call   401404 <_ZNSt14_Bit_referenceC1EPmm>
  4018b1:	48 8d 45 f0          	lea    rax,[rbp-0x10]
  4018b5:	48 89 c7             	mov    rdi,rax
  4018b8:	e8 71 fb ff ff       	call   40142e <_ZNKSt14_Bit_referencecvbEv>
  4018bd:	c9                   	leave  
  4018be:	c3                   	ret    
  4018bf:	90                   	nop

00000000004018c0 <_ZNSt19_Bit_const_iteratorppEv>:
  4018c0:	55                   	push   rbp
  4018c1:	48 89 e5             	mov    rbp,rsp
  4018c4:	48 83 ec 10          	sub    rsp,0x10
  4018c8:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
  4018cc:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  4018d0:	48 89 c7             	mov    rdi,rax
  4018d3:	e8 4c fc ff ff       	call   401524 <_ZNSt18_Bit_iterator_base10_M_bump_upEv>
  4018d8:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  4018dc:	c9                   	leave  
  4018dd:	c3                   	ret    

00000000004018de <_ZSt4fillIPmiEvT_S1_RKT0_>:
  4018de:	55                   	push   rbp
  4018df:	48 89 e5             	mov    rbp,rsp
  4018e2:	53                   	push   rbx
  4018e3:	48 83 ec 28          	sub    rsp,0x28
  4018e7:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
  4018eb:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
  4018ef:	48 89 55 d8          	mov    QWORD PTR [rbp-0x28],rdx
  4018f3:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
  4018f7:	48 89 c7             	mov    rdi,rax
  4018fa:	e8 c4 02 00 00       	call   401bc3 <_ZSt12__niter_baseIPmET_S1_>
  4018ff:	48 89 c3             	mov    rbx,rax
  401902:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  401906:	48 89 c7             	mov    rdi,rax
  401909:	e8 b5 02 00 00       	call   401bc3 <_ZSt12__niter_baseIPmET_S1_>
  40190e:	48 89 c1             	mov    rcx,rax
  401911:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
  401915:	48 89 c2             	mov    rdx,rax
  401918:	48 89 de             	mov    rsi,rbx
  40191b:	48 89 cf             	mov    rdi,rcx
  40191e:	e8 ae 02 00 00       	call   401bd1 <_ZSt8__fill_aIPmiEN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S8_RKS4_>
  401923:	90                   	nop
  401924:	48 83 c4 28          	add    rsp,0x28
  401928:	5b                   	pop    rbx
  401929:	5d                   	pop    rbp
  40192a:	c3                   	ret    

000000000040192b <_Z6GetMaxIjET_RS0_S1_>:
  40192b:	55                   	push   rbp
  40192c:	48 89 e5             	mov    rbp,rsp
  40192f:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
  401933:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
  401937:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  40193b:	8b 10                	mov    edx,DWORD PTR [rax]
  40193d:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
  401941:	8b 00                	mov    eax,DWORD PTR [rax]
  401943:	39 c2                	cmp    edx,eax
  401945:	76 08                	jbe    40194f <_Z6GetMaxIjET_RS0_S1_+0x24>
  401947:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  40194b:	8b 00                	mov    eax,DWORD PTR [rax]
  40194d:	eb 06                	jmp    401955 <_Z6GetMaxIjET_RS0_S1_+0x2a>
  40194f:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
  401953:	8b 00                	mov    eax,DWORD PTR [rax]
  401955:	5d                   	pop    rbp
  401956:	c3                   	ret    
  401957:	90                   	nop

0000000000401958 <_ZNSaIbEC1Ev>:
  401958:	55                   	push   rbp
  401959:	48 89 e5             	mov    rbp,rsp
  40195c:	48 83 ec 10          	sub    rsp,0x10
  401960:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
  401964:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  401968:	48 89 c7             	mov    rdi,rax
  40196b:	e8 9c 02 00 00       	call   401c0c <_ZN9__gnu_cxx13new_allocatorIbEC1Ev>
  401970:	90                   	nop
  401971:	c9                   	leave  
  401972:	c3                   	ret    
  401973:	90                   	nop

0000000000401974 <_ZNSaIbED1Ev>:
  401974:	55                   	push   rbp
  401975:	48 89 e5             	mov    rbp,rsp
  401978:	48 83 ec 10          	sub    rsp,0x10
  40197c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
  401980:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  401984:	48 89 c7             	mov    rdi,rax
  401987:	e8 8c 02 00 00       	call   401c18 <_ZN9__gnu_cxx13new_allocatorIbED1Ev>
  40198c:	90                   	nop
  40198d:	c9                   	leave  
  40198e:	c3                   	ret    
  40198f:	90                   	nop

0000000000401990 <_ZNSt6vectorIbSaIbEEC1EmRKbRKS0_>:
  401990:	55                   	push   rbp
  401991:	48 89 e5             	mov    rbp,rsp
  401994:	53                   	push   rbx
  401995:	48 83 ec 38          	sub    rsp,0x38
  401999:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
  40199d:	48 89 75 d0          	mov    QWORD PTR [rbp-0x30],rsi
  4019a1:	48 89 55 c8          	mov    QWORD PTR [rbp-0x38],rdx
  4019a5:	48 89 4d c0          	mov    QWORD PTR [rbp-0x40],rcx
  4019a9:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
  4019ad:	48 8b 55 c0          	mov    rdx,QWORD PTR [rbp-0x40]
  4019b1:	48 89 d6             	mov    rsi,rdx
  4019b4:	48 89 c7             	mov    rdi,rax
  4019b7:	e8 84 02 00 00       	call   401c40 <_ZNSt13_Bvector_baseISaIbEEC1ERKS0_>
  4019bc:	48 8b 55 d0          	mov    rdx,QWORD PTR [rbp-0x30]
  4019c0:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
  4019c4:	48 89 d6             	mov    rsi,rdx
  4019c7:	48 89 c7             	mov    rdi,rax
  4019ca:	e8 df 02 00 00       	call   401cae <_ZNSt6vectorIbSaIbEE13_M_initializeEm>
  4019cf:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
  4019d3:	0f b6 00             	movzx  eax,BYTE PTR [rax]
  4019d6:	84 c0                	test   al,al
  4019d8:	74 07                	je     4019e1 <_ZNSt6vectorIbSaIbEEC1EmRKbRKS0_+0x51>
  4019da:	b8 ff ff ff ff       	mov    eax,0xffffffff
  4019df:	eb 05                	jmp    4019e6 <_ZNSt6vectorIbSaIbEEC1EmRKbRKS0_+0x56>
  4019e1:	b8 00 00 00 00       	mov    eax,0x0
  4019e6:	89 45 ec             	mov    DWORD PTR [rbp-0x14],eax
  4019e9:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
  4019ed:	48 89 c7             	mov    rdi,rax
  4019f0:	e8 6d 03 00 00       	call   401d62 <_ZNKSt13_Bvector_baseISaIbEE13_Bvector_impl11_M_end_addrEv>
  4019f5:	48 89 c1             	mov    rcx,rax
  4019f8:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
  4019fc:	48 8b 00             	mov    rax,QWORD PTR [rax]
  4019ff:	48 8d 55 ec          	lea    rdx,[rbp-0x14]
  401a03:	48 89 ce             	mov    rsi,rcx
  401a06:	48 89 c7             	mov    rdi,rax
  401a09:	e8 d0 fe ff ff       	call   4018de <_ZSt4fillIPmiEvT_S1_RKT0_>
  401a0e:	eb 1a                	jmp    401a2a <_ZNSt6vectorIbSaIbEEC1EmRKbRKS0_+0x9a>
  401a10:	48 89 c3             	mov    rbx,rax
  401a13:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
  401a17:	48 89 c7             	mov    rdi,rax
  401a1a:	e8 67 02 00 00       	call   401c86 <_ZNSt13_Bvector_baseISaIbEED1Ev>
  401a1f:	48 89 d8             	mov    rax,rbx
  401a22:	48 89 c7             	mov    rdi,rax
  401a25:	e8 36 f2 ff ff       	call   400c60 <_Unwind_Resume@plt>
  401a2a:	48 83 c4 38          	add    rsp,0x38
  401a2e:	5b                   	pop    rbx
  401a2f:	5d                   	pop    rbp
  401a30:	c3                   	ret    
  401a31:	90                   	nop

0000000000401a32 <_ZNSt6vectorIbSaIbEED1Ev>:
  401a32:	55                   	push   rbp
  401a33:	48 89 e5             	mov    rbp,rsp
  401a36:	48 83 ec 10          	sub    rsp,0x10
  401a3a:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
  401a3e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  401a42:	48 89 c7             	mov    rdi,rax
  401a45:	e8 3c 02 00 00       	call   401c86 <_ZNSt13_Bvector_baseISaIbEED1Ev>
  401a4a:	90                   	nop
  401a4b:	c9                   	leave  
  401a4c:	c3                   	ret    
  401a4d:	90                   	nop

0000000000401a4e <_ZNSt6vectorIbSaIbEEC1Ev>:
  401a4e:	55                   	push   rbp
  401a4f:	48 89 e5             	mov    rbp,rsp
  401a52:	48 83 ec 10          	sub    rsp,0x10
  401a56:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
  401a5a:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  401a5e:	48 89 c7             	mov    rdi,rax
  401a61:	e8 36 03 00 00       	call   401d9c <_ZNSt13_Bvector_baseISaIbEEC1Ev>
  401a66:	90                   	nop
  401a67:	c9                   	leave  
  401a68:	c3                   	ret    
  401a69:	90                   	nop

0000000000401a6a <_ZNSt6vectorIbSaIbEEixEm>:
  401a6a:	55                   	push   rbp
  401a6b:	48 89 e5             	mov    rbp,rsp
  401a6e:	48 83 ec 20          	sub    rsp,0x20
  401a72:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
  401a76:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
  401a7a:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
  401a7e:	83 e0 3f             	and    eax,0x3f
  401a81:	89 c2                	mov    edx,eax
  401a83:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  401a87:	48 8b 00             	mov    rax,QWORD PTR [rax]
  401a8a:	48 8b 4d e0          	mov    rcx,QWORD PTR [rbp-0x20]
  401a8e:	48 c1 e9 06          	shr    rcx,0x6
  401a92:	48 c1 e1 03          	shl    rcx,0x3
  401a96:	48 01 c1             	add    rcx,rax
  401a99:	48 8d 45 f0          	lea    rax,[rbp-0x10]
  401a9d:	48 89 ce             	mov    rsi,rcx
  401aa0:	48 89 c7             	mov    rdi,rax
  401aa3:	e8 00 fc ff ff       	call   4016a8 <_ZNSt13_Bit_iteratorC1EPmj>
  401aa8:	48 8d 45 f0          	lea    rax,[rbp-0x10]
  401aac:	48 89 c7             	mov    rdi,rax
  401aaf:	e8 20 fc ff ff       	call   4016d4 <_ZNKSt13_Bit_iteratordeEv>
  401ab4:	c9                   	leave  
  401ab5:	c3                   	ret    

0000000000401ab6 <_ZNSt6vectorIbSaIbEE9push_backEb>:
  401ab6:	55                   	push   rbp
  401ab7:	48 89 e5             	mov    rbp,rsp
  401aba:	53                   	push   rbx
  401abb:	48 83 ec 48          	sub    rsp,0x48
  401abf:	48 89 7d b8          	mov    QWORD PTR [rbp-0x48],rdi
  401ac3:	89 f0                	mov    eax,esi
  401ac5:	88 45 b4             	mov    BYTE PTR [rbp-0x4c],al
  401ac8:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
  401acc:	48 8b 58 10          	mov    rbx,QWORD PTR [rax+0x10]
  401ad0:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
  401ad4:	48 89 c7             	mov    rdi,rax
  401ad7:	e8 86 02 00 00       	call   401d62 <_ZNKSt13_Bvector_baseISaIbEE13_Bvector_impl11_M_end_addrEv>
  401adc:	48 39 c3             	cmp    rbx,rax
  401adf:	0f 95 c0             	setne  al
  401ae2:	84 c0                	test   al,al
  401ae4:	74 4b                	je     401b31 <_ZNSt6vectorIbSaIbEE9push_backEb+0x7b>
  401ae6:	0f b6 5d b4          	movzx  ebx,BYTE PTR [rbp-0x4c]
  401aea:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
  401aee:	48 83 c0 10          	add    rax,0x10
  401af2:	be 00 00 00 00       	mov    esi,0x0
  401af7:	48 89 c7             	mov    rdi,rax
  401afa:	e8 31 fc ff ff       	call   401730 <_ZNSt13_Bit_iteratorppEi>
  401aff:	48 89 c1             	mov    rcx,rax
  401b02:	48 89 d0             	mov    rax,rdx
  401b05:	48 89 4d d0          	mov    QWORD PTR [rbp-0x30],rcx
  401b09:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
  401b0d:	48 8d 45 d0          	lea    rax,[rbp-0x30]
  401b11:	48 89 c7             	mov    rdi,rax
  401b14:	e8 bb fb ff ff       	call   4016d4 <_ZNKSt13_Bit_iteratordeEv>
  401b19:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
  401b1d:	48 89 55 c8          	mov    QWORD PTR [rbp-0x38],rdx
  401b21:	48 8d 45 c0          	lea    rax,[rbp-0x40]
  401b25:	89 de                	mov    esi,ebx
  401b27:	48 89 c7             	mov    rdi,rax
  401b2a:	e8 25 f9 ff ff       	call   401454 <_ZNSt14_Bit_referenceaSEb>
  401b2f:	eb 34                	jmp    401b65 <_ZNSt6vectorIbSaIbEE9push_backEb+0xaf>
  401b31:	0f b6 5d b4          	movzx  ebx,BYTE PTR [rbp-0x4c]
  401b35:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
  401b39:	48 89 c7             	mov    rdi,rax
  401b3c:	e8 93 05 00 00       	call   4020d4 <_ZNSt6vectorIbSaIbEE3endEv>
  401b41:	48 89 c1             	mov    rcx,rax
  401b44:	48 89 d0             	mov    rax,rdx
  401b47:	48 89 4d e0          	mov    QWORD PTR [rbp-0x20],rcx
  401b4b:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
  401b4f:	48 8b 75 e0          	mov    rsi,QWORD PTR [rbp-0x20]
  401b53:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
  401b57:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
  401b5b:	89 d9                	mov    ecx,ebx
  401b5d:	48 89 c7             	mov    rdi,rax
  401b60:	e8 53 02 00 00       	call   401db8 <_ZNSt6vectorIbSaIbEE13_M_insert_auxESt13_Bit_iteratorb>
  401b65:	90                   	nop
  401b66:	48 83 c4 48          	add    rsp,0x48
  401b6a:	5b                   	pop    rbx
  401b6b:	5d                   	pop    rbp
  401b6c:	c3                   	ret    
  401b6d:	90                   	nop

0000000000401b6e <_ZNKSt6vectorIbSaIbEE4sizeEv>:
  401b6e:	55                   	push   rbp
  401b6f:	48 89 e5             	mov    rbp,rsp
  401b72:	48 83 ec 30          	sub    rsp,0x30
  401b76:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
  401b7a:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
  401b7e:	48 89 c7             	mov    rdi,rax
  401b81:	e8 c4 05 00 00       	call   40214a <_ZNKSt6vectorIbSaIbEE5beginEv>
  401b86:	48 89 c1             	mov    rcx,rax
  401b89:	48 89 d0             	mov    rax,rdx
  401b8c:	48 89 4d e0          	mov    QWORD PTR [rbp-0x20],rcx
  401b90:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
  401b94:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
  401b98:	48 89 c7             	mov    rdi,rax
  401b9b:	e8 64 05 00 00       	call   402104 <_ZNKSt6vectorIbSaIbEE3endEv>
  401ba0:	48 89 c1             	mov    rcx,rax
  401ba3:	48 89 d0             	mov    rax,rdx
  401ba6:	48 89 4d f0          	mov    QWORD PTR [rbp-0x10],rcx
  401baa:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
  401bae:	48 8d 55 e0          	lea    rdx,[rbp-0x20]
  401bb2:	48 8d 45 f0          	lea    rax,[rbp-0x10]
  401bb6:	48 89 d6             	mov    rsi,rdx
  401bb9:	48 89 c7             	mov    rdi,rax
  401bbc:	e8 76 fa ff ff       	call   401637 <_ZStmiRKSt18_Bit_iterator_baseS1_>
  401bc1:	c9                   	leave  
  401bc2:	c3                   	ret    

0000000000401bc3 <_ZSt12__niter_baseIPmET_S1_>:
  401bc3:	55                   	push   rbp
  401bc4:	48 89 e5             	mov    rbp,rsp
  401bc7:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
  401bcb:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  401bcf:	5d                   	pop    rbp
  401bd0:	c3                   	ret    

0000000000401bd1 <_ZSt8__fill_aIPmiEN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S8_RKS4_>:
  401bd1:	55                   	push   rbp
  401bd2:	48 89 e5             	mov    rbp,rsp
  401bd5:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
  401bd9:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
  401bdd:	48 89 55 d8          	mov    QWORD PTR [rbp-0x28],rdx
  401be1:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
  401be5:	8b 00                	mov    eax,DWORD PTR [rax]
  401be7:	89 45 fc             	mov    DWORD PTR [rbp-0x4],eax
  401bea:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  401bee:	48 3b 45 e0          	cmp    rax,QWORD PTR [rbp-0x20]
  401bf2:	74 14                	je     401c08 <_ZSt8__fill_aIPmiEN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S8_RKS4_+0x37>
  401bf4:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
  401bf7:	48 63 d0             	movsxd rdx,eax
  401bfa:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  401bfe:	48 89 10             	mov    QWORD PTR [rax],rdx
  401c01:	48 83 45 e8 08       	add    QWORD PTR [rbp-0x18],0x8
  401c06:	eb e2                	jmp    401bea <_ZSt8__fill_aIPmiEN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S8_RKS4_+0x19>
  401c08:	90                   	nop
  401c09:	5d                   	pop    rbp
  401c0a:	c3                   	ret    
  401c0b:	90                   	nop

0000000000401c0c <_ZN9__gnu_cxx13new_allocatorIbEC1Ev>:
  401c0c:	55                   	push   rbp
  401c0d:	48 89 e5             	mov    rbp,rsp
  401c10:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
  401c14:	90                   	nop
  401c15:	5d                   	pop    rbp
  401c16:	c3                   	ret    
  401c17:	90                   	nop

0000000000401c18 <_ZN9__gnu_cxx13new_allocatorIbED1Ev>:
  401c18:	55                   	push   rbp
  401c19:	48 89 e5             	mov    rbp,rsp
  401c1c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
  401c20:	90                   	nop
  401c21:	5d                   	pop    rbp
  401c22:	c3                   	ret    
  401c23:	90                   	nop

0000000000401c24 <_ZNSt13_Bvector_baseISaIbEE13_Bvector_implD1Ev>:
  401c24:	55                   	push   rbp
  401c25:	48 89 e5             	mov    rbp,rsp
  401c28:	48 83 ec 10          	sub    rsp,0x10
  401c2c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
  401c30:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  401c34:	48 89 c7             	mov    rdi,rax
  401c37:	e8 70 05 00 00       	call   4021ac <_ZNSaImED1Ev>
  401c3c:	90                   	nop
  401c3d:	c9                   	leave  
  401c3e:	c3                   	ret    
  401c3f:	90                   	nop

0000000000401c40 <_ZNSt13_Bvector_baseISaIbEEC1ERKS0_>:
  401c40:	55                   	push   rbp
  401c41:	48 89 e5             	mov    rbp,rsp
  401c44:	48 83 ec 20          	sub    rsp,0x20
  401c48:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
  401c4c:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
  401c50:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
  401c54:	48 8d 45 ff          	lea    rax,[rbp-0x1]
  401c58:	48 89 d6             	mov    rsi,rdx
  401c5b:	48 89 c7             	mov    rdi,rax
  401c5e:	e8 29 05 00 00       	call   40218c <_ZNSaImEC1IbEERKSaIT_E>
  401c63:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  401c67:	48 8d 55 ff          	lea    rdx,[rbp-0x1]
  401c6b:	48 89 d6             	mov    rsi,rdx
  401c6e:	48 89 c7             	mov    rdi,rax
  401c71:	e8 60 05 00 00       	call   4021d6 <_ZNSt13_Bvector_baseISaIbEE13_Bvector_implC1EOSaImE>
  401c76:	48 8d 45 ff          	lea    rax,[rbp-0x1]
  401c7a:	48 89 c7             	mov    rdi,rax
  401c7d:	e8 2a 05 00 00       	call   4021ac <_ZNSaImED1Ev>
  401c82:	90                   	nop
  401c83:	c9                   	leave  
  401c84:	c3                   	ret    
  401c85:	90                   	nop

0000000000401c86 <_ZNSt13_Bvector_baseISaIbEED1Ev>:
  401c86:	55                   	push   rbp
  401c87:	48 89 e5             	mov    rbp,rsp
  401c8a:	48 83 ec 10          	sub    rsp,0x10
  401c8e:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
  401c92:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  401c96:	48 89 c7             	mov    rdi,rax
  401c99:	e8 92 05 00 00       	call   402230 <_ZNSt13_Bvector_baseISaIbEE13_M_deallocateEv>
  401c9e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  401ca2:	48 89 c7             	mov    rdi,rax
  401ca5:	e8 7a ff ff ff       	call   401c24 <_ZNSt13_Bvector_baseISaIbEE13_Bvector_implD1Ev>
  401caa:	90                   	nop
  401cab:	c9                   	leave  
  401cac:	c3                   	ret    
  401cad:	90                   	nop

0000000000401cae <_ZNSt6vectorIbSaIbEE13_M_initializeEm>:
  401cae:	55                   	push   rbp
  401caf:	48 89 e5             	mov    rbp,rsp
  401cb2:	48 83 ec 40          	sub    rsp,0x40
  401cb6:	48 89 7d c8          	mov    QWORD PTR [rbp-0x38],rdi
  401cba:	48 89 75 c0          	mov    QWORD PTR [rbp-0x40],rsi
  401cbe:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
  401cc2:	48 8b 55 c0          	mov    rdx,QWORD PTR [rbp-0x40]
  401cc6:	48 89 d6             	mov    rsi,rdx
  401cc9:	48 89 c7             	mov    rdi,rax
  401ccc:	e8 c9 05 00 00       	call   40229a <_ZNSt13_Bvector_baseISaIbEE11_M_allocateEm>
  401cd1:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
  401cd5:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
  401cd9:	48 89 c7             	mov    rdi,rax
  401cdc:	e8 e9 05 00 00       	call   4022ca <_ZNSt13_Bvector_baseISaIbEE8_S_nwordEm>
  401ce1:	48 8d 14 c5 00 00 00 	lea    rdx,[rax*8+0x0]
  401ce8:	00 
  401ce9:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  401ced:	48 01 c2             	add    rdx,rax
  401cf0:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
  401cf4:	48 89 50 20          	mov    QWORD PTR [rax+0x20],rdx
  401cf8:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  401cfc:	48 89 c7             	mov    rdi,rax
  401cff:	e8 dc 05 00 00       	call   4022e0 <_ZSt11__addressofImEPT_RS0_>
  401d04:	48 89 c1             	mov    rcx,rax
  401d07:	48 8d 45 d0          	lea    rax,[rbp-0x30]
  401d0b:	ba 00 00 00 00       	mov    edx,0x0
  401d10:	48 89 ce             	mov    rsi,rcx
  401d13:	48 89 c7             	mov    rdi,rax
  401d16:	e8 8d f9 ff ff       	call   4016a8 <_ZNSt13_Bit_iteratorC1EPmj>
  401d1b:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
  401d1f:	48 8b 55 d0          	mov    rdx,QWORD PTR [rbp-0x30]
  401d23:	48 89 10             	mov    QWORD PTR [rax],rdx
  401d26:	8b 55 d8             	mov    edx,DWORD PTR [rbp-0x28]
  401d29:	89 50 08             	mov    DWORD PTR [rax+0x8],edx
  401d2c:	48 8b 55 c0          	mov    rdx,QWORD PTR [rbp-0x40]
  401d30:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
  401d34:	48 89 d6             	mov    rsi,rdx
  401d37:	48 89 c7             	mov    rdi,rax
  401d3a:	e8 8b fa ff ff       	call   4017ca <_ZNKSt13_Bit_iteratorplEl>
  401d3f:	48 89 c1             	mov    rcx,rax
  401d42:	48 89 d0             	mov    rax,rdx
  401d45:	48 89 4d e0          	mov    QWORD PTR [rbp-0x20],rcx
  401d49:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
  401d4d:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
  401d51:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
  401d55:	48 89 50 10          	mov    QWORD PTR [rax+0x10],rdx
  401d59:	8b 55 e8             	mov    edx,DWORD PTR [rbp-0x18]
  401d5c:	89 50 18             	mov    DWORD PTR [rax+0x18],edx
  401d5f:	90                   	nop
  401d60:	c9                   	leave  
  401d61:	c3                   	ret    

0000000000401d62 <_ZNKSt13_Bvector_baseISaIbEE13_Bvector_impl11_M_end_addrEv>:
  401d62:	55                   	push   rbp
  401d63:	48 89 e5             	mov    rbp,rsp
  401d66:	48 83 ec 10          	sub    rsp,0x10
  401d6a:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
  401d6e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  401d72:	48 8b 40 20          	mov    rax,QWORD PTR [rax+0x20]
  401d76:	48 85 c0             	test   rax,rax
  401d79:	74 1a                	je     401d95 <_ZNKSt13_Bvector_baseISaIbEE13_Bvector_impl11_M_end_addrEv+0x33>
  401d7b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  401d7f:	48 8b 40 20          	mov    rax,QWORD PTR [rax+0x20]
  401d83:	48 83 e8 08          	sub    rax,0x8
  401d87:	48 89 c7             	mov    rdi,rax
  401d8a:	e8 51 05 00 00       	call   4022e0 <_ZSt11__addressofImEPT_RS0_>
  401d8f:	48 83 c0 08          	add    rax,0x8
  401d93:	eb 05                	jmp    401d9a <_ZNKSt13_Bvector_baseISaIbEE13_Bvector_impl11_M_end_addrEv+0x38>
  401d95:	b8 00 00 00 00       	mov    eax,0x0
  401d9a:	c9                   	leave  
  401d9b:	c3                   	ret    

0000000000401d9c <_ZNSt13_Bvector_baseISaIbEEC1Ev>:
  401d9c:	55                   	push   rbp
  401d9d:	48 89 e5             	mov    rbp,rsp
  401da0:	48 83 ec 10          	sub    rsp,0x10
  401da4:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
  401da8:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  401dac:	48 89 c7             	mov    rdi,rax
  401daf:	e8 3a 05 00 00       	call   4022ee <_ZNSt13_Bvector_baseISaIbEE13_Bvector_implC1Ev>
  401db4:	90                   	nop
  401db5:	c9                   	leave  
  401db6:	c3                   	ret    
  401db7:	90                   	nop

0000000000401db8 <_ZNSt6vectorIbSaIbEE13_M_insert_auxESt13_Bit_iteratorb>:
  401db8:	55                   	push   rbp
  401db9:	48 89 e5             	mov    rbp,rsp
  401dbc:	53                   	push   rbx
  401dbd:	48 81 ec f8 00 00 00 	sub    rsp,0xf8
  401dc4:	48 89 bd 18 ff ff ff 	mov    QWORD PTR [rbp-0xe8],rdi
  401dcb:	89 c8                	mov    eax,ecx
  401dcd:	48 89 b5 08 ff ff ff 	mov    QWORD PTR [rbp-0xf8],rsi
  401dd4:	48 89 95 10 ff ff ff 	mov    QWORD PTR [rbp-0xf0],rdx
  401ddb:	88 85 04 ff ff ff    	mov    BYTE PTR [rbp-0xfc],al
  401de1:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
  401de8:	48 8b 58 10          	mov    rbx,QWORD PTR [rax+0x10]
  401dec:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
  401df3:	48 89 c7             	mov    rdi,rax
  401df6:	e8 67 ff ff ff       	call   401d62 <_ZNKSt13_Bvector_baseISaIbEE13_Bvector_impl11_M_end_addrEv>
  401dfb:	48 39 c3             	cmp    rbx,rax
  401dfe:	0f 95 c0             	setne  al
  401e01:	84 c0                	test   al,al
  401e03:	0f 84 c6 00 00 00    	je     401ecf <_ZNSt6vectorIbSaIbEE13_M_insert_auxESt13_Bit_iteratorb+0x117>
  401e09:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
  401e10:	48 83 c0 10          	add    rax,0x10
  401e14:	be 01 00 00 00       	mov    esi,0x1
  401e19:	48 89 c7             	mov    rdi,rax
  401e1c:	e8 a9 f9 ff ff       	call   4017ca <_ZNKSt13_Bit_iteratorplEl>
  401e21:	48 89 c1             	mov    rcx,rax
  401e24:	48 89 d0             	mov    rax,rdx
  401e27:	48 89 8d 50 ff ff ff 	mov    QWORD PTR [rbp-0xb0],rcx
  401e2e:	48 89 85 58 ff ff ff 	mov    QWORD PTR [rbp-0xa8],rax
  401e35:	4c 8b 85 50 ff ff ff 	mov    r8,QWORD PTR [rbp-0xb0]
  401e3c:	48 8b bd 58 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xa8]
  401e43:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
  401e4a:	48 8b 50 10          	mov    rdx,QWORD PTR [rax+0x10]
  401e4e:	48 8b 48 18          	mov    rcx,QWORD PTR [rax+0x18]
  401e52:	48 8b b5 08 ff ff ff 	mov    rsi,QWORD PTR [rbp-0xf8]
  401e59:	48 8b 85 10 ff ff ff 	mov    rax,QWORD PTR [rbp-0xf0]
  401e60:	49 89 f9             	mov    r9,rdi
  401e63:	48 89 f7             	mov    rdi,rsi
  401e66:	48 89 c6             	mov    rsi,rax
  401e69:	e8 c3 04 00 00       	call   402331 <_ZSt13copy_backwardISt13_Bit_iteratorS0_ET0_T_S2_S1_>
  401e6e:	48 89 c1             	mov    rcx,rax
  401e71:	48 89 d0             	mov    rax,rdx
  401e74:	48 89 8d 40 ff ff ff 	mov    QWORD PTR [rbp-0xc0],rcx
  401e7b:	48 89 85 48 ff ff ff 	mov    QWORD PTR [rbp-0xb8],rax
  401e82:	0f b6 9d 04 ff ff ff 	movzx  ebx,BYTE PTR [rbp-0xfc]
  401e89:	48 8d 85 08 ff ff ff 	lea    rax,[rbp-0xf8]
  401e90:	48 89 c7             	mov    rdi,rax
  401e93:	e8 3c f8 ff ff       	call   4016d4 <_ZNKSt13_Bit_iteratordeEv>
  401e98:	48 89 85 60 ff ff ff 	mov    QWORD PTR [rbp-0xa0],rax
  401e9f:	48 89 95 68 ff ff ff 	mov    QWORD PTR [rbp-0x98],rdx
  401ea6:	48 8d 85 60 ff ff ff 	lea    rax,[rbp-0xa0]
  401ead:	89 de                	mov    esi,ebx
  401eaf:	48 89 c7             	mov    rdi,rax
  401eb2:	e8 9d f5 ff ff       	call   401454 <_ZNSt14_Bit_referenceaSEb>
  401eb7:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
  401ebe:	48 83 c0 10          	add    rax,0x10
  401ec2:	48 89 c7             	mov    rdi,rax
  401ec5:	e8 48 f8 ff ff       	call   401712 <_ZNSt13_Bit_iteratorppEv>
  401eca:	e9 fe 01 00 00       	jmp    4020cd <_ZNSt6vectorIbSaIbEE13_M_insert_auxESt13_Bit_iteratorb+0x315>
  401ecf:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
  401ed6:	ba 81 31 40 00       	mov    edx,0x403181
  401edb:	be 01 00 00 00       	mov    esi,0x1
  401ee0:	48 89 c7             	mov    rdi,rax
  401ee3:	e8 24 05 00 00       	call   40240c <_ZNKSt6vectorIbSaIbEE12_M_check_lenEmPKc>
  401ee8:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
  401eec:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
  401ef3:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
  401ef7:	48 89 d6             	mov    rsi,rdx
  401efa:	48 89 c7             	mov    rdi,rax
  401efd:	e8 98 03 00 00       	call   40229a <_ZNSt13_Bvector_baseISaIbEE11_M_allocateEm>
  401f02:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
  401f06:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
  401f0a:	48 89 c7             	mov    rdi,rax
  401f0d:	e8 ce 03 00 00       	call   4022e0 <_ZSt11__addressofImEPT_RS0_>
  401f12:	48 89 c1             	mov    rcx,rax
  401f15:	48 8d 85 30 ff ff ff 	lea    rax,[rbp-0xd0]
  401f1c:	ba 00 00 00 00       	mov    edx,0x0
  401f21:	48 89 ce             	mov    rsi,rcx
  401f24:	48 89 c7             	mov    rdi,rax
  401f27:	e8 7c f7 ff ff       	call   4016a8 <_ZNSt13_Bit_iteratorC1EPmj>
  401f2c:	48 8d 95 08 ff ff ff 	lea    rdx,[rbp-0xf8]
  401f33:	48 8d 85 70 ff ff ff 	lea    rax,[rbp-0x90]
  401f3a:	48 89 d6             	mov    rsi,rdx
  401f3d:	48 89 c7             	mov    rdi,rax
  401f40:	e8 09 f9 ff ff       	call   40184e <_ZNSt19_Bit_const_iteratorC1ERKSt13_Bit_iterator>
  401f45:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
  401f4c:	48 89 c7             	mov    rdi,rax
  401f4f:	e8 36 06 00 00       	call   40258a <_ZNSt6vectorIbSaIbEE5beginEv>
  401f54:	48 89 c1             	mov    rcx,rax
  401f57:	48 89 d0             	mov    rax,rdx
  401f5a:	48 89 4d 90          	mov    QWORD PTR [rbp-0x70],rcx
  401f5e:	48 89 45 98          	mov    QWORD PTR [rbp-0x68],rax
  401f62:	48 8d 55 90          	lea    rdx,[rbp-0x70]
  401f66:	48 8d 45 80          	lea    rax,[rbp-0x80]
  401f6a:	48 89 d6             	mov    rsi,rdx
  401f6d:	48 89 c7             	mov    rdi,rax
  401f70:	e8 d9 f8 ff ff       	call   40184e <_ZNSt19_Bit_const_iteratorC1ERKSt13_Bit_iterator>
  401f75:	48 8b 8d 70 ff ff ff 	mov    rcx,QWORD PTR [rbp-0x90]
  401f7c:	48 8b bd 78 ff ff ff 	mov    rdi,QWORD PTR [rbp-0x88]
  401f83:	48 8b 75 80          	mov    rsi,QWORD PTR [rbp-0x80]
  401f87:	48 8b 55 88          	mov    rdx,QWORD PTR [rbp-0x78]
  401f8b:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
  401f92:	ff b5 38 ff ff ff    	push   QWORD PTR [rbp-0xc8]
  401f98:	ff b5 30 ff ff ff    	push   QWORD PTR [rbp-0xd0]
  401f9e:	49 89 f8             	mov    r8,rdi
  401fa1:	48 89 c7             	mov    rdi,rax
  401fa4:	e8 2d 05 00 00       	call   4024d6 <_ZNSt6vectorIbSaIbEE15_M_copy_alignedESt19_Bit_const_iteratorS2_St13_Bit_iterator>
  401fa9:	48 83 c4 10          	add    rsp,0x10
  401fad:	48 89 c1             	mov    rcx,rax
  401fb0:	48 89 d0             	mov    rax,rdx
  401fb3:	48 89 8d 20 ff ff ff 	mov    QWORD PTR [rbp-0xe0],rcx
  401fba:	48 89 85 28 ff ff ff 	mov    QWORD PTR [rbp-0xd8],rax
  401fc1:	0f b6 9d 04 ff ff ff 	movzx  ebx,BYTE PTR [rbp-0xfc]
  401fc8:	48 8d 85 20 ff ff ff 	lea    rax,[rbp-0xe0]
  401fcf:	be 00 00 00 00       	mov    esi,0x0
  401fd4:	48 89 c7             	mov    rdi,rax
  401fd7:	e8 54 f7 ff ff       	call   401730 <_ZNSt13_Bit_iteratorppEi>
  401fdc:	48 89 c1             	mov    rcx,rax
  401fdf:	48 89 d0             	mov    rax,rdx
  401fe2:	48 89 4d b0          	mov    QWORD PTR [rbp-0x50],rcx
  401fe6:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
  401fea:	48 8d 45 b0          	lea    rax,[rbp-0x50]
  401fee:	48 89 c7             	mov    rdi,rax
  401ff1:	e8 de f6 ff ff       	call   4016d4 <_ZNKSt13_Bit_iteratordeEv>
  401ff6:	48 89 45 a0          	mov    QWORD PTR [rbp-0x60],rax
  401ffa:	48 89 55 a8          	mov    QWORD PTR [rbp-0x58],rdx
  401ffe:	48 8d 45 a0          	lea    rax,[rbp-0x60]
  402002:	89 de                	mov    esi,ebx
  402004:	48 89 c7             	mov    rdi,rax
  402007:	e8 48 f4 ff ff       	call   401454 <_ZNSt14_Bit_referenceaSEb>
  40200c:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
  402013:	48 89 c7             	mov    rdi,rax
  402016:	e8 b9 00 00 00       	call   4020d4 <_ZNSt6vectorIbSaIbEE3endEv>
  40201b:	48 89 c1             	mov    rcx,rax
  40201e:	48 89 d0             	mov    rax,rdx
  402021:	48 89 4d d0          	mov    QWORD PTR [rbp-0x30],rcx
  402025:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
  402029:	4c 8b 85 20 ff ff ff 	mov    r8,QWORD PTR [rbp-0xe0]
  402030:	48 8b bd 28 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xd8]
  402037:	48 8b 55 d0          	mov    rdx,QWORD PTR [rbp-0x30]
  40203b:	48 8b 4d d8          	mov    rcx,QWORD PTR [rbp-0x28]
  40203f:	48 8b b5 08 ff ff ff 	mov    rsi,QWORD PTR [rbp-0xf8]
  402046:	48 8b 85 10 ff ff ff 	mov    rax,QWORD PTR [rbp-0xf0]
  40204d:	49 89 f9             	mov    r9,rdi
  402050:	48 89 f7             	mov    rdi,rsi
  402053:	48 89 c6             	mov    rsi,rax
  402056:	e8 5d 05 00 00       	call   4025b8 <_ZSt4copyISt13_Bit_iteratorS0_ET0_T_S2_S1_>
  40205b:	48 89 c1             	mov    rcx,rax
  40205e:	48 89 d0             	mov    rax,rdx
  402061:	48 89 4d c0          	mov    QWORD PTR [rbp-0x40],rcx
  402065:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
  402069:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
  402070:	48 8b 55 c0          	mov    rdx,QWORD PTR [rbp-0x40]
  402074:	48 89 50 10          	mov    QWORD PTR [rax+0x10],rdx
  402078:	8b 55 c8             	mov    edx,DWORD PTR [rbp-0x38]
  40207b:	89 50 18             	mov    DWORD PTR [rax+0x18],edx
  40207e:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
  402085:	48 89 c7             	mov    rdi,rax
  402088:	e8 a3 01 00 00       	call   402230 <_ZNSt13_Bvector_baseISaIbEE13_M_deallocateEv>
  40208d:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  402091:	48 89 c7             	mov    rdi,rax
  402094:	e8 31 02 00 00       	call   4022ca <_ZNSt13_Bvector_baseISaIbEE8_S_nwordEm>
  402099:	48 8d 14 c5 00 00 00 	lea    rdx,[rax*8+0x0]
  4020a0:	00 
  4020a1:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
  4020a5:	48 01 c2             	add    rdx,rax
  4020a8:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
  4020af:	48 89 50 20          	mov    QWORD PTR [rax+0x20],rdx
  4020b3:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
  4020ba:	48 8b 95 30 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xd0]
  4020c1:	48 89 10             	mov    QWORD PTR [rax],rdx
  4020c4:	8b 95 38 ff ff ff    	mov    edx,DWORD PTR [rbp-0xc8]
  4020ca:	89 50 08             	mov    DWORD PTR [rax+0x8],edx
  4020cd:	90                   	nop
  4020ce:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
  4020d2:	c9                   	leave  
  4020d3:	c3                   	ret    

00000000004020d4 <_ZNSt6vectorIbSaIbEE3endEv>:
  4020d4:	55                   	push   rbp
  4020d5:	48 89 e5             	mov    rbp,rsp
  4020d8:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
  4020dc:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  4020e0:	48 8b 50 10          	mov    rdx,QWORD PTR [rax+0x10]
  4020e4:	48 89 55 f0          	mov    QWORD PTR [rbp-0x10],rdx
  4020e8:	48 8b 40 18          	mov    rax,QWORD PTR [rax+0x18]
  4020ec:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
  4020f0:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
  4020f4:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  4020f8:	48 89 d1             	mov    rcx,rdx
  4020fb:	48 89 c2             	mov    rdx,rax
  4020fe:	48 89 c8             	mov    rax,rcx
  402101:	5d                   	pop    rbp
  402102:	c3                   	ret    
  402103:	90                   	nop

0000000000402104 <_ZNKSt6vectorIbSaIbEE3endEv>:
  402104:	55                   	push   rbp
  402105:	48 89 e5             	mov    rbp,rsp
  402108:	48 83 ec 40          	sub    rsp,0x40
  40210c:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
  402110:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
  402114:	48 8d 50 10          	lea    rdx,[rax+0x10]
  402118:	48 8d 45 f0          	lea    rax,[rbp-0x10]
  40211c:	48 89 d6             	mov    rsi,rdx
  40211f:	48 89 c7             	mov    rdi,rax
  402122:	e8 27 f7 ff ff       	call   40184e <_ZNSt19_Bit_const_iteratorC1ERKSt13_Bit_iterator>
  402127:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
  40212b:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
  40212f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  402133:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
  402137:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
  40213b:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  40213f:	48 89 d1             	mov    rcx,rdx
  402142:	48 89 c2             	mov    rdx,rax
  402145:	48 89 c8             	mov    rax,rcx
  402148:	c9                   	leave  
  402149:	c3                   	ret    

000000000040214a <_ZNKSt6vectorIbSaIbEE5beginEv>:
  40214a:	55                   	push   rbp
  40214b:	48 89 e5             	mov    rbp,rsp
  40214e:	48 83 ec 40          	sub    rsp,0x40
  402152:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
  402156:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
  40215a:	48 8d 45 f0          	lea    rax,[rbp-0x10]
  40215e:	48 89 d6             	mov    rsi,rdx
  402161:	48 89 c7             	mov    rdi,rax
  402164:	e8 e5 f6 ff ff       	call   40184e <_ZNSt19_Bit_const_iteratorC1ERKSt13_Bit_iterator>
  402169:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
  40216d:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
  402171:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  402175:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
  402179:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
  40217d:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  402181:	48 89 d1             	mov    rcx,rdx
  402184:	48 89 c2             	mov    rdx,rax
  402187:	48 89 c8             	mov    rax,rcx
  40218a:	c9                   	leave  
  40218b:	c3                   	ret    

000000000040218c <_ZNSaImEC1IbEERKSaIT_E>:
  40218c:	55                   	push   rbp
  40218d:	48 89 e5             	mov    rbp,rsp
  402190:	48 83 ec 10          	sub    rsp,0x10
  402194:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
  402198:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
  40219c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  4021a0:	48 89 c7             	mov    rdi,rax
  4021a3:	e8 c0 04 00 00       	call   402668 <_ZN9__gnu_cxx13new_allocatorImEC1Ev>
  4021a8:	90                   	nop
  4021a9:	c9                   	leave  
  4021aa:	c3                   	ret    
  4021ab:	90                   	nop

00000000004021ac <_ZNSaImED1Ev>:
  4021ac:	55                   	push   rbp
  4021ad:	48 89 e5             	mov    rbp,rsp
  4021b0:	48 83 ec 10          	sub    rsp,0x10
  4021b4:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
  4021b8:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  4021bc:	48 89 c7             	mov    rdi,rax
  4021bf:	e8 b0 04 00 00       	call   402674 <_ZN9__gnu_cxx13new_allocatorImED1Ev>
  4021c4:	90                   	nop
  4021c5:	c9                   	leave  
  4021c6:	c3                   	ret    

00000000004021c7 <_ZSt4moveIRSaImEEONSt16remove_referenceIT_E4typeEOS3_>:
  4021c7:	55                   	push   rbp
  4021c8:	48 89 e5             	mov    rbp,rsp
  4021cb:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
  4021cf:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  4021d3:	5d                   	pop    rbp
  4021d4:	c3                   	ret    
  4021d5:	90                   	nop

00000000004021d6 <_ZNSt13_Bvector_baseISaIbEE13_Bvector_implC1EOSaImE>:
  4021d6:	55                   	push   rbp
  4021d7:	48 89 e5             	mov    rbp,rsp
  4021da:	48 83 ec 10          	sub    rsp,0x10
  4021de:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
  4021e2:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
  4021e6:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
  4021ea:	48 89 c7             	mov    rdi,rax
  4021ed:	e8 d5 ff ff ff       	call   4021c7 <_ZSt4moveIRSaImEEONSt16remove_referenceIT_E4typeEOS3_>
  4021f2:	48 89 c2             	mov    rdx,rax
  4021f5:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  4021f9:	48 89 d6             	mov    rsi,rdx
  4021fc:	48 89 c7             	mov    rdi,rax
  4021ff:	e8 7c 04 00 00       	call   402680 <_ZNSaImEC1ERKS_>
  402204:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  402208:	48 89 c7             	mov    rdi,rax
  40220b:	e8 72 f4 ff ff       	call   401682 <_ZNSt13_Bit_iteratorC1Ev>
  402210:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  402214:	48 83 c0 10          	add    rax,0x10
  402218:	48 89 c7             	mov    rdi,rax
  40221b:	e8 62 f4 ff ff       	call   401682 <_ZNSt13_Bit_iteratorC1Ev>
  402220:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  402224:	48 c7 40 20 00 00 00 	mov    QWORD PTR [rax+0x20],0x0
  40222b:	00 
  40222c:	90                   	nop
  40222d:	c9                   	leave  
  40222e:	c3                   	ret    
  40222f:	90                   	nop

0000000000402230 <_ZNSt13_Bvector_baseISaIbEE13_M_deallocateEv>:
  402230:	55                   	push   rbp
  402231:	48 89 e5             	mov    rbp,rsp
  402234:	48 83 ec 20          	sub    rsp,0x20
  402238:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
  40223c:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  402240:	48 8b 00             	mov    rax,QWORD PTR [rax]
  402243:	48 85 c0             	test   rax,rax
  402246:	74 4e                	je     402296 <_ZNSt13_Bvector_baseISaIbEE13_M_deallocateEv+0x66>
  402248:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  40224c:	48 89 c7             	mov    rdi,rax
  40224f:	e8 0e fb ff ff       	call   401d62 <_ZNKSt13_Bvector_baseISaIbEE13_Bvector_impl11_M_end_addrEv>
  402254:	48 89 c2             	mov    rdx,rax
  402257:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  40225b:	48 8b 00             	mov    rax,QWORD PTR [rax]
  40225e:	48 29 c2             	sub    rdx,rax
  402261:	48 89 d0             	mov    rax,rdx
  402264:	48 c1 f8 03          	sar    rax,0x3
  402268:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
  40226c:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  402270:	48 8b 40 20          	mov    rax,QWORD PTR [rax+0x20]
  402274:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
  402278:	48 c1 e2 03          	shl    rdx,0x3
  40227c:	48 f7 da             	neg    rdx
  40227f:	48 8d 0c 10          	lea    rcx,[rax+rdx*1]
  402283:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  402287:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
  40228b:	48 89 ce             	mov    rsi,rcx
  40228e:	48 89 c7             	mov    rdi,rax
  402291:	e8 10 04 00 00       	call   4026a6 <_ZNSt16allocator_traitsISaImEE10deallocateERS0_Pmm>
  402296:	90                   	nop
  402297:	c9                   	leave  
  402298:	c3                   	ret    
  402299:	90                   	nop

000000000040229a <_ZNSt13_Bvector_baseISaIbEE11_M_allocateEm>:
  40229a:	55                   	push   rbp
  40229b:	48 89 e5             	mov    rbp,rsp
  40229e:	48 83 ec 10          	sub    rsp,0x10
  4022a2:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
  4022a6:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
  4022aa:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
  4022ae:	48 89 c7             	mov    rdi,rax
  4022b1:	e8 14 00 00 00       	call   4022ca <_ZNSt13_Bvector_baseISaIbEE8_S_nwordEm>
  4022b6:	48 89 c2             	mov    rdx,rax
  4022b9:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  4022bd:	48 89 d6             	mov    rsi,rdx
  4022c0:	48 89 c7             	mov    rdi,rax
  4022c3:	e8 0c 04 00 00       	call   4026d4 <_ZNSt16allocator_traitsISaImEE8allocateERS0_m>
  4022c8:	c9                   	leave  
  4022c9:	c3                   	ret    

00000000004022ca <_ZNSt13_Bvector_baseISaIbEE8_S_nwordEm>:
  4022ca:	55                   	push   rbp
  4022cb:	48 89 e5             	mov    rbp,rsp
  4022ce:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
  4022d2:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  4022d6:	48 83 c0 3f          	add    rax,0x3f
  4022da:	48 c1 e8 06          	shr    rax,0x6
  4022de:	5d                   	pop    rbp
  4022df:	c3                   	ret    

00000000004022e0 <_ZSt11__addressofImEPT_RS0_>:
  4022e0:	55                   	push   rbp
  4022e1:	48 89 e5             	mov    rbp,rsp
  4022e4:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
  4022e8:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  4022ec:	5d                   	pop    rbp
  4022ed:	c3                   	ret    

00000000004022ee <_ZNSt13_Bvector_baseISaIbEE13_Bvector_implC1Ev>:
  4022ee:	55                   	push   rbp
  4022ef:	48 89 e5             	mov    rbp,rsp
  4022f2:	48 83 ec 10          	sub    rsp,0x10
  4022f6:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
  4022fa:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  4022fe:	48 89 c7             	mov    rdi,rax
  402301:	e8 f8 03 00 00       	call   4026fe <_ZNSaImEC1Ev>
  402306:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  40230a:	48 89 c7             	mov    rdi,rax
  40230d:	e8 70 f3 ff ff       	call   401682 <_ZNSt13_Bit_iteratorC1Ev>
  402312:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  402316:	48 83 c0 10          	add    rax,0x10
  40231a:	48 89 c7             	mov    rdi,rax
  40231d:	e8 60 f3 ff ff       	call   401682 <_ZNSt13_Bit_iteratorC1Ev>
  402322:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  402326:	48 c7 40 20 00 00 00 	mov    QWORD PTR [rax+0x20],0x0
  40232d:	00 
  40232e:	90                   	nop
  40232f:	c9                   	leave  
  402330:	c3                   	ret    

0000000000402331 <_ZSt13copy_backwardISt13_Bit_iteratorS0_ET0_T_S2_S1_>:
  402331:	55                   	push   rbp
  402332:	48 89 e5             	mov    rbp,rsp
  402335:	48 83 ec 70          	sub    rsp,0x70
  402339:	48 89 c8             	mov    rax,rcx
  40233c:	4c 89 c9             	mov    rcx,r9
  40233f:	48 89 7d c0          	mov    QWORD PTR [rbp-0x40],rdi
  402343:	48 89 75 c8          	mov    QWORD PTR [rbp-0x38],rsi
  402347:	48 89 55 b0          	mov    QWORD PTR [rbp-0x50],rdx
  40234b:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
  40234f:	4c 89 45 a0          	mov    QWORD PTR [rbp-0x60],r8
  402353:	48 89 4d a8          	mov    QWORD PTR [rbp-0x58],rcx
  402357:	48 8b 55 b0          	mov    rdx,QWORD PTR [rbp-0x50]
  40235b:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
  40235f:	48 89 d7             	mov    rdi,rdx
  402362:	48 89 c6             	mov    rsi,rax
  402365:	e8 af 03 00 00       	call   402719 <_ZSt12__miter_baseISt13_Bit_iteratorET_S1_>
  40236a:	48 89 c1             	mov    rcx,rax
  40236d:	48 89 d0             	mov    rax,rdx
  402370:	48 89 4d e0          	mov    QWORD PTR [rbp-0x20],rcx
  402374:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
  402378:	48 8b 55 c0          	mov    rdx,QWORD PTR [rbp-0x40]
  40237c:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
  402380:	48 89 d7             	mov    rdi,rdx
  402383:	48 89 c6             	mov    rsi,rax
  402386:	e8 8e 03 00 00       	call   402719 <_ZSt12__miter_baseISt13_Bit_iteratorET_S1_>
  40238b:	48 89 c1             	mov    rcx,rax
  40238e:	48 89 d0             	mov    rax,rdx
  402391:	48 89 4d f0          	mov    QWORD PTR [rbp-0x10],rcx
  402395:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
  402399:	4c 8b 45 a0          	mov    r8,QWORD PTR [rbp-0x60]
  40239d:	48 8b 7d a8          	mov    rdi,QWORD PTR [rbp-0x58]
  4023a1:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
  4023a5:	48 8b 4d e8          	mov    rcx,QWORD PTR [rbp-0x18]
  4023a9:	48 8b 75 f0          	mov    rsi,QWORD PTR [rbp-0x10]
  4023ad:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  4023b1:	49 89 f9             	mov    r9,rdi
  4023b4:	48 89 f7             	mov    rdi,rsi
  4023b7:	48 89 c6             	mov    rsi,rax
  4023ba:	e8 8f 03 00 00       	call   40274e <_ZSt23__copy_move_backward_a2ILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_>
  4023bf:	48 89 c1             	mov    rcx,rax
  4023c2:	48 89 d0             	mov    rax,rdx
  4023c5:	48 89 4d d0          	mov    QWORD PTR [rbp-0x30],rcx
  4023c9:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
  4023cd:	48 8b 55 d0          	mov    rdx,QWORD PTR [rbp-0x30]
  4023d1:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
  4023d5:	48 89 d1             	mov    rcx,rdx
  4023d8:	48 89 c2             	mov    rdx,rax
  4023db:	48 89 c8             	mov    rax,rcx
  4023de:	c9                   	leave  
  4023df:	c3                   	ret    

00000000004023e0 <_ZSt3maxImERKT_S2_S2_>:
  4023e0:	55                   	push   rbp
  4023e1:	48 89 e5             	mov    rbp,rsp
  4023e4:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
  4023e8:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
  4023ec:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  4023f0:	48 8b 10             	mov    rdx,QWORD PTR [rax]
  4023f3:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
  4023f7:	48 8b 00             	mov    rax,QWORD PTR [rax]
  4023fa:	48 39 c2             	cmp    rdx,rax
  4023fd:	73 06                	jae    402405 <_ZSt3maxImERKT_S2_S2_+0x25>
  4023ff:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
  402403:	eb 04                	jmp    402409 <_ZSt3maxImERKT_S2_S2_+0x29>
  402405:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  402409:	5d                   	pop    rbp
  40240a:	c3                   	ret    
  40240b:	90                   	nop

000000000040240c <_ZNKSt6vectorIbSaIbEE12_M_check_lenEmPKc>:
  40240c:	55                   	push   rbp
  40240d:	48 89 e5             	mov    rbp,rsp
  402410:	53                   	push   rbx
  402411:	48 83 ec 38          	sub    rsp,0x38
  402415:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
  402419:	48 89 75 d0          	mov    QWORD PTR [rbp-0x30],rsi
  40241d:	48 89 55 c8          	mov    QWORD PTR [rbp-0x38],rdx
  402421:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
  402425:	48 89 c7             	mov    rdi,rax
  402428:	e8 f1 03 00 00       	call   40281e <_ZNKSt6vectorIbSaIbEE8max_sizeEv>
  40242d:	48 89 c3             	mov    rbx,rax
  402430:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
  402434:	48 89 c7             	mov    rdi,rax
  402437:	e8 32 f7 ff ff       	call   401b6e <_ZNKSt6vectorIbSaIbEE4sizeEv>
  40243c:	48 29 c3             	sub    rbx,rax
  40243f:	48 89 da             	mov    rdx,rbx
  402442:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
  402446:	48 39 c2             	cmp    rdx,rax
  402449:	0f 92 c0             	setb   al
  40244c:	84 c0                	test   al,al
  40244e:	74 0c                	je     40245c <_ZNKSt6vectorIbSaIbEE12_M_check_lenEmPKc+0x50>
  402450:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
  402454:	48 89 c7             	mov    rdi,rax
  402457:	e8 f4 e6 ff ff       	call   400b50 <_ZSt20__throw_length_errorPKc@plt>
  40245c:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
  402460:	48 89 c7             	mov    rdi,rax
  402463:	e8 06 f7 ff ff       	call   401b6e <_ZNKSt6vectorIbSaIbEE4sizeEv>
  402468:	48 89 c3             	mov    rbx,rax
  40246b:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
  40246f:	48 89 c7             	mov    rdi,rax
  402472:	e8 f7 f6 ff ff       	call   401b6e <_ZNKSt6vectorIbSaIbEE4sizeEv>
  402477:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
  40247b:	48 8d 55 d0          	lea    rdx,[rbp-0x30]
  40247f:	48 8d 45 e0          	lea    rax,[rbp-0x20]
  402483:	48 89 d6             	mov    rsi,rdx
  402486:	48 89 c7             	mov    rdi,rax
  402489:	e8 52 ff ff ff       	call   4023e0 <_ZSt3maxImERKT_S2_S2_>
  40248e:	48 8b 00             	mov    rax,QWORD PTR [rax]
  402491:	48 01 d8             	add    rax,rbx
  402494:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
  402498:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
  40249c:	48 89 c7             	mov    rdi,rax
  40249f:	e8 ca f6 ff ff       	call   401b6e <_ZNKSt6vectorIbSaIbEE4sizeEv>
  4024a4:	48 3b 45 e8          	cmp    rax,QWORD PTR [rbp-0x18]
  4024a8:	77 12                	ja     4024bc <_ZNKSt6vectorIbSaIbEE12_M_check_lenEmPKc+0xb0>
  4024aa:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
  4024ae:	48 89 c7             	mov    rdi,rax
  4024b1:	e8 68 03 00 00       	call   40281e <_ZNKSt6vectorIbSaIbEE8max_sizeEv>
  4024b6:	48 3b 45 e8          	cmp    rax,QWORD PTR [rbp-0x18]
  4024ba:	73 0e                	jae    4024ca <_ZNKSt6vectorIbSaIbEE12_M_check_lenEmPKc+0xbe>
  4024bc:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
  4024c0:	48 89 c7             	mov    rdi,rax
  4024c3:	e8 56 03 00 00       	call   40281e <_ZNKSt6vectorIbSaIbEE8max_sizeEv>
  4024c8:	eb 04                	jmp    4024ce <_ZNKSt6vectorIbSaIbEE12_M_check_lenEmPKc+0xc2>
  4024ca:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  4024ce:	48 83 c4 38          	add    rsp,0x38
  4024d2:	5b                   	pop    rbx
  4024d3:	5d                   	pop    rbp
  4024d4:	c3                   	ret    
  4024d5:	90                   	nop

00000000004024d6 <_ZNSt6vectorIbSaIbEE15_M_copy_alignedESt19_Bit_const_iteratorS2_St13_Bit_iterator>:
  4024d6:	55                   	push   rbp
  4024d7:	48 89 e5             	mov    rbp,rsp
  4024da:	48 83 c4 80          	add    rsp,0xffffffffffffff80
  4024de:	48 89 7d b8          	mov    QWORD PTR [rbp-0x48],rdi
  4024e2:	48 89 c8             	mov    rax,rcx
  4024e5:	4c 89 c1             	mov    rcx,r8
  4024e8:	48 89 75 a8          	mov    QWORD PTR [rbp-0x58],rsi
  4024ec:	48 89 55 b0          	mov    QWORD PTR [rbp-0x50],rdx
  4024f0:	48 89 45 98          	mov    QWORD PTR [rbp-0x68],rax
  4024f4:	48 89 4d a0          	mov    QWORD PTR [rbp-0x60],rcx
  4024f8:	48 8b 55 10          	mov    rdx,QWORD PTR [rbp+0x10]
  4024fc:	48 8b 4d 98          	mov    rcx,QWORD PTR [rbp-0x68]
  402500:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
  402504:	48 89 ce             	mov    rsi,rcx
  402507:	48 89 c7             	mov    rdi,rax
  40250a:	e8 67 03 00 00       	call   402876 <_ZSt4copyIPmS0_ET0_T_S2_S1_>
  40250f:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
  402513:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
  402517:	48 8d 45 d0          	lea    rax,[rbp-0x30]
  40251b:	ba 00 00 00 00       	mov    edx,0x0
  402520:	48 89 ce             	mov    rsi,rcx
  402523:	48 89 c7             	mov    rdi,rax
  402526:	e8 7d f1 ff ff       	call   4016a8 <_ZNSt13_Bit_iteratorC1EPmj>
  40252b:	48 8b 4d 98          	mov    rcx,QWORD PTR [rbp-0x68]
  40252f:	48 8d 45 e0          	lea    rax,[rbp-0x20]
  402533:	ba 00 00 00 00       	mov    edx,0x0
  402538:	48 89 ce             	mov    rsi,rcx
  40253b:	48 89 c7             	mov    rdi,rax
  40253e:	e8 df f2 ff ff       	call   401822 <_ZNSt19_Bit_const_iteratorC1EPmj>
  402543:	4c 8b 45 d0          	mov    r8,QWORD PTR [rbp-0x30]
  402547:	48 8b 7d d8          	mov    rdi,QWORD PTR [rbp-0x28]
  40254b:	48 8b 55 98          	mov    rdx,QWORD PTR [rbp-0x68]
  40254f:	48 8b 4d a0          	mov    rcx,QWORD PTR [rbp-0x60]
  402553:	48 8b 75 e0          	mov    rsi,QWORD PTR [rbp-0x20]
  402557:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  40255b:	49 89 f9             	mov    r9,rdi
  40255e:	48 89 f7             	mov    rdi,rsi
  402561:	48 89 c6             	mov    rsi,rax
  402564:	e8 59 03 00 00       	call   4028c2 <_ZSt4copyISt19_Bit_const_iteratorSt13_Bit_iteratorET0_T_S3_S2_>
  402569:	48 89 c1             	mov    rcx,rax
  40256c:	48 89 d0             	mov    rax,rdx
  40256f:	48 89 4d c0          	mov    QWORD PTR [rbp-0x40],rcx
  402573:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
  402577:	48 8b 55 c0          	mov    rdx,QWORD PTR [rbp-0x40]
  40257b:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
  40257f:	48 89 d1             	mov    rcx,rdx
  402582:	48 89 c2             	mov    rdx,rax
  402585:	48 89 c8             	mov    rax,rcx
  402588:	c9                   	leave  
  402589:	c3                   	ret    

000000000040258a <_ZNSt6vectorIbSaIbEE5beginEv>:
  40258a:	55                   	push   rbp
  40258b:	48 89 e5             	mov    rbp,rsp
  40258e:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
  402592:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  402596:	48 8b 10             	mov    rdx,QWORD PTR [rax]
  402599:	48 89 55 f0          	mov    QWORD PTR [rbp-0x10],rdx
  40259d:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
  4025a1:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
  4025a5:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
  4025a9:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  4025ad:	48 89 d1             	mov    rcx,rdx
  4025b0:	48 89 c2             	mov    rdx,rax
  4025b3:	48 89 c8             	mov    rax,rcx
  4025b6:	5d                   	pop    rbp
  4025b7:	c3                   	ret    

00000000004025b8 <_ZSt4copyISt13_Bit_iteratorS0_ET0_T_S2_S1_>:
  4025b8:	55                   	push   rbp
  4025b9:	48 89 e5             	mov    rbp,rsp
  4025bc:	48 83 ec 70          	sub    rsp,0x70
  4025c0:	48 89 c8             	mov    rax,rcx
  4025c3:	4c 89 c9             	mov    rcx,r9
  4025c6:	48 89 7d c0          	mov    QWORD PTR [rbp-0x40],rdi
  4025ca:	48 89 75 c8          	mov    QWORD PTR [rbp-0x38],rsi
  4025ce:	48 89 55 b0          	mov    QWORD PTR [rbp-0x50],rdx
  4025d2:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
  4025d6:	4c 89 45 a0          	mov    QWORD PTR [rbp-0x60],r8
  4025da:	48 89 4d a8          	mov    QWORD PTR [rbp-0x58],rcx
  4025de:	48 8b 55 b0          	mov    rdx,QWORD PTR [rbp-0x50]
  4025e2:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
  4025e6:	48 89 d7             	mov    rdi,rdx
  4025e9:	48 89 c6             	mov    rsi,rax
  4025ec:	e8 28 01 00 00       	call   402719 <_ZSt12__miter_baseISt13_Bit_iteratorET_S1_>
  4025f1:	48 89 c1             	mov    rcx,rax
  4025f4:	48 89 d0             	mov    rax,rdx
  4025f7:	48 89 4d e0          	mov    QWORD PTR [rbp-0x20],rcx
  4025fb:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
  4025ff:	48 8b 55 c0          	mov    rdx,QWORD PTR [rbp-0x40]
  402603:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
  402607:	48 89 d7             	mov    rdi,rdx
  40260a:	48 89 c6             	mov    rsi,rax
  40260d:	e8 07 01 00 00       	call   402719 <_ZSt12__miter_baseISt13_Bit_iteratorET_S1_>
  402612:	48 89 c1             	mov    rcx,rax
  402615:	48 89 d0             	mov    rax,rdx
  402618:	48 89 4d f0          	mov    QWORD PTR [rbp-0x10],rcx
  40261c:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
  402620:	4c 8b 45 a0          	mov    r8,QWORD PTR [rbp-0x60]
  402624:	48 8b 7d a8          	mov    rdi,QWORD PTR [rbp-0x58]
  402628:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
  40262c:	48 8b 4d e8          	mov    rcx,QWORD PTR [rbp-0x18]
  402630:	48 8b 75 f0          	mov    rsi,QWORD PTR [rbp-0x10]
  402634:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  402638:	49 89 f9             	mov    r9,rdi
  40263b:	48 89 f7             	mov    rdi,rsi
  40263e:	48 89 c6             	mov    rsi,rax
  402641:	e8 2b 03 00 00       	call   402971 <_ZSt14__copy_move_a2ILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_>
  402646:	48 89 c1             	mov    rcx,rax
  402649:	48 89 d0             	mov    rax,rdx
  40264c:	48 89 4d d0          	mov    QWORD PTR [rbp-0x30],rcx
  402650:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
  402654:	48 8b 55 d0          	mov    rdx,QWORD PTR [rbp-0x30]
  402658:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
  40265c:	48 89 d1             	mov    rcx,rdx
  40265f:	48 89 c2             	mov    rdx,rax
  402662:	48 89 c8             	mov    rax,rcx
  402665:	c9                   	leave  
  402666:	c3                   	ret    
  402667:	90                   	nop

0000000000402668 <_ZN9__gnu_cxx13new_allocatorImEC1Ev>:
  402668:	55                   	push   rbp
  402669:	48 89 e5             	mov    rbp,rsp
  40266c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
  402670:	90                   	nop
  402671:	5d                   	pop    rbp
  402672:	c3                   	ret    
  402673:	90                   	nop

0000000000402674 <_ZN9__gnu_cxx13new_allocatorImED1Ev>:
  402674:	55                   	push   rbp
  402675:	48 89 e5             	mov    rbp,rsp
  402678:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
  40267c:	90                   	nop
  40267d:	5d                   	pop    rbp
  40267e:	c3                   	ret    
  40267f:	90                   	nop

0000000000402680 <_ZNSaImEC1ERKS_>:
  402680:	55                   	push   rbp
  402681:	48 89 e5             	mov    rbp,rsp
  402684:	48 83 ec 10          	sub    rsp,0x10
  402688:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
  40268c:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
  402690:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
  402694:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  402698:	48 89 d6             	mov    rsi,rdx
  40269b:	48 89 c7             	mov    rdi,rax
  40269e:	e8 9f 03 00 00       	call   402a42 <_ZN9__gnu_cxx13new_allocatorImEC1ERKS1_>
  4026a3:	90                   	nop
  4026a4:	c9                   	leave  
  4026a5:	c3                   	ret    

00000000004026a6 <_ZNSt16allocator_traitsISaImEE10deallocateERS0_Pmm>:
  4026a6:	55                   	push   rbp
  4026a7:	48 89 e5             	mov    rbp,rsp
  4026aa:	48 83 ec 20          	sub    rsp,0x20
  4026ae:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
  4026b2:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
  4026b6:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
  4026ba:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
  4026be:	48 8b 4d f0          	mov    rcx,QWORD PTR [rbp-0x10]
  4026c2:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  4026c6:	48 89 ce             	mov    rsi,rcx
  4026c9:	48 89 c7             	mov    rdi,rax
  4026cc:	e8 81 03 00 00       	call   402a52 <_ZN9__gnu_cxx13new_allocatorImE10deallocateEPmm>
  4026d1:	90                   	nop
  4026d2:	c9                   	leave  
  4026d3:	c3                   	ret    

00000000004026d4 <_ZNSt16allocator_traitsISaImEE8allocateERS0_m>:
  4026d4:	55                   	push   rbp
  4026d5:	48 89 e5             	mov    rbp,rsp
  4026d8:	48 83 ec 10          	sub    rsp,0x10
  4026dc:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
  4026e0:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
  4026e4:	48 8b 4d f0          	mov    rcx,QWORD PTR [rbp-0x10]
  4026e8:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  4026ec:	ba 00 00 00 00       	mov    edx,0x0
  4026f1:	48 89 ce             	mov    rsi,rcx
  4026f4:	48 89 c7             	mov    rdi,rax
  4026f7:	e8 7a 03 00 00       	call   402a76 <_ZN9__gnu_cxx13new_allocatorImE8allocateEmPKv>
  4026fc:	c9                   	leave  
  4026fd:	c3                   	ret    

00000000004026fe <_ZNSaImEC1Ev>:
  4026fe:	55                   	push   rbp
  4026ff:	48 89 e5             	mov    rbp,rsp
  402702:	48 83 ec 10          	sub    rsp,0x10
  402706:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
  40270a:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  40270e:	48 89 c7             	mov    rdi,rax
  402711:	e8 52 ff ff ff       	call   402668 <_ZN9__gnu_cxx13new_allocatorImEC1Ev>
  402716:	90                   	nop
  402717:	c9                   	leave  
  402718:	c3                   	ret    

0000000000402719 <_ZSt12__miter_baseISt13_Bit_iteratorET_S1_>:
  402719:	55                   	push   rbp
  40271a:	48 89 e5             	mov    rbp,rsp
  40271d:	48 89 fa             	mov    rdx,rdi
  402720:	48 89 f0             	mov    rax,rsi
  402723:	48 89 55 e0          	mov    QWORD PTR [rbp-0x20],rdx
  402727:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
  40272b:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
  40272f:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
  402733:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  402737:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
  40273b:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
  40273f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  402743:	48 89 d1             	mov    rcx,rdx
  402746:	48 89 c2             	mov    rdx,rax
  402749:	48 89 c8             	mov    rax,rcx
  40274c:	5d                   	pop    rbp
  40274d:	c3                   	ret    

000000000040274e <_ZSt23__copy_move_backward_a2ILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_>:
  40274e:	55                   	push   rbp
  40274f:	48 89 e5             	mov    rbp,rsp
  402752:	48 83 c4 80          	add    rsp,0xffffffffffffff80
  402756:	48 89 c8             	mov    rax,rcx
  402759:	4c 89 c9             	mov    rcx,r9
  40275c:	48 89 7d b0          	mov    QWORD PTR [rbp-0x50],rdi
  402760:	48 89 75 b8          	mov    QWORD PTR [rbp-0x48],rsi
  402764:	48 89 55 a0          	mov    QWORD PTR [rbp-0x60],rdx
  402768:	48 89 45 a8          	mov    QWORD PTR [rbp-0x58],rax
  40276c:	4c 89 45 90          	mov    QWORD PTR [rbp-0x70],r8
  402770:	48 89 4d 98          	mov    QWORD PTR [rbp-0x68],rcx
  402774:	48 8b 55 90          	mov    rdx,QWORD PTR [rbp-0x70]
  402778:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
  40277c:	48 89 d7             	mov    rdi,rdx
  40277f:	48 89 c6             	mov    rsi,rax
  402782:	e8 31 03 00 00       	call   402ab8 <_ZSt12__niter_baseISt13_Bit_iteratorET_S1_>
  402787:	48 89 c1             	mov    rcx,rax
  40278a:	48 89 d0             	mov    rax,rdx
  40278d:	48 89 4d d0          	mov    QWORD PTR [rbp-0x30],rcx
  402791:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
  402795:	48 8b 55 a0          	mov    rdx,QWORD PTR [rbp-0x60]
  402799:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
  40279d:	48 89 d7             	mov    rdi,rdx
  4027a0:	48 89 c6             	mov    rsi,rax
  4027a3:	e8 10 03 00 00       	call   402ab8 <_ZSt12__niter_baseISt13_Bit_iteratorET_S1_>
  4027a8:	48 89 c1             	mov    rcx,rax
  4027ab:	48 89 d0             	mov    rax,rdx
  4027ae:	48 89 4d e0          	mov    QWORD PTR [rbp-0x20],rcx
  4027b2:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
  4027b6:	48 8b 55 b0          	mov    rdx,QWORD PTR [rbp-0x50]
  4027ba:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
  4027be:	48 89 d7             	mov    rdi,rdx
  4027c1:	48 89 c6             	mov    rsi,rax
  4027c4:	e8 ef 02 00 00       	call   402ab8 <_ZSt12__niter_baseISt13_Bit_iteratorET_S1_>
  4027c9:	48 89 c1             	mov    rcx,rax
  4027cc:	48 89 d0             	mov    rax,rdx
  4027cf:	48 89 4d f0          	mov    QWORD PTR [rbp-0x10],rcx
  4027d3:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
  4027d7:	4c 8b 45 d0          	mov    r8,QWORD PTR [rbp-0x30]
  4027db:	48 8b 7d d8          	mov    rdi,QWORD PTR [rbp-0x28]
  4027df:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
  4027e3:	48 8b 4d e8          	mov    rcx,QWORD PTR [rbp-0x18]
  4027e7:	48 8b 75 f0          	mov    rsi,QWORD PTR [rbp-0x10]
  4027eb:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  4027ef:	49 89 f9             	mov    r9,rdi
  4027f2:	48 89 f7             	mov    rdi,rsi
  4027f5:	48 89 c6             	mov    rsi,rax
  4027f8:	e8 f0 02 00 00       	call   402aed <_ZSt22__copy_move_backward_aILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_>
  4027fd:	48 89 c1             	mov    rcx,rax
  402800:	48 89 d0             	mov    rax,rdx
  402803:	48 89 4d c0          	mov    QWORD PTR [rbp-0x40],rcx
  402807:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
  40280b:	48 8b 55 c0          	mov    rdx,QWORD PTR [rbp-0x40]
  40280f:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
  402813:	48 89 d1             	mov    rcx,rdx
  402816:	48 89 c2             	mov    rdx,rax
  402819:	48 89 c8             	mov    rax,rcx
  40281c:	c9                   	leave  
  40281d:	c3                   	ret    

000000000040281e <_ZNKSt6vectorIbSaIbEE8max_sizeEv>:
  40281e:	55                   	push   rbp
  40281f:	48 89 e5             	mov    rbp,rsp
  402822:	48 83 ec 20          	sub    rsp,0x20
  402826:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
  40282a:	48 b8 c0 ff ff ff ff 	movabs rax,0x7fffffffffffffc0
  402831:	ff ff 7f 
  402834:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
  402838:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  40283c:	48 89 c7             	mov    rdi,rax
  40283f:	e8 34 03 00 00       	call   402b78 <_ZNKSt13_Bvector_baseISaIbEE20_M_get_Bit_allocatorEv>
  402844:	48 89 c7             	mov    rdi,rax
  402847:	e8 12 03 00 00       	call   402b5e <_ZNSt16allocator_traitsISaImEE8max_sizeERKS0_>
  40284c:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
  402850:	48 b8 ff ff ff ff ff 	movabs rax,0x1ffffffffffffff
  402857:	ff ff 01 
  40285a:	48 39 45 f0          	cmp    QWORD PTR [rbp-0x10],rax
  40285e:	77 0a                	ja     40286a <_ZNKSt6vectorIbSaIbEE8max_sizeEv+0x4c>
  402860:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
  402864:	48 c1 e0 06          	shl    rax,0x6
  402868:	eb 0a                	jmp    402874 <_ZNKSt6vectorIbSaIbEE8max_sizeEv+0x56>
  40286a:	48 b8 c0 ff ff ff ff 	movabs rax,0x7fffffffffffffc0
  402871:	ff ff 7f 
  402874:	c9                   	leave  
  402875:	c3                   	ret    

0000000000402876 <_ZSt4copyIPmS0_ET0_T_S2_S1_>:
  402876:	55                   	push   rbp
  402877:	48 89 e5             	mov    rbp,rsp
  40287a:	53                   	push   rbx
  40287b:	48 83 ec 28          	sub    rsp,0x28
  40287f:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
  402883:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
  402887:	48 89 55 d8          	mov    QWORD PTR [rbp-0x28],rdx
  40288b:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
  40288f:	48 89 c7             	mov    rdi,rax
  402892:	e8 ef 02 00 00       	call   402b86 <_ZSt12__miter_baseIPmET_S1_>
  402897:	48 89 c3             	mov    rbx,rax
  40289a:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  40289e:	48 89 c7             	mov    rdi,rax
  4028a1:	e8 e0 02 00 00       	call   402b86 <_ZSt12__miter_baseIPmET_S1_>
  4028a6:	48 89 c1             	mov    rcx,rax
  4028a9:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
  4028ad:	48 89 c2             	mov    rdx,rax
  4028b0:	48 89 de             	mov    rsi,rbx
  4028b3:	48 89 cf             	mov    rdi,rcx
  4028b6:	e8 d9 02 00 00       	call   402b94 <_ZSt14__copy_move_a2ILb0EPmS0_ET1_T0_S2_S1_>
  4028bb:	48 83 c4 28          	add    rsp,0x28
  4028bf:	5b                   	pop    rbx
  4028c0:	5d                   	pop    rbp
  4028c1:	c3                   	ret    

00000000004028c2 <_ZSt4copyISt19_Bit_const_iteratorSt13_Bit_iteratorET0_T_S3_S2_>:
  4028c2:	55                   	push   rbp
  4028c3:	48 89 e5             	mov    rbp,rsp
  4028c6:	48 83 ec 70          	sub    rsp,0x70
  4028ca:	48 89 c8             	mov    rax,rcx
  4028cd:	4c 89 c9             	mov    rcx,r9
  4028d0:	48 89 7d c0          	mov    QWORD PTR [rbp-0x40],rdi
  4028d4:	48 89 75 c8          	mov    QWORD PTR [rbp-0x38],rsi
  4028d8:	48 89 55 b0          	mov    QWORD PTR [rbp-0x50],rdx
  4028dc:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
  4028e0:	4c 89 45 a0          	mov    QWORD PTR [rbp-0x60],r8
  4028e4:	48 89 4d a8          	mov    QWORD PTR [rbp-0x58],rcx
  4028e8:	48 8b 55 b0          	mov    rdx,QWORD PTR [rbp-0x50]
  4028ec:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
  4028f0:	48 89 d7             	mov    rdi,rdx
  4028f3:	48 89 c6             	mov    rsi,rax
  4028f6:	e8 f1 02 00 00       	call   402bec <_ZSt12__miter_baseISt19_Bit_const_iteratorET_S1_>
  4028fb:	48 89 c1             	mov    rcx,rax
  4028fe:	48 89 d0             	mov    rax,rdx
  402901:	48 89 4d e0          	mov    QWORD PTR [rbp-0x20],rcx
  402905:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
  402909:	48 8b 55 c0          	mov    rdx,QWORD PTR [rbp-0x40]
  40290d:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
  402911:	48 89 d7             	mov    rdi,rdx
  402914:	48 89 c6             	mov    rsi,rax
  402917:	e8 d0 02 00 00       	call   402bec <_ZSt12__miter_baseISt19_Bit_const_iteratorET_S1_>
  40291c:	48 89 c1             	mov    rcx,rax
  40291f:	48 89 d0             	mov    rax,rdx
  402922:	48 89 4d f0          	mov    QWORD PTR [rbp-0x10],rcx
  402926:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
  40292a:	4c 8b 45 a0          	mov    r8,QWORD PTR [rbp-0x60]
  40292e:	48 8b 7d a8          	mov    rdi,QWORD PTR [rbp-0x58]
  402932:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
  402936:	48 8b 4d e8          	mov    rcx,QWORD PTR [rbp-0x18]
  40293a:	48 8b 75 f0          	mov    rsi,QWORD PTR [rbp-0x10]
  40293e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  402942:	49 89 f9             	mov    r9,rdi
  402945:	48 89 f7             	mov    rdi,rsi
  402948:	48 89 c6             	mov    rsi,rax
  40294b:	e8 d1 02 00 00       	call   402c21 <_ZSt14__copy_move_a2ILb0ESt19_Bit_const_iteratorSt13_Bit_iteratorET1_T0_S3_S2_>
  402950:	48 89 c1             	mov    rcx,rax
  402953:	48 89 d0             	mov    rax,rdx
  402956:	48 89 4d d0          	mov    QWORD PTR [rbp-0x30],rcx
  40295a:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
  40295e:	48 8b 55 d0          	mov    rdx,QWORD PTR [rbp-0x30]
  402962:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
  402966:	48 89 d1             	mov    rcx,rdx
  402969:	48 89 c2             	mov    rdx,rax
  40296c:	48 89 c8             	mov    rax,rcx
  40296f:	c9                   	leave  
  402970:	c3                   	ret    

0000000000402971 <_ZSt14__copy_move_a2ILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_>:
  402971:	55                   	push   rbp
  402972:	48 89 e5             	mov    rbp,rsp
  402975:	48 83 c4 80          	add    rsp,0xffffffffffffff80
  402979:	48 89 c8             	mov    rax,rcx
  40297c:	4c 89 c9             	mov    rcx,r9
  40297f:	48 89 7d b0          	mov    QWORD PTR [rbp-0x50],rdi
  402983:	48 89 75 b8          	mov    QWORD PTR [rbp-0x48],rsi
  402987:	48 89 55 a0          	mov    QWORD PTR [rbp-0x60],rdx
  40298b:	48 89 45 a8          	mov    QWORD PTR [rbp-0x58],rax
  40298f:	4c 89 45 90          	mov    QWORD PTR [rbp-0x70],r8
  402993:	48 89 4d 98          	mov    QWORD PTR [rbp-0x68],rcx
  402997:	48 8b 55 90          	mov    rdx,QWORD PTR [rbp-0x70]
  40299b:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
  40299f:	48 89 d7             	mov    rdi,rdx
  4029a2:	48 89 c6             	mov    rsi,rax
  4029a5:	e8 0e 01 00 00       	call   402ab8 <_ZSt12__niter_baseISt13_Bit_iteratorET_S1_>
  4029aa:	48 89 c1             	mov    rcx,rax
  4029ad:	48 89 d0             	mov    rax,rdx
  4029b0:	48 89 4d d0          	mov    QWORD PTR [rbp-0x30],rcx
  4029b4:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
  4029b8:	48 8b 55 a0          	mov    rdx,QWORD PTR [rbp-0x60]
  4029bc:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
  4029c0:	48 89 d7             	mov    rdi,rdx
  4029c3:	48 89 c6             	mov    rsi,rax
  4029c6:	e8 ed 00 00 00       	call   402ab8 <_ZSt12__niter_baseISt13_Bit_iteratorET_S1_>
  4029cb:	48 89 c1             	mov    rcx,rax
  4029ce:	48 89 d0             	mov    rax,rdx
  4029d1:	48 89 4d e0          	mov    QWORD PTR [rbp-0x20],rcx
  4029d5:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
  4029d9:	48 8b 55 b0          	mov    rdx,QWORD PTR [rbp-0x50]
  4029dd:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
  4029e1:	48 89 d7             	mov    rdi,rdx
  4029e4:	48 89 c6             	mov    rsi,rax
  4029e7:	e8 cc 00 00 00       	call   402ab8 <_ZSt12__niter_baseISt13_Bit_iteratorET_S1_>
  4029ec:	48 89 c1             	mov    rcx,rax
  4029ef:	48 89 d0             	mov    rax,rdx
  4029f2:	48 89 4d f0          	mov    QWORD PTR [rbp-0x10],rcx
  4029f6:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
  4029fa:	4c 8b 45 d0          	mov    r8,QWORD PTR [rbp-0x30]
  4029fe:	48 8b 7d d8          	mov    rdi,QWORD PTR [rbp-0x28]
  402a02:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
  402a06:	48 8b 4d e8          	mov    rcx,QWORD PTR [rbp-0x18]
  402a0a:	48 8b 75 f0          	mov    rsi,QWORD PTR [rbp-0x10]
  402a0e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  402a12:	49 89 f9             	mov    r9,rdi
  402a15:	48 89 f7             	mov    rdi,rsi
  402a18:	48 89 c6             	mov    rsi,rax
  402a1b:	e8 d1 02 00 00       	call   402cf1 <_ZSt13__copy_move_aILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_>
  402a20:	48 89 c1             	mov    rcx,rax
  402a23:	48 89 d0             	mov    rax,rdx
  402a26:	48 89 4d c0          	mov    QWORD PTR [rbp-0x40],rcx
  402a2a:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
  402a2e:	48 8b 55 c0          	mov    rdx,QWORD PTR [rbp-0x40]
  402a32:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
  402a36:	48 89 d1             	mov    rcx,rdx
  402a39:	48 89 c2             	mov    rdx,rax
  402a3c:	48 89 c8             	mov    rax,rcx
  402a3f:	c9                   	leave  
  402a40:	c3                   	ret    
  402a41:	90                   	nop

0000000000402a42 <_ZN9__gnu_cxx13new_allocatorImEC1ERKS1_>:
  402a42:	55                   	push   rbp
  402a43:	48 89 e5             	mov    rbp,rsp
  402a46:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
  402a4a:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
  402a4e:	90                   	nop
  402a4f:	5d                   	pop    rbp
  402a50:	c3                   	ret    
  402a51:	90                   	nop

0000000000402a52 <_ZN9__gnu_cxx13new_allocatorImE10deallocateEPmm>:
  402a52:	55                   	push   rbp
  402a53:	48 89 e5             	mov    rbp,rsp
  402a56:	48 83 ec 20          	sub    rsp,0x20
  402a5a:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
  402a5e:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
  402a62:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
  402a66:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
  402a6a:	48 89 c7             	mov    rdi,rax
  402a6d:	e8 ee e0 ff ff       	call   400b60 <_ZdlPv@plt>
  402a72:	90                   	nop
  402a73:	c9                   	leave  
  402a74:	c3                   	ret    
  402a75:	90                   	nop

0000000000402a76 <_ZN9__gnu_cxx13new_allocatorImE8allocateEmPKv>:
  402a76:	55                   	push   rbp
  402a77:	48 89 e5             	mov    rbp,rsp
  402a7a:	48 83 ec 20          	sub    rsp,0x20
  402a7e:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
  402a82:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
  402a86:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
  402a8a:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  402a8e:	48 89 c7             	mov    rdi,rax
  402a91:	e8 cc 02 00 00       	call   402d62 <_ZNK9__gnu_cxx13new_allocatorImE8max_sizeEv>
  402a96:	48 3b 45 f0          	cmp    rax,QWORD PTR [rbp-0x10]
  402a9a:	0f 92 c0             	setb   al
  402a9d:	84 c0                	test   al,al
  402a9f:	74 05                	je     402aa6 <_ZN9__gnu_cxx13new_allocatorImE8allocateEmPKv+0x30>
  402aa1:	e8 6a e1 ff ff       	call   400c10 <_ZSt17__throw_bad_allocv@plt>
  402aa6:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
  402aaa:	48 c1 e0 03          	shl    rax,0x3
  402aae:	48 89 c7             	mov    rdi,rax
  402ab1:	e8 9a e1 ff ff       	call   400c50 <_Znwm@plt>
  402ab6:	c9                   	leave  
  402ab7:	c3                   	ret    

0000000000402ab8 <_ZSt12__niter_baseISt13_Bit_iteratorET_S1_>:
  402ab8:	55                   	push   rbp
  402ab9:	48 89 e5             	mov    rbp,rsp
  402abc:	48 89 fa             	mov    rdx,rdi
  402abf:	48 89 f0             	mov    rax,rsi
  402ac2:	48 89 55 e0          	mov    QWORD PTR [rbp-0x20],rdx
  402ac6:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
  402aca:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
  402ace:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
  402ad2:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  402ad6:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
  402ada:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
  402ade:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  402ae2:	48 89 d1             	mov    rcx,rdx
  402ae5:	48 89 c2             	mov    rdx,rax
  402ae8:	48 89 c8             	mov    rax,rcx
  402aeb:	5d                   	pop    rbp
  402aec:	c3                   	ret    

0000000000402aed <_ZSt22__copy_move_backward_aILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_>:
  402aed:	55                   	push   rbp
  402aee:	48 89 e5             	mov    rbp,rsp
  402af1:	48 83 ec 60          	sub    rsp,0x60
  402af5:	48 89 c8             	mov    rax,rcx
  402af8:	4c 89 c9             	mov    rcx,r9
  402afb:	48 89 7d d0          	mov    QWORD PTR [rbp-0x30],rdi
  402aff:	48 89 75 d8          	mov    QWORD PTR [rbp-0x28],rsi
  402b03:	48 89 55 c0          	mov    QWORD PTR [rbp-0x40],rdx
  402b07:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
  402b0b:	4c 89 45 b0          	mov    QWORD PTR [rbp-0x50],r8
  402b0f:	48 89 4d b8          	mov    QWORD PTR [rbp-0x48],rcx
  402b13:	c6 45 ff 00          	mov    BYTE PTR [rbp-0x1],0x0
  402b17:	4c 8b 45 b0          	mov    r8,QWORD PTR [rbp-0x50]
  402b1b:	48 8b 7d b8          	mov    rdi,QWORD PTR [rbp-0x48]
  402b1f:	48 8b 55 c0          	mov    rdx,QWORD PTR [rbp-0x40]
  402b23:	48 8b 4d c8          	mov    rcx,QWORD PTR [rbp-0x38]
  402b27:	48 8b 75 d0          	mov    rsi,QWORD PTR [rbp-0x30]
  402b2b:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
  402b2f:	49 89 f9             	mov    r9,rdi
  402b32:	48 89 f7             	mov    rdi,rsi
  402b35:	48 89 c6             	mov    rsi,rax
  402b38:	e8 39 02 00 00       	call   402d76 <_ZNSt20__copy_move_backwardILb0ELb0ESt26random_access_iterator_tagE13__copy_move_bISt13_Bit_iteratorS3_EET0_T_S5_S4_>
  402b3d:	48 89 c1             	mov    rcx,rax
  402b40:	48 89 d0             	mov    rax,rdx
  402b43:	48 89 4d e0          	mov    QWORD PTR [rbp-0x20],rcx
  402b47:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
  402b4b:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
  402b4f:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  402b53:	48 89 d1             	mov    rcx,rdx
  402b56:	48 89 c2             	mov    rdx,rax
  402b59:	48 89 c8             	mov    rax,rcx
  402b5c:	c9                   	leave  
  402b5d:	c3                   	ret    

0000000000402b5e <_ZNSt16allocator_traitsISaImEE8max_sizeERKS0_>:
  402b5e:	55                   	push   rbp
  402b5f:	48 89 e5             	mov    rbp,rsp
  402b62:	48 83 ec 10          	sub    rsp,0x10
  402b66:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
  402b6a:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  402b6e:	48 89 c7             	mov    rdi,rax
  402b71:	e8 ec 01 00 00       	call   402d62 <_ZNK9__gnu_cxx13new_allocatorImE8max_sizeEv>
  402b76:	c9                   	leave  
  402b77:	c3                   	ret    

0000000000402b78 <_ZNKSt13_Bvector_baseISaIbEE20_M_get_Bit_allocatorEv>:
  402b78:	55                   	push   rbp
  402b79:	48 89 e5             	mov    rbp,rsp
  402b7c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
  402b80:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  402b84:	5d                   	pop    rbp
  402b85:	c3                   	ret    

0000000000402b86 <_ZSt12__miter_baseIPmET_S1_>:
  402b86:	55                   	push   rbp
  402b87:	48 89 e5             	mov    rbp,rsp
  402b8a:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
  402b8e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  402b92:	5d                   	pop    rbp
  402b93:	c3                   	ret    

0000000000402b94 <_ZSt14__copy_move_a2ILb0EPmS0_ET1_T0_S2_S1_>:
  402b94:	55                   	push   rbp
  402b95:	48 89 e5             	mov    rbp,rsp
  402b98:	41 54                	push   r12
  402b9a:	53                   	push   rbx
  402b9b:	48 83 ec 20          	sub    rsp,0x20
  402b9f:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
  402ba3:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
  402ba7:	48 89 55 d8          	mov    QWORD PTR [rbp-0x28],rdx
  402bab:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
  402baf:	48 89 c7             	mov    rdi,rax
  402bb2:	e8 0c f0 ff ff       	call   401bc3 <_ZSt12__niter_baseIPmET_S1_>
  402bb7:	49 89 c4             	mov    r12,rax
  402bba:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
  402bbe:	48 89 c7             	mov    rdi,rax
  402bc1:	e8 fd ef ff ff       	call   401bc3 <_ZSt12__niter_baseIPmET_S1_>
  402bc6:	48 89 c3             	mov    rbx,rax
  402bc9:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  402bcd:	48 89 c7             	mov    rdi,rax
  402bd0:	e8 ee ef ff ff       	call   401bc3 <_ZSt12__niter_baseIPmET_S1_>
  402bd5:	4c 89 e2             	mov    rdx,r12
  402bd8:	48 89 de             	mov    rsi,rbx
  402bdb:	48 89 c7             	mov    rdi,rax
  402bde:	e8 4c 02 00 00       	call   402e2f <_ZSt13__copy_move_aILb0EPmS0_ET1_T0_S2_S1_>
  402be3:	48 83 c4 20          	add    rsp,0x20
  402be7:	5b                   	pop    rbx
  402be8:	41 5c                	pop    r12
  402bea:	5d                   	pop    rbp
  402beb:	c3                   	ret    

0000000000402bec <_ZSt12__miter_baseISt19_Bit_const_iteratorET_S1_>:
  402bec:	55                   	push   rbp
  402bed:	48 89 e5             	mov    rbp,rsp
  402bf0:	48 89 fa             	mov    rdx,rdi
  402bf3:	48 89 f0             	mov    rax,rsi
  402bf6:	48 89 55 e0          	mov    QWORD PTR [rbp-0x20],rdx
  402bfa:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
  402bfe:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
  402c02:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
  402c06:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  402c0a:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
  402c0e:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
  402c12:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  402c16:	48 89 d1             	mov    rcx,rdx
  402c19:	48 89 c2             	mov    rdx,rax
  402c1c:	48 89 c8             	mov    rax,rcx
  402c1f:	5d                   	pop    rbp
  402c20:	c3                   	ret    

0000000000402c21 <_ZSt14__copy_move_a2ILb0ESt19_Bit_const_iteratorSt13_Bit_iteratorET1_T0_S3_S2_>:
  402c21:	55                   	push   rbp
  402c22:	48 89 e5             	mov    rbp,rsp
  402c25:	48 83 c4 80          	add    rsp,0xffffffffffffff80
  402c29:	48 89 c8             	mov    rax,rcx
  402c2c:	4c 89 c9             	mov    rcx,r9
  402c2f:	48 89 7d b0          	mov    QWORD PTR [rbp-0x50],rdi
  402c33:	48 89 75 b8          	mov    QWORD PTR [rbp-0x48],rsi
  402c37:	48 89 55 a0          	mov    QWORD PTR [rbp-0x60],rdx
  402c3b:	48 89 45 a8          	mov    QWORD PTR [rbp-0x58],rax
  402c3f:	4c 89 45 90          	mov    QWORD PTR [rbp-0x70],r8
  402c43:	48 89 4d 98          	mov    QWORD PTR [rbp-0x68],rcx
  402c47:	48 8b 55 90          	mov    rdx,QWORD PTR [rbp-0x70]
  402c4b:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
  402c4f:	48 89 d7             	mov    rdi,rdx
  402c52:	48 89 c6             	mov    rsi,rax
  402c55:	e8 5e fe ff ff       	call   402ab8 <_ZSt12__niter_baseISt13_Bit_iteratorET_S1_>
  402c5a:	48 89 c1             	mov    rcx,rax
  402c5d:	48 89 d0             	mov    rax,rdx
  402c60:	48 89 4d d0          	mov    QWORD PTR [rbp-0x30],rcx
  402c64:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
  402c68:	48 8b 55 a0          	mov    rdx,QWORD PTR [rbp-0x60]
  402c6c:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
  402c70:	48 89 d7             	mov    rdi,rdx
  402c73:	48 89 c6             	mov    rsi,rax
  402c76:	e8 e5 01 00 00       	call   402e60 <_ZSt12__niter_baseISt19_Bit_const_iteratorET_S1_>
  402c7b:	48 89 c1             	mov    rcx,rax
  402c7e:	48 89 d0             	mov    rax,rdx
  402c81:	48 89 4d e0          	mov    QWORD PTR [rbp-0x20],rcx
  402c85:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
  402c89:	48 8b 55 b0          	mov    rdx,QWORD PTR [rbp-0x50]
  402c8d:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
  402c91:	48 89 d7             	mov    rdi,rdx
  402c94:	48 89 c6             	mov    rsi,rax
  402c97:	e8 c4 01 00 00       	call   402e60 <_ZSt12__niter_baseISt19_Bit_const_iteratorET_S1_>
  402c9c:	48 89 c1             	mov    rcx,rax
  402c9f:	48 89 d0             	mov    rax,rdx
  402ca2:	48 89 4d f0          	mov    QWORD PTR [rbp-0x10],rcx
  402ca6:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
  402caa:	4c 8b 45 d0          	mov    r8,QWORD PTR [rbp-0x30]
  402cae:	48 8b 7d d8          	mov    rdi,QWORD PTR [rbp-0x28]
  402cb2:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
  402cb6:	48 8b 4d e8          	mov    rcx,QWORD PTR [rbp-0x18]
  402cba:	48 8b 75 f0          	mov    rsi,QWORD PTR [rbp-0x10]
  402cbe:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  402cc2:	49 89 f9             	mov    r9,rdi
  402cc5:	48 89 f7             	mov    rdi,rsi
  402cc8:	48 89 c6             	mov    rsi,rax
  402ccb:	e8 c5 01 00 00       	call   402e95 <_ZSt13__copy_move_aILb0ESt19_Bit_const_iteratorSt13_Bit_iteratorET1_T0_S3_S2_>
  402cd0:	48 89 c1             	mov    rcx,rax
  402cd3:	48 89 d0             	mov    rax,rdx
  402cd6:	48 89 4d c0          	mov    QWORD PTR [rbp-0x40],rcx
  402cda:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
  402cde:	48 8b 55 c0          	mov    rdx,QWORD PTR [rbp-0x40]
  402ce2:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
  402ce6:	48 89 d1             	mov    rcx,rdx
  402ce9:	48 89 c2             	mov    rdx,rax
  402cec:	48 89 c8             	mov    rax,rcx
  402cef:	c9                   	leave  
  402cf0:	c3                   	ret    

0000000000402cf1 <_ZSt13__copy_move_aILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_>:
  402cf1:	55                   	push   rbp
  402cf2:	48 89 e5             	mov    rbp,rsp
  402cf5:	48 83 ec 60          	sub    rsp,0x60
  402cf9:	48 89 c8             	mov    rax,rcx
  402cfc:	4c 89 c9             	mov    rcx,r9
  402cff:	48 89 7d d0          	mov    QWORD PTR [rbp-0x30],rdi
  402d03:	48 89 75 d8          	mov    QWORD PTR [rbp-0x28],rsi
  402d07:	48 89 55 c0          	mov    QWORD PTR [rbp-0x40],rdx
  402d0b:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
  402d0f:	4c 89 45 b0          	mov    QWORD PTR [rbp-0x50],r8
  402d13:	48 89 4d b8          	mov    QWORD PTR [rbp-0x48],rcx
  402d17:	c6 45 ff 00          	mov    BYTE PTR [rbp-0x1],0x0
  402d1b:	4c 8b 45 b0          	mov    r8,QWORD PTR [rbp-0x50]
  402d1f:	48 8b 7d b8          	mov    rdi,QWORD PTR [rbp-0x48]
  402d23:	48 8b 55 c0          	mov    rdx,QWORD PTR [rbp-0x40]
  402d27:	48 8b 4d c8          	mov    rcx,QWORD PTR [rbp-0x38]
  402d2b:	48 8b 75 d0          	mov    rsi,QWORD PTR [rbp-0x30]
  402d2f:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
  402d33:	49 89 f9             	mov    r9,rdi
  402d36:	48 89 f7             	mov    rdi,rsi
  402d39:	48 89 c6             	mov    rsi,rax
  402d3c:	e8 c5 01 00 00       	call   402f06 <_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mISt13_Bit_iteratorS3_EET0_T_S5_S4_>
  402d41:	48 89 c1             	mov    rcx,rax
  402d44:	48 89 d0             	mov    rax,rdx
  402d47:	48 89 4d e0          	mov    QWORD PTR [rbp-0x20],rcx
  402d4b:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
  402d4f:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
  402d53:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  402d57:	48 89 d1             	mov    rcx,rdx
  402d5a:	48 89 c2             	mov    rdx,rax
  402d5d:	48 89 c8             	mov    rax,rcx
  402d60:	c9                   	leave  
  402d61:	c3                   	ret    

0000000000402d62 <_ZNK9__gnu_cxx13new_allocatorImE8max_sizeEv>:
  402d62:	55                   	push   rbp
  402d63:	48 89 e5             	mov    rbp,rsp
  402d66:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
  402d6a:	48 b8 ff ff ff ff ff 	movabs rax,0x1fffffffffffffff
  402d71:	ff ff 1f 
  402d74:	5d                   	pop    rbp
  402d75:	c3                   	ret    

0000000000402d76 <_ZNSt20__copy_move_backwardILb0ELb0ESt26random_access_iterator_tagE13__copy_move_bISt13_Bit_iteratorS3_EET0_T_S5_S4_>:
  402d76:	55                   	push   rbp
  402d77:	48 89 e5             	mov    rbp,rsp
  402d7a:	48 83 c4 80          	add    rsp,0xffffffffffffff80
  402d7e:	48 89 c8             	mov    rax,rcx
  402d81:	4c 89 c9             	mov    rcx,r9
  402d84:	48 89 7d b0          	mov    QWORD PTR [rbp-0x50],rdi
  402d88:	48 89 75 b8          	mov    QWORD PTR [rbp-0x48],rsi
  402d8c:	48 89 55 a0          	mov    QWORD PTR [rbp-0x60],rdx
  402d90:	48 89 45 a8          	mov    QWORD PTR [rbp-0x58],rax
  402d94:	4c 89 45 90          	mov    QWORD PTR [rbp-0x70],r8
  402d98:	48 89 4d 98          	mov    QWORD PTR [rbp-0x68],rcx
  402d9c:	48 8d 55 b0          	lea    rdx,[rbp-0x50]
  402da0:	48 8d 45 a0          	lea    rax,[rbp-0x60]
  402da4:	48 89 d6             	mov    rsi,rdx
  402da7:	48 89 c7             	mov    rdi,rax
  402daa:	e8 88 e8 ff ff       	call   401637 <_ZStmiRKSt18_Bit_iterator_baseS1_>
  402daf:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
  402db3:	48 83 7d f8 00       	cmp    QWORD PTR [rbp-0x8],0x0
  402db8:	7e 52                	jle    402e0c <_ZNSt20__copy_move_backwardILb0ELb0ESt26random_access_iterator_tagE13__copy_move_bISt13_Bit_iteratorS3_EET0_T_S5_S4_+0x96>
  402dba:	48 8d 45 a0          	lea    rax,[rbp-0x60]
  402dbe:	48 89 c7             	mov    rdi,rax
  402dc1:	e8 bc e9 ff ff       	call   401782 <_ZNSt13_Bit_iteratormmEv>
  402dc6:	48 89 c7             	mov    rdi,rax
  402dc9:	e8 06 e9 ff ff       	call   4016d4 <_ZNKSt13_Bit_iteratordeEv>
  402dce:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
  402dd2:	48 89 55 c8          	mov    QWORD PTR [rbp-0x38],rdx
  402dd6:	48 8d 45 90          	lea    rax,[rbp-0x70]
  402dda:	48 89 c7             	mov    rdi,rax
  402ddd:	e8 a0 e9 ff ff       	call   401782 <_ZNSt13_Bit_iteratormmEv>
  402de2:	48 89 c7             	mov    rdi,rax
  402de5:	e8 ea e8 ff ff       	call   4016d4 <_ZNKSt13_Bit_iteratordeEv>
  402dea:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
  402dee:	48 89 55 d8          	mov    QWORD PTR [rbp-0x28],rdx
  402df2:	48 8d 55 c0          	lea    rdx,[rbp-0x40]
  402df6:	48 8d 45 d0          	lea    rax,[rbp-0x30]
  402dfa:	48 89 d6             	mov    rsi,rdx
  402dfd:	48 89 c7             	mov    rdi,rax
  402e00:	e8 ab e6 ff ff       	call   4014b0 <_ZNSt14_Bit_referenceaSERKS_>
  402e05:	48 83 6d f8 01       	sub    QWORD PTR [rbp-0x8],0x1
  402e0a:	eb a7                	jmp    402db3 <_ZNSt20__copy_move_backwardILb0ELb0ESt26random_access_iterator_tagE13__copy_move_bISt13_Bit_iteratorS3_EET0_T_S5_S4_+0x3d>
  402e0c:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
  402e10:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
  402e14:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
  402e18:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
  402e1c:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
  402e20:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  402e24:	48 89 d1             	mov    rcx,rdx
  402e27:	48 89 c2             	mov    rdx,rax
  402e2a:	48 89 c8             	mov    rax,rcx
  402e2d:	c9                   	leave  
  402e2e:	c3                   	ret    

0000000000402e2f <_ZSt13__copy_move_aILb0EPmS0_ET1_T0_S2_S1_>:
  402e2f:	55                   	push   rbp
  402e30:	48 89 e5             	mov    rbp,rsp
  402e33:	48 83 ec 30          	sub    rsp,0x30
  402e37:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
  402e3b:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
  402e3f:	48 89 55 d8          	mov    QWORD PTR [rbp-0x28],rdx
  402e43:	c6 45 ff 01          	mov    BYTE PTR [rbp-0x1],0x1
  402e47:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
  402e4b:	48 8b 4d e0          	mov    rcx,QWORD PTR [rbp-0x20]
  402e4f:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  402e53:	48 89 ce             	mov    rsi,rcx
  402e56:	48 89 c7             	mov    rdi,rax
  402e59:	e8 69 01 00 00       	call   402fc7 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mImEEPT_PKS3_S6_S4_>
  402e5e:	c9                   	leave  
  402e5f:	c3                   	ret    

0000000000402e60 <_ZSt12__niter_baseISt19_Bit_const_iteratorET_S1_>:
  402e60:	55                   	push   rbp
  402e61:	48 89 e5             	mov    rbp,rsp
  402e64:	48 89 fa             	mov    rdx,rdi
  402e67:	48 89 f0             	mov    rax,rsi
  402e6a:	48 89 55 e0          	mov    QWORD PTR [rbp-0x20],rdx
  402e6e:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
  402e72:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
  402e76:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
  402e7a:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  402e7e:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
  402e82:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
  402e86:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  402e8a:	48 89 d1             	mov    rcx,rdx
  402e8d:	48 89 c2             	mov    rdx,rax
  402e90:	48 89 c8             	mov    rax,rcx
  402e93:	5d                   	pop    rbp
  402e94:	c3                   	ret    

0000000000402e95 <_ZSt13__copy_move_aILb0ESt19_Bit_const_iteratorSt13_Bit_iteratorET1_T0_S3_S2_>:
  402e95:	55                   	push   rbp
  402e96:	48 89 e5             	mov    rbp,rsp
  402e99:	48 83 ec 60          	sub    rsp,0x60
  402e9d:	48 89 c8             	mov    rax,rcx
  402ea0:	4c 89 c9             	mov    rcx,r9
  402ea3:	48 89 7d d0          	mov    QWORD PTR [rbp-0x30],rdi
  402ea7:	48 89 75 d8          	mov    QWORD PTR [rbp-0x28],rsi
  402eab:	48 89 55 c0          	mov    QWORD PTR [rbp-0x40],rdx
  402eaf:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
  402eb3:	4c 89 45 b0          	mov    QWORD PTR [rbp-0x50],r8
  402eb7:	48 89 4d b8          	mov    QWORD PTR [rbp-0x48],rcx
  402ebb:	c6 45 ff 00          	mov    BYTE PTR [rbp-0x1],0x0
  402ebf:	4c 8b 45 b0          	mov    r8,QWORD PTR [rbp-0x50]
  402ec3:	48 8b 7d b8          	mov    rdi,QWORD PTR [rbp-0x48]
  402ec7:	48 8b 55 c0          	mov    rdx,QWORD PTR [rbp-0x40]
  402ecb:	48 8b 4d c8          	mov    rcx,QWORD PTR [rbp-0x38]
  402ecf:	48 8b 75 d0          	mov    rsi,QWORD PTR [rbp-0x30]
  402ed3:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
  402ed7:	49 89 f9             	mov    r9,rdi
  402eda:	48 89 f7             	mov    rdi,rsi
  402edd:	48 89 c6             	mov    rsi,rax
  402ee0:	e8 47 01 00 00       	call   40302c <_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mISt19_Bit_const_iteratorSt13_Bit_iteratorEET0_T_S6_S5_>
  402ee5:	48 89 c1             	mov    rcx,rax
  402ee8:	48 89 d0             	mov    rax,rdx
  402eeb:	48 89 4d e0          	mov    QWORD PTR [rbp-0x20],rcx
  402eef:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
  402ef3:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
  402ef7:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  402efb:	48 89 d1             	mov    rcx,rdx
  402efe:	48 89 c2             	mov    rdx,rax
  402f01:	48 89 c8             	mov    rax,rcx
  402f04:	c9                   	leave  
  402f05:	c3                   	ret    

0000000000402f06 <_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mISt13_Bit_iteratorS3_EET0_T_S5_S4_>:
  402f06:	55                   	push   rbp
  402f07:	48 89 e5             	mov    rbp,rsp
  402f0a:	48 83 c4 80          	add    rsp,0xffffffffffffff80
  402f0e:	48 89 c8             	mov    rax,rcx
  402f11:	4c 89 c9             	mov    rcx,r9
  402f14:	48 89 7d b0          	mov    QWORD PTR [rbp-0x50],rdi
  402f18:	48 89 75 b8          	mov    QWORD PTR [rbp-0x48],rsi
  402f1c:	48 89 55 a0          	mov    QWORD PTR [rbp-0x60],rdx
  402f20:	48 89 45 a8          	mov    QWORD PTR [rbp-0x58],rax
  402f24:	4c 89 45 90          	mov    QWORD PTR [rbp-0x70],r8
  402f28:	48 89 4d 98          	mov    QWORD PTR [rbp-0x68],rcx
  402f2c:	48 8d 55 b0          	lea    rdx,[rbp-0x50]
  402f30:	48 8d 45 a0          	lea    rax,[rbp-0x60]
  402f34:	48 89 d6             	mov    rsi,rdx
  402f37:	48 89 c7             	mov    rdi,rax
  402f3a:	e8 f8 e6 ff ff       	call   401637 <_ZStmiRKSt18_Bit_iterator_baseS1_>
  402f3f:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
  402f43:	48 83 7d f8 00       	cmp    QWORD PTR [rbp-0x8],0x0
  402f48:	7e 5a                	jle    402fa4 <_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mISt13_Bit_iteratorS3_EET0_T_S5_S4_+0x9e>
  402f4a:	48 8d 45 b0          	lea    rax,[rbp-0x50]
  402f4e:	48 89 c7             	mov    rdi,rax
  402f51:	e8 7e e7 ff ff       	call   4016d4 <_ZNKSt13_Bit_iteratordeEv>
  402f56:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
  402f5a:	48 89 55 c8          	mov    QWORD PTR [rbp-0x38],rdx
  402f5e:	48 8d 45 90          	lea    rax,[rbp-0x70]
  402f62:	48 89 c7             	mov    rdi,rax
  402f65:	e8 6a e7 ff ff       	call   4016d4 <_ZNKSt13_Bit_iteratordeEv>
  402f6a:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
  402f6e:	48 89 55 d8          	mov    QWORD PTR [rbp-0x28],rdx
  402f72:	48 8d 55 c0          	lea    rdx,[rbp-0x40]
  402f76:	48 8d 45 d0          	lea    rax,[rbp-0x30]
  402f7a:	48 89 d6             	mov    rsi,rdx
  402f7d:	48 89 c7             	mov    rdi,rax
  402f80:	e8 2b e5 ff ff       	call   4014b0 <_ZNSt14_Bit_referenceaSERKS_>
  402f85:	48 8d 45 b0          	lea    rax,[rbp-0x50]
  402f89:	48 89 c7             	mov    rdi,rax
  402f8c:	e8 81 e7 ff ff       	call   401712 <_ZNSt13_Bit_iteratorppEv>
  402f91:	48 8d 45 90          	lea    rax,[rbp-0x70]
  402f95:	48 89 c7             	mov    rdi,rax
  402f98:	e8 75 e7 ff ff       	call   401712 <_ZNSt13_Bit_iteratorppEv>
  402f9d:	48 83 6d f8 01       	sub    QWORD PTR [rbp-0x8],0x1
  402fa2:	eb 9f                	jmp    402f43 <_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mISt13_Bit_iteratorS3_EET0_T_S5_S4_+0x3d>
  402fa4:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
  402fa8:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
  402fac:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
  402fb0:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
  402fb4:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
  402fb8:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  402fbc:	48 89 d1             	mov    rcx,rdx
  402fbf:	48 89 c2             	mov    rdx,rax
  402fc2:	48 89 c8             	mov    rax,rcx
  402fc5:	c9                   	leave  
  402fc6:	c3                   	ret    

0000000000402fc7 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mImEEPT_PKS3_S6_S4_>:
  402fc7:	55                   	push   rbp
  402fc8:	48 89 e5             	mov    rbp,rsp
  402fcb:	48 83 ec 30          	sub    rsp,0x30
  402fcf:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
  402fd3:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
  402fd7:	48 89 55 d8          	mov    QWORD PTR [rbp-0x28],rdx
  402fdb:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
  402fdf:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  402fe3:	48 29 c2             	sub    rdx,rax
  402fe6:	48 89 d0             	mov    rax,rdx
  402fe9:	48 c1 f8 03          	sar    rax,0x3
  402fed:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
  402ff1:	48 83 7d f8 00       	cmp    QWORD PTR [rbp-0x8],0x0
  402ff6:	74 1f                	je     403017 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mImEEPT_PKS3_S6_S4_+0x50>
  402ff8:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  402ffc:	48 8d 14 c5 00 00 00 	lea    rdx,[rax*8+0x0]
  403003:	00 
  403004:	48 8b 4d e8          	mov    rcx,QWORD PTR [rbp-0x18]
  403008:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
  40300c:	48 89 ce             	mov    rsi,rcx
  40300f:	48 89 c7             	mov    rdi,rax
  403012:	e8 b9 db ff ff       	call   400bd0 <memmove@plt>
  403017:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  40301b:	48 8d 14 c5 00 00 00 	lea    rdx,[rax*8+0x0]
  403022:	00 
  403023:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
  403027:	48 01 d0             	add    rax,rdx
  40302a:	c9                   	leave  
  40302b:	c3                   	ret    

000000000040302c <_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mISt19_Bit_const_iteratorSt13_Bit_iteratorEET0_T_S6_S5_>:
  40302c:	55                   	push   rbp
  40302d:	48 89 e5             	mov    rbp,rsp
  403030:	53                   	push   rbx
  403031:	48 83 ec 78          	sub    rsp,0x78
  403035:	48 89 c8             	mov    rax,rcx
  403038:	4c 89 c9             	mov    rcx,r9
  40303b:	48 89 7d b0          	mov    QWORD PTR [rbp-0x50],rdi
  40303f:	48 89 75 b8          	mov    QWORD PTR [rbp-0x48],rsi
  403043:	48 89 55 a0          	mov    QWORD PTR [rbp-0x60],rdx
  403047:	48 89 45 a8          	mov    QWORD PTR [rbp-0x58],rax
  40304b:	4c 89 45 90          	mov    QWORD PTR [rbp-0x70],r8
  40304f:	48 89 4d 98          	mov    QWORD PTR [rbp-0x68],rcx
  403053:	48 8d 55 b0          	lea    rdx,[rbp-0x50]
  403057:	48 8d 45 a0          	lea    rax,[rbp-0x60]
  40305b:	48 89 d6             	mov    rsi,rdx
  40305e:	48 89 c7             	mov    rdi,rax
  403061:	e8 d1 e5 ff ff       	call   401637 <_ZStmiRKSt18_Bit_iterator_baseS1_>
  403066:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
  40306a:	48 83 7d e8 00       	cmp    QWORD PTR [rbp-0x18],0x0
  40306f:	7e 50                	jle    4030c1 <_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mISt19_Bit_const_iteratorSt13_Bit_iteratorEET0_T_S6_S5_+0x95>
  403071:	48 8d 45 b0          	lea    rax,[rbp-0x50]
  403075:	48 89 c7             	mov    rdi,rax
  403078:	e8 01 e8 ff ff       	call   40187e <_ZNKSt19_Bit_const_iteratordeEv>
  40307d:	0f b6 d8             	movzx  ebx,al
  403080:	48 8d 45 90          	lea    rax,[rbp-0x70]
  403084:	48 89 c7             	mov    rdi,rax
  403087:	e8 48 e6 ff ff       	call   4016d4 <_ZNKSt13_Bit_iteratordeEv>
  40308c:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
  403090:	48 89 55 c8          	mov    QWORD PTR [rbp-0x38],rdx
  403094:	48 8d 45 c0          	lea    rax,[rbp-0x40]
  403098:	89 de                	mov    esi,ebx
  40309a:	48 89 c7             	mov    rdi,rax
  40309d:	e8 b2 e3 ff ff       	call   401454 <_ZNSt14_Bit_referenceaSEb>
  4030a2:	48 8d 45 b0          	lea    rax,[rbp-0x50]
  4030a6:	48 89 c7             	mov    rdi,rax
  4030a9:	e8 12 e8 ff ff       	call   4018c0 <_ZNSt19_Bit_const_iteratorppEv>
  4030ae:	48 8d 45 90          	lea    rax,[rbp-0x70]
  4030b2:	48 89 c7             	mov    rdi,rax
  4030b5:	e8 58 e6 ff ff       	call   401712 <_ZNSt13_Bit_iteratorppEv>
  4030ba:	48 83 6d e8 01       	sub    QWORD PTR [rbp-0x18],0x1
  4030bf:	eb a9                	jmp    40306a <_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mISt19_Bit_const_iteratorSt13_Bit_iteratorEET0_T_S6_S5_+0x3e>
  4030c1:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
  4030c5:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
  4030c9:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
  4030cd:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
  4030d1:	48 8b 55 d0          	mov    rdx,QWORD PTR [rbp-0x30]
  4030d5:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
  4030d9:	48 89 d1             	mov    rcx,rdx
  4030dc:	48 89 c2             	mov    rdx,rax
  4030df:	48 89 c8             	mov    rax,rcx
  4030e2:	48 83 c4 78          	add    rsp,0x78
  4030e6:	5b                   	pop    rbx
  4030e7:	5d                   	pop    rbp
  4030e8:	c3                   	ret    
  4030e9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

00000000004030f0 <__libc_csu_init>:
  4030f0:	41 57                	push   r15
  4030f2:	41 56                	push   r14
  4030f4:	41 89 ff             	mov    r15d,edi
  4030f7:	41 55                	push   r13
  4030f9:	41 54                	push   r12
  4030fb:	4c 8d 25 d6 1c 20 00 	lea    r12,[rip+0x201cd6]        # 604dd8 <__frame_dummy_init_array_entry>
  403102:	55                   	push   rbp
  403103:	48 8d 2d de 1c 20 00 	lea    rbp,[rip+0x201cde]        # 604de8 <__init_array_end>
  40310a:	53                   	push   rbx
  40310b:	49 89 f6             	mov    r14,rsi
  40310e:	49 89 d5             	mov    r13,rdx
  403111:	4c 29 e5             	sub    rbp,r12
  403114:	48 83 ec 08          	sub    rsp,0x8
  403118:	48 c1 fd 03          	sar    rbp,0x3
  40311c:	e8 f7 d9 ff ff       	call   400b18 <_init>
  403121:	48 85 ed             	test   rbp,rbp
  403124:	74 20                	je     403146 <__libc_csu_init+0x56>
  403126:	31 db                	xor    ebx,ebx
  403128:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
  40312f:	00 
  403130:	4c 89 ea             	mov    rdx,r13
  403133:	4c 89 f6             	mov    rsi,r14
  403136:	44 89 ff             	mov    edi,r15d
  403139:	41 ff 14 dc          	call   QWORD PTR [r12+rbx*8]
  40313d:	48 83 c3 01          	add    rbx,0x1
  403141:	48 39 eb             	cmp    rbx,rbp
  403144:	75 ea                	jne    403130 <__libc_csu_init+0x40>
  403146:	48 83 c4 08          	add    rsp,0x8
  40314a:	5b                   	pop    rbx
  40314b:	5d                   	pop    rbp
  40314c:	41 5c                	pop    r12
  40314e:	41 5d                	pop    r13
  403150:	41 5e                	pop    r14
  403152:	41 5f                	pop    r15
  403154:	c3                   	ret    
  403155:	90                   	nop
  403156:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  40315d:	00 00 00 

0000000000403160 <__libc_csu_fini>:
  403160:	f3 c3                	repz ret 

Disassembly of section .fini:

0000000000403164 <_fini>:
  403164:	48 83 ec 08          	sub    rsp,0x8
  403168:	48 83 c4 08          	add    rsp,0x8
  40316c:	c3                   	ret    

Disassembly of section .rodata:

0000000000403170 <_IO_stdin_used>:
  403170:	01 00                	add    DWORD PTR [rax],eax
  403172:	02 00                	add    al,BYTE PTR [rax]

0000000000403174 <_ZStL19piecewise_construct>:
  403174:	00 31                	add    BYTE PTR [rcx],dh
  403176:	30 31                	xor    BYTE PTR [rcx],dh
  403178:	31 00                	xor    DWORD PTR [rax],eax
  40317a:	31 30                	xor    DWORD PTR [rax],esi
  40317c:	31 31                	xor    DWORD PTR [rcx],esi
  40317e:	31 30                	xor    DWORD PTR [rax],esi
  403180:	00 76 65             	add    BYTE PTR [rsi+0x65],dh
  403183:	63 74 6f 72          	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
  403187:	3c 62                	cmp    al,0x62
  403189:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  40318a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  40318b:	6c                   	ins    BYTE PTR es:[rdi],dx
  40318c:	3e 3a 3a             	cmp    bh,BYTE PTR ds:[rdx]
  40318f:	5f                   	pop    rdi
  403190:	4d 5f                	rex.WRB pop r15
  403192:	69 6e 73 65 72 74 5f 	imul   ebp,DWORD PTR [rsi+0x73],0x5f747265
  403199:	61                   	(bad)  
  40319a:	75 78                	jne    403214 <__GNU_EH_FRAME_HDR+0x74>
	...

Disassembly of section .eh_frame_hdr:

00000000004031a0 <__GNU_EH_FRAME_HDR>:
  4031a0:	01 1b                	add    DWORD PTR [rbx],ebx
  4031a2:	03 3b                	add    edi,DWORD PTR [rbx]
  4031a4:	34 03                	xor    al,0x3
  4031a6:	00 00                	add    BYTE PTR [rax],al
  4031a8:	65 00 00             	add    BYTE PTR gs:[rax],al
  4031ab:	00 a0 d9 ff ff 80    	add    BYTE PTR [rax-0x7f000027],ah
  4031b1:	03 00                	add    eax,DWORD PTR [rax]
  4031b3:	00 00                	add    BYTE PTR [rax],al
  4031b5:	db ff                	(bad)  
  4031b7:	ff 50 03             	call   QWORD PTR [rax+0x3]
  4031ba:	00 00                	add    BYTE PTR [rax],al
  4031bc:	f6 db                	neg    bl
  4031be:	ff                   	(bad)  
  4031bf:	ff 88 06 00 00 08    	dec    DWORD PTR [rax+0x8000006]
  4031c5:	e1 ff                	loope  4031c6 <__GNU_EH_FRAME_HDR+0x26>
  4031c7:	ff b0 06 00 00 11    	push   QWORD PTR [rax+0x11000006]
  4031cd:	e2 ff                	loop   4031ce <__GNU_EH_FRAME_HDR+0x2e>
  4031cf:	ff 08                	dec    DWORD PTR [rax]
  4031d1:	10 00                	adc    BYTE PTR [rax],al
  4031d3:	00 4f e2             	add    BYTE PTR [rdi-0x1e],cl
  4031d6:	ff                   	(bad)  
  4031d7:	ff 28                	jmp    FWORD PTR [rax]
  4031d9:	10 00                	adc    BYTE PTR [rax],al
  4031db:	00 64 e2 ff          	add    BYTE PTR [rdx+riz*8-0x1],ah
  4031df:	ff a8 03 00 00 8e    	jmp    FWORD PTR [rax-0x71fffffd]
  4031e5:	e2 ff                	loop   4031e6 <__GNU_EH_FRAME_HDR+0x46>
  4031e7:	ff c8                	dec    eax
  4031e9:	03 00                	add    eax,DWORD PTR [rax]
  4031eb:	00 b4 e2 ff ff e8 03 	add    BYTE PTR [rdx+riz*8+0x3e8ffff],dh
  4031f2:	00 00                	add    BYTE PTR [rax],al
  4031f4:	10 e3                	adc    bl,ah
  4031f6:	ff                   	(bad)  
  4031f7:	ff 08                	dec    DWORD PTR [rax]
  4031f9:	04 00                	add    al,0x0
  4031fb:	00 40 e3             	add    BYTE PTR [rax-0x1d],al
  4031fe:	ff                   	(bad)  
  4031ff:	ff 28                	jmp    FWORD PTR [rax]
  403201:	04 00                	add    al,0x0
  403203:	00 4c e3 ff          	add    BYTE PTR [rbx+riz*8-0x1],cl
  403207:	ff 48 04             	dec    DWORD PTR [rax+0x4]
  40320a:	00 00                	add    BYTE PTR [rax],al
  40320c:	84 e3                	test   bl,ah
  40320e:	ff                   	(bad)  
  40320f:	ff 68 04             	jmp    FWORD PTR [rax+0x4]
  403212:	00 00                	add    BYTE PTR [rax],al
  403214:	c8 e3 ff ff          	enter  0xffe3,0xff
  403218:	88 04 00             	mov    BYTE PTR [rax+rax*1],al
  40321b:	00 0a                	add    BYTE PTR [rdx],cl
  40321d:	e4 ff                	in     al,0xff
  40321f:	ff a8 04 00 00 97    	jmp    FWORD PTR [rax-0x68fffffc]
  403225:	e4 ff                	in     al,0xff
  403227:	ff c8                	dec    eax
  403229:	04 00                	add    al,0x0
  40322b:	00 e2                	add    dl,ah
  40322d:	e4 ff                	in     al,0xff
  40322f:	ff                   	(bad)  
  403230:	e8 04 00 00 08       	call   8403239 <_end+0x7dfe041>
  403235:	e5 ff                	in     eax,0xff
  403237:	ff 08                	dec    DWORD PTR [rax]
  403239:	05 00 00 34 e5       	add    eax,0xe5340000
  40323e:	ff                   	(bad)  
  40323f:	ff 28                	jmp    FWORD PTR [rax]
  403241:	05 00 00 72 e5       	add    eax,0xe5720000
  403246:	ff                   	(bad)  
  403247:	ff 48 05             	dec    DWORD PTR [rax+0x5]
  40324a:	00 00                	add    BYTE PTR [rax],al
  40324c:	90                   	nop
  40324d:	e5 ff                	in     eax,0xff
  40324f:	ff 68 05             	jmp    FWORD PTR [rax+0x5]
  403252:	00 00                	add    BYTE PTR [rax],al
  403254:	e2 e5                	loop   40323b <__GNU_EH_FRAME_HDR+0x9b>
  403256:	ff                   	(bad)  
  403257:	ff 88 05 00 00 00    	dec    DWORD PTR [rax+0x5]
  40325d:	e6 ff                	out    0xff,al
  40325f:	ff a8 05 00 00 2a    	jmp    FWORD PTR [rax+0x2a000005]
  403265:	e6 ff                	out    0xff,al
  403267:	ff c8                	dec    eax
  403269:	05 00 00 82 e6       	add    eax,0xe6820000
  40326e:	ff                   	(bad)  
  40326f:	ff                   	(bad)  
  403270:	e8 05 00 00 ae       	call   ffffffffae40327a <_end+0xffffffffaddfe082>
  403275:	e6 ff                	out    0xff,al
  403277:	ff 08                	dec    DWORD PTR [rax]
  403279:	06                   	(bad)  
  40327a:	00 00                	add    BYTE PTR [rax],al
  40327c:	de e6                	fsubp  st(6),st
  40327e:	ff                   	(bad)  
  40327f:	ff 28                	jmp    FWORD PTR [rax]
  403281:	06                   	(bad)  
  403282:	00 00                	add    BYTE PTR [rax],al
  403284:	20 e7                	and    bh,ah
  403286:	ff                   	(bad)  
  403287:	ff 48 06             	dec    DWORD PTR [rax+0x6]
  40328a:	00 00                	add    BYTE PTR [rax],al
  40328c:	3e e7 ff             	ds out 0xff,eax
  40328f:	ff                   	(bad)  
  403290:	d8 06                	fadd   DWORD PTR [rsi]
  403292:	00 00                	add    BYTE PTR [rax],al
  403294:	8b e7                	mov    esp,edi
  403296:	ff                   	(bad)  
  403297:	ff 00                	inc    DWORD PTR [rax]
  403299:	07                   	(bad)  
  40329a:	00 00                	add    BYTE PTR [rax],al
  40329c:	b8 e7 ff ff 20       	mov    eax,0x20ffffe7
  4032a1:	07                   	(bad)  
  4032a2:	00 00                	add    BYTE PTR [rax],al
  4032a4:	d4                   	(bad)  
  4032a5:	e7 ff                	out    0xff,eax
  4032a7:	ff 40 07             	inc    DWORD PTR [rax+0x7]
  4032aa:	00 00                	add    BYTE PTR [rax],al
  4032ac:	f0 e7 ff             	lock out 0xff,eax
  4032af:	ff 60 07             	jmp    QWORD PTR [rax+0x7]
  4032b2:	00 00                	add    BYTE PTR [rax],al
  4032b4:	92                   	xchg   edx,eax
  4032b5:	e8 ff ff 88 07       	call   7c932b9 <_end+0x768e0c1>
  4032ba:	00 00                	add    BYTE PTR [rax],al
  4032bc:	ae                   	scas   al,BYTE PTR es:[rdi]
  4032bd:	e8 ff ff a8 07       	call   7e932c1 <_end+0x788e0c9>
  4032c2:	00 00                	add    BYTE PTR [rax],al
  4032c4:	ca e8 ff             	retf   0xffe8
  4032c7:	ff d0                	call   rax
  4032c9:	07                   	(bad)  
  4032ca:	00 00                	add    BYTE PTR [rax],al
  4032cc:	16                   	(bad)  
  4032cd:	e9 ff ff f0 07       	jmp    83132d1 <_end+0x7d0e0d9>
  4032d2:	00 00                	add    BYTE PTR [rax],al
  4032d4:	ce                   	(bad)  
  4032d5:	e9 ff ff 18 08       	jmp    85932d9 <_end+0x7f8e0e1>
  4032da:	00 00                	add    BYTE PTR [rax],al
  4032dc:	23 ea                	and    ebp,edx
  4032de:	ff                   	(bad)  
  4032df:	ff                   	(bad)  
  4032e0:	38 08                	cmp    BYTE PTR [rax],cl
  4032e2:	00 00                	add    BYTE PTR [rax],al
  4032e4:	31 ea                	xor    edx,ebp
  4032e6:	ff                   	(bad)  
  4032e7:	ff 58 08             	call   FWORD PTR [rax+0x8]
  4032ea:	00 00                	add    BYTE PTR [rax],al
  4032ec:	6c                   	ins    BYTE PTR es:[rdi],dx
  4032ed:	ea                   	(bad)  
  4032ee:	ff                   	(bad)  
  4032ef:	ff                   	(bad)  
  4032f0:	78 08                	js     4032fa <__GNU_EH_FRAME_HDR+0x15a>
  4032f2:	00 00                	add    BYTE PTR [rax],al
  4032f4:	78 ea                	js     4032e0 <__GNU_EH_FRAME_HDR+0x140>
  4032f6:	ff                   	(bad)  
  4032f7:	ff 98 08 00 00 84    	call   FWORD PTR [rax-0x7bfffff8]
  4032fd:	ea                   	(bad)  
  4032fe:	ff                   	(bad)  
  4032ff:	ff                   	(bad)  
  403300:	b8 08 00 00 a0       	mov    eax,0xa0000008
  403305:	ea                   	(bad)  
  403306:	ff                   	(bad)  
  403307:	ff                   	(bad)  
  403308:	d8 08                	fmul   DWORD PTR [rax]
  40330a:	00 00                	add    BYTE PTR [rax],al
  40330c:	e6 ea                	out    0xea,al
  40330e:	ff                   	(bad)  
  40330f:	ff                   	(bad)  
  403310:	f8                   	clc    
  403311:	08 00                	or     BYTE PTR [rax],al
  403313:	00 0e                	add    BYTE PTR [rsi],cl
  403315:	eb ff                	jmp    403316 <__GNU_EH_FRAME_HDR+0x176>
  403317:	ff 20                	jmp    QWORD PTR [rax]
  403319:	09 00                	or     DWORD PTR [rax],eax
  40331b:	00 c2                	add    dl,al
  40331d:	eb ff                	jmp    40331e <__GNU_EH_FRAME_HDR+0x17e>
  40331f:	ff 40 09             	inc    DWORD PTR [rax+0x9]
  403322:	00 00                	add    BYTE PTR [rax],al
  403324:	fc                   	cld    
  403325:	eb ff                	jmp    403326 <__GNU_EH_FRAME_HDR+0x186>
  403327:	ff 60 09             	jmp    QWORD PTR [rax+0x9]
  40332a:	00 00                	add    BYTE PTR [rax],al
  40332c:	18 ec                	sbb    ah,ch
  40332e:	ff                   	(bad)  
  40332f:	ff 80 09 00 00 34    	inc    DWORD PTR [rax+0x34000009]
  403335:	ef                   	out    dx,eax
  403336:	ff                   	(bad)  
  403337:	ff a8 09 00 00 64    	jmp    FWORD PTR [rax+0x64000009]
  40333d:	ef                   	out    dx,eax
  40333e:	ff                   	(bad)  
  40333f:	ff c8                	dec    eax
  403341:	09 00                	or     DWORD PTR [rax],eax
  403343:	00 aa ef ff ff e8    	add    BYTE PTR [rdx-0x17000011],ch
  403349:	09 00                	or     DWORD PTR [rax],eax
  40334b:	00 ec                	add    ah,ch
  40334d:	ef                   	out    dx,eax
  40334e:	ff                   	(bad)  
  40334f:	ff 08                	dec    DWORD PTR [rax]
  403351:	0a 00                	or     al,BYTE PTR [rax]
  403353:	00 0c f0             	add    BYTE PTR [rax+rsi*8],cl
  403356:	ff                   	(bad)  
  403357:	ff 28                	jmp    FWORD PTR [rax]
  403359:	0a 00                	or     al,BYTE PTR [rax]
  40335b:	00 27                	add    BYTE PTR [rdi],ah
  40335d:	f0 ff                	lock (bad) 
  40335f:	ff 48 0a             	dec    DWORD PTR [rax+0xa]
  403362:	00 00                	add    BYTE PTR [rax],al
  403364:	36 f0 ff             	ss lock (bad) 
  403367:	ff 68 0a             	jmp    FWORD PTR [rax+0xa]
  40336a:	00 00                	add    BYTE PTR [rax],al
  40336c:	90                   	nop
  40336d:	f0 ff                	lock (bad) 
  40336f:	ff 88 0a 00 00 fa    	dec    DWORD PTR [rax-0x5fffff6]
  403375:	f0 ff                	lock (bad) 
  403377:	ff a8 0a 00 00 2a    	jmp    FWORD PTR [rax+0x2a00000a]
  40337d:	f1                   	icebp  
  40337e:	ff                   	(bad)  
  40337f:	ff c8                	dec    eax
  403381:	0a 00                	or     al,BYTE PTR [rax]
  403383:	00 40 f1             	add    BYTE PTR [rax-0xf],al
  403386:	ff                   	(bad)  
  403387:	ff                   	(bad)  
  403388:	e8 0a 00 00 4e       	call   4e403397 <_end+0x4ddfe19f>
  40338d:	f1                   	icebp  
  40338e:	ff                   	(bad)  
  40338f:	ff 08                	dec    DWORD PTR [rax]
  403391:	0b 00                	or     eax,DWORD PTR [rax]
  403393:	00 91 f1 ff ff 28    	add    BYTE PTR [rcx+0x28fffff1],dl
  403399:	0b 00                	or     eax,DWORD PTR [rax]
  40339b:	00 40 f2             	add    BYTE PTR [rax-0xe],al
  40339e:	ff                   	(bad)  
  40339f:	ff 48 0b             	dec    DWORD PTR [rax+0xb]
  4033a2:	00 00                	add    BYTE PTR [rax],al
  4033a4:	6c                   	ins    BYTE PTR es:[rdi],dx
  4033a5:	f2 ff                	repnz (bad) 
  4033a7:	ff 68 0b             	jmp    FWORD PTR [rax+0xb]
  4033aa:	00 00                	add    BYTE PTR [rax],al
  4033ac:	36 f3 ff             	ss repz (bad) 
  4033af:	ff 90 0b 00 00 ea    	call   QWORD PTR [rax-0x15fffff5]
  4033b5:	f3 ff                	repz (bad) 
  4033b7:	ff b0 0b 00 00 18    	push   QWORD PTR [rax+0x1800000b]
  4033bd:	f4                   	hlt    
  4033be:	ff                   	(bad)  
  4033bf:	ff d0                	call   rax
  4033c1:	0b 00                	or     eax,DWORD PTR [rax]
  4033c3:	00 c8                	add    al,cl
  4033c5:	f4                   	hlt    
  4033c6:	ff                   	(bad)  
  4033c7:	ff f0                	push   rax
  4033c9:	0b 00                	or     eax,DWORD PTR [rax]
  4033cb:	00 d4                	add    ah,dl
  4033cd:	f4                   	hlt    
  4033ce:	ff                   	(bad)  
  4033cf:	ff 10                	call   QWORD PTR [rax]
  4033d1:	0c 00                	or     al,0x0
  4033d3:	00 e0                	add    al,ah
  4033d5:	f4                   	hlt    
  4033d6:	ff                   	(bad)  
  4033d7:	ff 30                	push   QWORD PTR [rax]
  4033d9:	0c 00                	or     al,0x0
  4033db:	00 06                	add    BYTE PTR [rsi],al
  4033dd:	f5                   	cmc    
  4033de:	ff                   	(bad)  
  4033df:	ff 50 0c             	call   QWORD PTR [rax+0xc]
  4033e2:	00 00                	add    BYTE PTR [rax],al
  4033e4:	34 f5                	xor    al,0xf5
  4033e6:	ff                   	(bad)  
  4033e7:	ff 70 0c             	push   QWORD PTR [rax+0xc]
  4033ea:	00 00                	add    BYTE PTR [rax],al
  4033ec:	5e                   	pop    rsi
  4033ed:	f5                   	cmc    
  4033ee:	ff                   	(bad)  
  4033ef:	ff 90 0c 00 00 79    	call   QWORD PTR [rax+0x7900000c]
  4033f5:	f5                   	cmc    
  4033f6:	ff                   	(bad)  
  4033f7:	ff b0 0c 00 00 ae    	push   QWORD PTR [rax-0x51fffff4]
  4033fd:	f5                   	cmc    
  4033fe:	ff                   	(bad)  
  4033ff:	ff d0                	call   rax
  403401:	0c 00                	or     al,0x0
  403403:	00 7e f6             	add    BYTE PTR [rsi-0xa],bh
  403406:	ff                   	(bad)  
  403407:	ff f0                	push   rax
  403409:	0c 00                	or     al,0x0
  40340b:	00 d6                	add    dh,dl
  40340d:	f6 ff                	idiv   bh
  40340f:	ff 10                	call   QWORD PTR [rax]
  403411:	0d 00 00 22 f7       	or     eax,0xf7220000
  403416:	ff                   	(bad)  
  403417:	ff                   	(bad)  
  403418:	38 0d 00 00 d1 f7    	cmp    BYTE PTR [rip+0xfffffffff7d10000],cl        # fffffffff811341e <_end+0xfffffffff7b0e226>
  40341e:	ff                   	(bad)  
  40341f:	ff 58 0d             	call   FWORD PTR [rax+0xd]
  403422:	00 00                	add    BYTE PTR [rax],al
  403424:	a2 f8 ff ff 78 0d 00 	movabs ds:0xb200000d78fffff8,al
  40342b:	00 b2 
  40342d:	f8                   	clc    
  40342e:	ff                   	(bad)  
  40342f:	ff 98 0d 00 00 d6    	call   FWORD PTR [rax-0x29fffff3]
  403435:	f8                   	clc    
  403436:	ff                   	(bad)  
  403437:	ff                   	(bad)  
  403438:	b8 0d 00 00 18       	mov    eax,0x1800000d
  40343d:	f9                   	stc    
  40343e:	ff                   	(bad)  
  40343f:	ff                   	(bad)  
  403440:	d8 0d 00 00 4d f9    	fmul   DWORD PTR [rip+0xfffffffff94d0000]        # fffffffff98d3446 <_end+0xfffffffff92ce24e>
  403446:	ff                   	(bad)  
  403447:	ff                   	(bad)  
  403448:	f8                   	clc    
  403449:	0d 00 00 be f9       	or     eax,0xf9be0000
  40344e:	ff                   	(bad)  
  40344f:	ff 18                	call   FWORD PTR [rax]
  403451:	0e                   	(bad)  
  403452:	00 00                	add    BYTE PTR [rax],al
  403454:	d8 f9                	fdivr  st,st(1)
  403456:	ff                   	(bad)  
  403457:	ff                   	(bad)  
  403458:	38 0e                	cmp    BYTE PTR [rsi],cl
  40345a:	00 00                	add    BYTE PTR [rax],al
  40345c:	e6 f9                	out    0xf9,al
  40345e:	ff                   	(bad)  
  40345f:	ff 58 0e             	call   FWORD PTR [rax+0xe]
  403462:	00 00                	add    BYTE PTR [rax],al
  403464:	f4                   	hlt    
  403465:	f9                   	stc    
  403466:	ff                   	(bad)  
  403467:	ff                   	(bad)  
  403468:	78 0e                	js     403478 <__GNU_EH_FRAME_HDR+0x2d8>
  40346a:	00 00                	add    BYTE PTR [rax],al
  40346c:	4c fa                	rex.WR cli 
  40346e:	ff                   	(bad)  
  40346f:	ff a0 0e 00 00 81    	jmp    QWORD PTR [rax-0x7efffff2]
  403475:	fa                   	cli    
  403476:	ff                   	(bad)  
  403477:	ff c0                	inc    eax
  403479:	0e                   	(bad)  
  40347a:	00 00                	add    BYTE PTR [rax],al
  40347c:	51                   	push   rcx
  40347d:	fb                   	sti    
  40347e:	ff                   	(bad)  
  40347f:	ff e0                	jmp    rax
  403481:	0e                   	(bad)  
  403482:	00 00                	add    BYTE PTR [rax],al
  403484:	c2 fb ff             	ret    0xfffb
  403487:	ff 00                	inc    DWORD PTR [rax]
  403489:	0f 00 00             	sldt   WORD PTR [rax]
  40348c:	d6                   	(bad)  
  40348d:	fb                   	sti    
  40348e:	ff                   	(bad)  
  40348f:	ff 20                	jmp    QWORD PTR [rax]
  403491:	0f 00 00             	sldt   WORD PTR [rax]
  403494:	8f                   	(bad)  
  403495:	fc                   	cld    
  403496:	ff                   	(bad)  
  403497:	ff 40 0f             	inc    DWORD PTR [rax+0xf]
  40349a:	00 00                	add    BYTE PTR [rax],al
  40349c:	c0 fc ff             	sar    ah,0xff
  40349f:	ff 60 0f             	jmp    QWORD PTR [rax+0xf]
  4034a2:	00 00                	add    BYTE PTR [rax],al
  4034a4:	f5                   	cmc    
  4034a5:	fc                   	cld    
  4034a6:	ff                   	(bad)  
  4034a7:	ff 80 0f 00 00 66    	inc    DWORD PTR [rax+0x6600000f]
  4034ad:	fd                   	std    
  4034ae:	ff                   	(bad)  
  4034af:	ff a0 0f 00 00 27    	jmp    QWORD PTR [rax+0x2700000f]
  4034b5:	fe                   	(bad)  
  4034b6:	ff                   	(bad)  
  4034b7:	ff c0                	inc    eax
  4034b9:	0f 00 00             	sldt   WORD PTR [rax]
  4034bc:	8c fe                	mov    esi,?
  4034be:	ff                   	(bad)  
  4034bf:	ff e0                	jmp    rax
  4034c1:	0f 00 00             	sldt   WORD PTR [rax]
  4034c4:	50                   	push   rax
  4034c5:	ff                   	(bad)  
  4034c6:	ff                   	(bad)  
  4034c7:	ff 48 10             	dec    DWORD PTR [rax+0x10]
  4034ca:	00 00                	add    BYTE PTR [rax],al
  4034cc:	c0 ff ff             	sar    bh,0xff
  4034cf:	ff                   	.byte 0xff
  4034d0:	90                   	nop
  4034d1:	10 00                	adc    BYTE PTR [rax],al
	...

Disassembly of section .eh_frame:

00000000004034d8 <__FRAME_END__-0xd70>:
  4034d8:	14 00                	adc    al,0x0
  4034da:	00 00                	add    BYTE PTR [rax],al
  4034dc:	00 00                	add    BYTE PTR [rax],al
  4034de:	00 00                	add    BYTE PTR [rax],al
  4034e0:	01 7a 52             	add    DWORD PTR [rdx+0x52],edi
  4034e3:	00 01                	add    BYTE PTR [rcx],al
  4034e5:	78 10                	js     4034f7 <__GNU_EH_FRAME_HDR+0x357>
  4034e7:	01 1b                	add    DWORD PTR [rbx],ebx
  4034e9:	0c 07                	or     al,0x7
  4034eb:	08 90 01 07 10 14    	or     BYTE PTR [rax+0x14100701],dl
  4034f1:	00 00                	add    BYTE PTR [rax],al
  4034f3:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  4034f6:	00 00                	add    BYTE PTR [rax],al
  4034f8:	a8 d7                	test   al,0xd7
  4034fa:	ff                   	(bad)  
  4034fb:	ff 2a                	jmp    FWORD PTR [rdx]
	...
  403505:	00 00                	add    BYTE PTR [rax],al
  403507:	00 14 00             	add    BYTE PTR [rax+rax*1],dl
  40350a:	00 00                	add    BYTE PTR [rax],al
  40350c:	00 00                	add    BYTE PTR [rax],al
  40350e:	00 00                	add    BYTE PTR [rax],al
  403510:	01 7a 52             	add    DWORD PTR [rdx+0x52],edi
  403513:	00 01                	add    BYTE PTR [rcx],al
  403515:	78 10                	js     403527 <__GNU_EH_FRAME_HDR+0x387>
  403517:	01 1b                	add    DWORD PTR [rbx],ebx
  403519:	0c 07                	or     al,0x7
  40351b:	08 90 01 00 00 24    	or     BYTE PTR [rax+0x24000001],dl
  403521:	00 00                	add    BYTE PTR [rax],al
  403523:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  403526:	00 00                	add    BYTE PTR [rax],al
  403528:	18 d6                	sbb    dh,dl
  40352a:	ff                   	(bad)  
  40352b:	ff 50 01             	call   QWORD PTR [rax+0x1]
  40352e:	00 00                	add    BYTE PTR [rax],al
  403530:	00 0e                	add    BYTE PTR [rsi],cl
  403532:	10 46 0e             	adc    BYTE PTR [rsi+0xe],al
  403535:	18 4a 0f             	sbb    BYTE PTR [rdx+0xf],cl
  403538:	0b 77 08             	or     esi,DWORD PTR [rdi+0x8]
  40353b:	80 00 3f             	add    BYTE PTR [rax],0x3f
  40353e:	1a 3b                	sbb    bh,BYTE PTR [rbx]
  403540:	2a 33                	sub    dh,BYTE PTR [rbx]
  403542:	24 22                	and    al,0x22
  403544:	00 00                	add    BYTE PTR [rax],al
  403546:	00 00                	add    BYTE PTR [rax],al
  403548:	1c 00                	sbb    al,0x0
  40354a:	00 00                	add    BYTE PTR [rax],al
  40354c:	44 00 00             	add    BYTE PTR [rax],r8b
  40354f:	00 b4 de ff ff 2a 00 	add    BYTE PTR [rsi+rbx*8+0x2affff],dh
  403556:	00 00                	add    BYTE PTR [rax],al
  403558:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
  40355b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  403561:	65 0c 07             	gs or  al,0x7
  403564:	08 00                	or     BYTE PTR [rax],al
  403566:	00 00                	add    BYTE PTR [rax],al
  403568:	1c 00                	sbb    al,0x0
  40356a:	00 00                	add    BYTE PTR [rax],al
  40356c:	64 00 00             	add    BYTE PTR fs:[rax],al
  40356f:	00 be de ff ff 25    	add    BYTE PTR [rsi+0x25ffffde],bh
  403575:	00 00                	add    BYTE PTR [rax],al
  403577:	00 00                	add    BYTE PTR [rax],al
  403579:	41 0e                	rex.B (bad) 
  40357b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  403581:	60                   	(bad)  
  403582:	0c 07                	or     al,0x7
  403584:	08 00                	or     BYTE PTR [rax],al
  403586:	00 00                	add    BYTE PTR [rax],al
  403588:	1c 00                	sbb    al,0x0
  40358a:	00 00                	add    BYTE PTR [rax],al
  40358c:	84 00                	test   BYTE PTR [rax],al
  40358e:	00 00                	add    BYTE PTR [rax],al
  403590:	c4                   	(bad)  
  403591:	de ff                	fdivrp st(7),st
  403593:	ff 5c 00 00          	call   FWORD PTR [rax+rax*1+0x0]
  403597:	00 00                	add    BYTE PTR [rax],al
  403599:	41 0e                	rex.B (bad) 
  40359b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  4035a1:	02 57 0c             	add    dl,BYTE PTR [rdi+0xc]
  4035a4:	07                   	(bad)  
  4035a5:	08 00                	or     BYTE PTR [rax],al
  4035a7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  4035aa:	00 00                	add    BYTE PTR [rax],al
  4035ac:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  4035ad:	00 00                	add    BYTE PTR [rax],al
  4035af:	00 00                	add    BYTE PTR [rax],al
  4035b1:	df ff                	(bad)  
  4035b3:	ff 2f                	jmp    FWORD PTR [rdi]
  4035b5:	00 00                	add    BYTE PTR [rax],al
  4035b7:	00 00                	add    BYTE PTR [rax],al
  4035b9:	41 0e                	rex.B (bad) 
  4035bb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  4035c1:	6a 0c                	push   0xc
  4035c3:	07                   	(bad)  
  4035c4:	08 00                	or     BYTE PTR [rax],al
  4035c6:	00 00                	add    BYTE PTR [rax],al
  4035c8:	1c 00                	sbb    al,0x0
  4035ca:	00 00                	add    BYTE PTR [rax],al
  4035cc:	c4                   	(bad)  
  4035cd:	00 00                	add    BYTE PTR [rax],al
  4035cf:	00 10                	add    BYTE PTR [rax],dl
  4035d1:	df ff                	(bad)  
  4035d3:	ff 0b                	dec    DWORD PTR [rbx]
  4035d5:	00 00                	add    BYTE PTR [rax],al
  4035d7:	00 00                	add    BYTE PTR [rax],al
  4035d9:	41 0e                	rex.B (bad) 
  4035db:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  4035e1:	46 0c 07             	rex.RX or al,0x7
  4035e4:	08 00                	or     BYTE PTR [rax],al
  4035e6:	00 00                	add    BYTE PTR [rax],al
  4035e8:	1c 00                	sbb    al,0x0
  4035ea:	00 00                	add    BYTE PTR [rax],al
  4035ec:	e4 00                	in     al,0x0
  4035ee:	00 00                	add    BYTE PTR [rax],al
  4035f0:	fc                   	cld    
  4035f1:	de ff                	fdivrp st(7),st
  4035f3:	ff 37                	push   QWORD PTR [rdi]
  4035f5:	00 00                	add    BYTE PTR [rax],al
  4035f7:	00 00                	add    BYTE PTR [rax],al
  4035f9:	41 0e                	rex.B (bad) 
  4035fb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  403601:	72 0c                	jb     40360f <__GNU_EH_FRAME_HDR+0x46f>
  403603:	07                   	(bad)  
  403604:	08 00                	or     BYTE PTR [rax],al
  403606:	00 00                	add    BYTE PTR [rax],al
  403608:	1c 00                	sbb    al,0x0
  40360a:	00 00                	add    BYTE PTR [rax],al
  40360c:	04 01                	add    al,0x1
  40360e:	00 00                	add    BYTE PTR [rax],al
  403610:	14 df                	adc    al,0xdf
  403612:	ff                   	(bad)  
  403613:	ff 43 00             	inc    DWORD PTR [rbx+0x0]
  403616:	00 00                	add    BYTE PTR [rax],al
  403618:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
  40361b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  403621:	7e 0c                	jle    40362f <__GNU_EH_FRAME_HDR+0x48f>
  403623:	07                   	(bad)  
  403624:	08 00                	or     BYTE PTR [rax],al
  403626:	00 00                	add    BYTE PTR [rax],al
  403628:	1c 00                	sbb    al,0x0
  40362a:	00 00                	add    BYTE PTR [rax],al
  40362c:	24 01                	and    al,0x1
  40362e:	00 00                	add    BYTE PTR [rax],al
  403630:	38 df                	cmp    bh,bl
  403632:	ff                   	(bad)  
  403633:	ff 42 00             	inc    DWORD PTR [rdx+0x0]
  403636:	00 00                	add    BYTE PTR [rax],al
  403638:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
  40363b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  403641:	7d 0c                	jge    40364f <__GNU_EH_FRAME_HDR+0x4af>
  403643:	07                   	(bad)  
  403644:	08 00                	or     BYTE PTR [rax],al
  403646:	00 00                	add    BYTE PTR [rax],al
  403648:	1c 00                	sbb    al,0x0
  40364a:	00 00                	add    BYTE PTR [rax],al
  40364c:	44 01 00             	add    DWORD PTR [rax],r8d
  40364f:	00 5a df             	add    BYTE PTR [rdx-0x21],bl
  403652:	ff                   	(bad)  
  403653:	ff 8d 00 00 00 00    	dec    DWORD PTR [rbp+0x0]
  403659:	41 0e                	rex.B (bad) 
  40365b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  403661:	02 88 0c 07 08 00    	add    cl,BYTE PTR [rax+0x8070c]
  403667:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  40366a:	00 00                	add    BYTE PTR [rax],al
  40366c:	64 01 00             	add    DWORD PTR fs:[rax],eax
  40366f:	00 c7                	add    bh,al
  403671:	df ff                	(bad)  
  403673:	ff 4b 00             	dec    DWORD PTR [rbx+0x0]
  403676:	00 00                	add    BYTE PTR [rax],al
  403678:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
  40367b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  403681:	02 46 0c             	add    al,BYTE PTR [rsi+0xc]
  403684:	07                   	(bad)  
  403685:	08 00                	or     BYTE PTR [rax],al
  403687:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  40368a:	00 00                	add    BYTE PTR [rax],al
  40368c:	84 01                	test   BYTE PTR [rcx],al
  40368e:	00 00                	add    BYTE PTR [rax],al
  403690:	f2 df ff             	repnz (bad) 
  403693:	ff 25 00 00 00 00    	jmp    QWORD PTR [rip+0x0]        # 403699 <__GNU_EH_FRAME_HDR+0x4f9>
  403699:	41 0e                	rex.B (bad) 
  40369b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  4036a1:	60                   	(bad)  
  4036a2:	0c 07                	or     al,0x7
  4036a4:	08 00                	or     BYTE PTR [rax],al
  4036a6:	00 00                	add    BYTE PTR [rax],al
  4036a8:	1c 00                	sbb    al,0x0
  4036aa:	00 00                	add    BYTE PTR [rax],al
  4036ac:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  4036ad:	01 00                	add    DWORD PTR [rax],eax
  4036af:	00 f8                	add    al,bh
  4036b1:	df ff                	(bad)  
  4036b3:	ff 2c 00             	jmp    FWORD PTR [rax+rax*1]
  4036b6:	00 00                	add    BYTE PTR [rax],al
  4036b8:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
  4036bb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  4036c1:	67 0c 07             	addr32 or al,0x7
  4036c4:	08 00                	or     BYTE PTR [rax],al
  4036c6:	00 00                	add    BYTE PTR [rax],al
  4036c8:	1c 00                	sbb    al,0x0
  4036ca:	00 00                	add    BYTE PTR [rax],al
  4036cc:	c4 01 00 00          	(bad)  
  4036d0:	04 e0                	add    al,0xe0
  4036d2:	ff                   	(bad)  
  4036d3:	ff                   	(bad)  
  4036d4:	3d 00 00 00 00       	cmp    eax,0x0
  4036d9:	41 0e                	rex.B (bad) 
  4036db:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  4036e1:	78 0c                	js     4036ef <__GNU_EH_FRAME_HDR+0x54f>
  4036e3:	07                   	(bad)  
  4036e4:	08 00                	or     BYTE PTR [rax],al
  4036e6:	00 00                	add    BYTE PTR [rax],al
  4036e8:	1c 00                	sbb    al,0x0
  4036ea:	00 00                	add    BYTE PTR [rax],al
  4036ec:	e4 01                	in     al,0x1
  4036ee:	00 00                	add    BYTE PTR [rax],al
  4036f0:	22 e0                	and    ah,al
  4036f2:	ff                   	(bad)  
  4036f3:	ff 1e                	call   FWORD PTR [rsi]
  4036f5:	00 00                	add    BYTE PTR [rax],al
  4036f7:	00 00                	add    BYTE PTR [rax],al
  4036f9:	41 0e                	rex.B (bad) 
  4036fb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  403701:	59                   	pop    rcx
  403702:	0c 07                	or     al,0x7
  403704:	08 00                	or     BYTE PTR [rax],al
  403706:	00 00                	add    BYTE PTR [rax],al
  403708:	1c 00                	sbb    al,0x0
  40370a:	00 00                	add    BYTE PTR [rax],al
  40370c:	04 02                	add    al,0x2
  40370e:	00 00                	add    BYTE PTR [rax],al
  403710:	20 e0                	and    al,ah
  403712:	ff                   	(bad)  
  403713:	ff 51 00             	call   QWORD PTR [rcx+0x0]
  403716:	00 00                	add    BYTE PTR [rax],al
  403718:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
  40371b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  403721:	02 4c 0c 07          	add    cl,BYTE PTR [rsp+rcx*1+0x7]
  403725:	08 00                	or     BYTE PTR [rax],al
  403727:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  40372a:	00 00                	add    BYTE PTR [rax],al
  40372c:	24 02                	and    al,0x2
  40372e:	00 00                	add    BYTE PTR [rax],al
  403730:	52                   	push   rdx
  403731:	e0 ff                	loopne 403732 <__GNU_EH_FRAME_HDR+0x592>
  403733:	ff 1e                	call   FWORD PTR [rsi]
  403735:	00 00                	add    BYTE PTR [rax],al
  403737:	00 00                	add    BYTE PTR [rax],al
  403739:	41 0e                	rex.B (bad) 
  40373b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  403741:	59                   	pop    rcx
  403742:	0c 07                	or     al,0x7
  403744:	08 00                	or     BYTE PTR [rax],al
  403746:	00 00                	add    BYTE PTR [rax],al
  403748:	1c 00                	sbb    al,0x0
  40374a:	00 00                	add    BYTE PTR [rax],al
  40374c:	44 02 00             	add    r8b,BYTE PTR [rax]
  40374f:	00 50 e0             	add    BYTE PTR [rax-0x20],dl
  403752:	ff                   	(bad)  
  403753:	ff 29                	jmp    FWORD PTR [rcx]
  403755:	00 00                	add    BYTE PTR [rax],al
  403757:	00 00                	add    BYTE PTR [rax],al
  403759:	41 0e                	rex.B (bad) 
  40375b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  403761:	64 0c 07             	fs or  al,0x7
  403764:	08 00                	or     BYTE PTR [rax],al
  403766:	00 00                	add    BYTE PTR [rax],al
  403768:	1c 00                	sbb    al,0x0
  40376a:	00 00                	add    BYTE PTR [rax],al
  40376c:	64 02 00             	add    al,BYTE PTR fs:[rax]
  40376f:	00 5a e0             	add    BYTE PTR [rdx-0x20],bl
  403772:	ff                   	(bad)  
  403773:	ff 58 00             	call   FWORD PTR [rax+0x0]
  403776:	00 00                	add    BYTE PTR [rax],al
  403778:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
  40377b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  403781:	02 53 0c             	add    dl,BYTE PTR [rbx+0xc]
  403784:	07                   	(bad)  
  403785:	08 00                	or     BYTE PTR [rax],al
  403787:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  40378a:	00 00                	add    BYTE PTR [rax],al
  40378c:	84 02                	test   BYTE PTR [rdx],al
  40378e:	00 00                	add    BYTE PTR [rax],al
  403790:	92                   	xchg   edx,eax
  403791:	e0 ff                	loopne 403792 <__GNU_EH_FRAME_HDR+0x5f2>
  403793:	ff 2c 00             	jmp    FWORD PTR [rax+rax*1]
  403796:	00 00                	add    BYTE PTR [rax],al
  403798:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
  40379b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  4037a1:	67 0c 07             	addr32 or al,0x7
  4037a4:	08 00                	or     BYTE PTR [rax],al
  4037a6:	00 00                	add    BYTE PTR [rax],al
  4037a8:	1c 00                	sbb    al,0x0
  4037aa:	00 00                	add    BYTE PTR [rax],al
  4037ac:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  4037ad:	02 00                	add    al,BYTE PTR [rax]
  4037af:	00 9e e0 ff ff 30    	add    BYTE PTR [rsi+0x30ffffe0],bl
  4037b5:	00 00                	add    BYTE PTR [rax],al
  4037b7:	00 00                	add    BYTE PTR [rax],al
  4037b9:	41 0e                	rex.B (bad) 
  4037bb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  4037c1:	6b 0c 07 08          	imul   ecx,DWORD PTR [rdi+rax*1],0x8
  4037c5:	00 00                	add    BYTE PTR [rax],al
  4037c7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  4037ca:	00 00                	add    BYTE PTR [rax],al
  4037cc:	c4 02 00 00          	(bad)  
  4037d0:	ae                   	scas   al,BYTE PTR es:[rdi]
  4037d1:	e0 ff                	loopne 4037d2 <__GNU_EH_FRAME_HDR+0x632>
  4037d3:	ff 41 00             	inc    DWORD PTR [rcx+0x0]
  4037d6:	00 00                	add    BYTE PTR [rax],al
  4037d8:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
  4037db:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  4037e1:	7c 0c                	jl     4037ef <__GNU_EH_FRAME_HDR+0x64f>
  4037e3:	07                   	(bad)  
  4037e4:	08 00                	or     BYTE PTR [rax],al
  4037e6:	00 00                	add    BYTE PTR [rax],al
  4037e8:	1c 00                	sbb    al,0x0
  4037ea:	00 00                	add    BYTE PTR [rax],al
  4037ec:	e4 02                	in     al,0x2
  4037ee:	00 00                	add    BYTE PTR [rax],al
  4037f0:	d0 e0                	shl    al,1
  4037f2:	ff                   	(bad)  
  4037f3:	ff 1e                	call   FWORD PTR [rsi]
  4037f5:	00 00                	add    BYTE PTR [rax],al
  4037f7:	00 00                	add    BYTE PTR [rax],al
  4037f9:	41 0e                	rex.B (bad) 
  4037fb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  403801:	59                   	pop    rcx
  403802:	0c 07                	or     al,0x7
  403804:	08 00                	or     BYTE PTR [rax],al
  403806:	00 00                	add    BYTE PTR [rax],al
  403808:	1c 00                	sbb    al,0x0
  40380a:	00 00                	add    BYTE PTR [rax],al
  40380c:	00 00                	add    BYTE PTR [rax],al
  40380e:	00 00                	add    BYTE PTR [rax],al
  403810:	01 7a 50             	add    DWORD PTR [rdx+0x50],edi
  403813:	4c 52                	rex.WR push rdx
  403815:	00 01                	add    BYTE PTR [rcx],al
  403817:	78 10                	js     403829 <__GNU_EH_FRAME_HDR+0x689>
  403819:	07                   	(bad)  
  40381a:	03 30                	add    esi,DWORD PTR [rax]
  40381c:	0c 40                	or     al,0x40
  40381e:	00 03                	add    BYTE PTR [rbx],al
  403820:	1b 0c 07             	sbb    ecx,DWORD PTR [rdi+rax*1]
  403823:	08 90 01 00 00 24    	or     BYTE PTR [rax+0x24000001],dl
  403829:	00 00                	add    BYTE PTR [rax],al
  40382b:	00 24 00             	add    BYTE PTR [rax+rax*1],ah
  40382e:	00 00                	add    BYTE PTR [rax],al
  403830:	66 d5                	data16 (bad) 
  403832:	ff                   	(bad)  
  403833:	ff 12                	call   QWORD PTR [rdx]
  403835:	05 00 00 04 4c       	add    eax,0x4c040000
  40383a:	42                   	rex.X
  40383b:	40 00 41 0e          	add    BYTE PTR [rcx+0xe],al
  40383f:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  403845:	4a 8c 03             	rex.WX mov WORD PTR [rbx],es
  403848:	83 04 03 03          	add    DWORD PTR [rbx+rax*1],0x3
  40384c:	05 0c 07 08 24       	add    eax,0x2408070c
  403851:	00 00                	add    BYTE PTR [rax],al
  403853:	00 4c 00 00          	add    BYTE PTR [rax+rax*1+0x0],cl
  403857:	00 50 da             	add    BYTE PTR [rax-0x26],dl
  40385a:	ff                   	(bad)  
  40385b:	ff 09                	dec    DWORD PTR [rcx]
  40385d:	01 00                	add    DWORD PTR [rax],eax
  40385f:	00 04 6d 42 40 00 41 	add    BYTE PTR [rbp*2+0x41004042],al
  403866:	0e                   	(bad)  
  403867:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  40386d:	45 83 03 02          	rex.RB add DWORD PTR [r11],0x2
  403871:	ff 0c 07             	dec    DWORD PTR [rdi+rax*1]
  403874:	08 00                	or     BYTE PTR [rax],al
  403876:	00 00                	add    BYTE PTR [rax],al
  403878:	24 00                	and    al,0x0
  40387a:	00 00                	add    BYTE PTR [rax],al
  40387c:	74 03                	je     403881 <__GNU_EH_FRAME_HDR+0x6e1>
  40387e:	00 00                	add    BYTE PTR [rax],al
  403880:	5e                   	pop    rsi
  403881:	e0 ff                	loopne 403882 <__GNU_EH_FRAME_HDR+0x6e2>
  403883:	ff 4d 00             	dec    DWORD PTR [rbp+0x0]
  403886:	00 00                	add    BYTE PTR [rax],al
  403888:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
  40388b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  403891:	45 83 03 02          	rex.RB add DWORD PTR [r11],0x2
  403895:	43 0c 07             	rex.XB or al,0x7
  403898:	08 00                	or     BYTE PTR [rax],al
  40389a:	00 00                	add    BYTE PTR [rax],al
  40389c:	00 00                	add    BYTE PTR [rax],al
  40389e:	00 00                	add    BYTE PTR [rax],al
  4038a0:	1c 00                	sbb    al,0x0
  4038a2:	00 00                	add    BYTE PTR [rax],al
  4038a4:	9c                   	pushf  
  4038a5:	03 00                	add    eax,DWORD PTR [rax]
  4038a7:	00 83 e0 ff ff 2c    	add    BYTE PTR [rbx+0x2cffffe0],al
  4038ad:	00 00                	add    BYTE PTR [rax],al
  4038af:	00 00                	add    BYTE PTR [rax],al
  4038b1:	41 0e                	rex.B (bad) 
  4038b3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  4038b9:	67 0c 07             	addr32 or al,0x7
  4038bc:	08 00                	or     BYTE PTR [rax],al
  4038be:	00 00                	add    BYTE PTR [rax],al
  4038c0:	1c 00                	sbb    al,0x0
  4038c2:	00 00                	add    BYTE PTR [rax],al
  4038c4:	bc 03 00 00 90       	mov    esp,0x90000003
  4038c9:	e0 ff                	loopne 4038ca <__GNU_EH_FRAME_HDR+0x72a>
  4038cb:	ff 1b                	call   FWORD PTR [rbx]
  4038cd:	00 00                	add    BYTE PTR [rax],al
  4038cf:	00 00                	add    BYTE PTR [rax],al
  4038d1:	41 0e                	rex.B (bad) 
  4038d3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  4038d9:	56                   	push   rsi
  4038da:	0c 07                	or     al,0x7
  4038dc:	08 00                	or     BYTE PTR [rax],al
  4038de:	00 00                	add    BYTE PTR [rax],al
  4038e0:	1c 00                	sbb    al,0x0
  4038e2:	00 00                	add    BYTE PTR [rax],al
  4038e4:	dc 03                	fadd   QWORD PTR [rbx]
  4038e6:	00 00                	add    BYTE PTR [rax],al
  4038e8:	8c e0                	mov    eax,fs
  4038ea:	ff                   	(bad)  
  4038eb:	ff 1b                	call   FWORD PTR [rbx]
  4038ed:	00 00                	add    BYTE PTR [rax],al
  4038ef:	00 00                	add    BYTE PTR [rax],al
  4038f1:	41 0e                	rex.B (bad) 
  4038f3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  4038f9:	56                   	push   rsi
  4038fa:	0c 07                	or     al,0x7
  4038fc:	08 00                	or     BYTE PTR [rax],al
  4038fe:	00 00                	add    BYTE PTR [rax],al
  403900:	24 00                	and    al,0x0
  403902:	00 00                	add    BYTE PTR [rax],al
  403904:	fc                   	cld    
  403905:	00 00                	add    BYTE PTR [rax],al
  403907:	00 88 e0 ff ff a1    	add    BYTE PTR [rax-0x5e000020],cl
  40390d:	00 00                	add    BYTE PTR [rax],al
  40390f:	00 04 81             	add    BYTE PTR [rcx+rax*4],al
  403912:	42                   	rex.X
  403913:	40 00 41 0e          	add    BYTE PTR [rcx+0xe],al
  403917:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  40391d:	45 83 03 02          	rex.RB add DWORD PTR [r11],0x2
  403921:	97                   	xchg   edi,eax
  403922:	0c 07                	or     al,0x7
  403924:	08 00                	or     BYTE PTR [rax],al
  403926:	00 00                	add    BYTE PTR [rax],al
  403928:	1c 00                	sbb    al,0x0
  40392a:	00 00                	add    BYTE PTR [rax],al
  40392c:	24 04                	and    al,0x4
  40392e:	00 00                	add    BYTE PTR [rax],al
  403930:	02 e1                	add    ah,cl
  403932:	ff                   	(bad)  
  403933:	ff 1b                	call   FWORD PTR [rbx]
  403935:	00 00                	add    BYTE PTR [rax],al
  403937:	00 00                	add    BYTE PTR [rax],al
  403939:	41 0e                	rex.B (bad) 
  40393b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  403941:	56                   	push   rsi
  403942:	0c 07                	or     al,0x7
  403944:	08 00                	or     BYTE PTR [rax],al
  403946:	00 00                	add    BYTE PTR [rax],al
  403948:	24 00                	and    al,0x0
  40394a:	00 00                	add    BYTE PTR [rax],al
  40394c:	44 01 00             	add    DWORD PTR [rax],r8d
  40394f:	00 fe                	add    dh,bh
  403951:	e0 ff                	loopne 403952 <__GNU_EH_FRAME_HDR+0x7b2>
  403953:	ff 1b                	call   FWORD PTR [rbx]
  403955:	00 00                	add    BYTE PTR [rax],al
  403957:	00 04 93             	add    BYTE PTR [rbx+rdx*4],al
  40395a:	42                   	rex.X
  40395b:	40 00 41 0e          	add    BYTE PTR [rcx+0xe],al
  40395f:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  403965:	56                   	push   rsi
  403966:	0c 07                	or     al,0x7
  403968:	08 00                	or     BYTE PTR [rax],al
  40396a:	00 00                	add    BYTE PTR [rax],al
  40396c:	00 00                	add    BYTE PTR [rax],al
  40396e:	00 00                	add    BYTE PTR [rax],al
  403970:	1c 00                	sbb    al,0x0
  403972:	00 00                	add    BYTE PTR [rax],al
  403974:	6c                   	ins    BYTE PTR es:[rdi],dx
  403975:	04 00                	add    al,0x0
  403977:	00 f2                	add    dl,dh
  403979:	e0 ff                	loopne 40397a <__GNU_EH_FRAME_HDR+0x7da>
  40397b:	ff 4c 00 00          	dec    DWORD PTR [rax+rax*1+0x0]
  40397f:	00 00                	add    BYTE PTR [rax],al
  403981:	41 0e                	rex.B (bad) 
  403983:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  403989:	02 47 0c             	add    al,BYTE PTR [rdi+0xc]
  40398c:	07                   	(bad)  
  40398d:	08 00                	or     BYTE PTR [rax],al
  40398f:	00 24 00             	add    BYTE PTR [rax+rax*1],ah
  403992:	00 00                	add    BYTE PTR [rax],al
  403994:	8c 04 00             	mov    WORD PTR [rax+rax*1],es
  403997:	00 1e                	add    BYTE PTR [rsi],bl
  403999:	e1 ff                	loope  40399a <__GNU_EH_FRAME_HDR+0x7fa>
  40399b:	ff b7 00 00 00 00    	push   QWORD PTR [rdi+0x0]
  4039a1:	41 0e                	rex.B (bad) 
  4039a3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  4039a9:	45 83 03 02          	rex.RB add DWORD PTR [r11],0x2
  4039ad:	ad                   	lods   eax,DWORD PTR ds:[rsi]
  4039ae:	0c 07                	or     al,0x7
  4039b0:	08 00                	or     BYTE PTR [rax],al
  4039b2:	00 00                	add    BYTE PTR [rax],al
  4039b4:	00 00                	add    BYTE PTR [rax],al
  4039b6:	00 00                	add    BYTE PTR [rax],al
  4039b8:	1c 00                	sbb    al,0x0
  4039ba:	00 00                	add    BYTE PTR [rax],al
  4039bc:	b4 04                	mov    ah,0x4
  4039be:	00 00                	add    BYTE PTR [rax],al
  4039c0:	ae                   	scas   al,BYTE PTR es:[rdi]
  4039c1:	e1 ff                	loope  4039c2 <__GNU_EH_FRAME_HDR+0x822>
  4039c3:	ff 55 00             	call   QWORD PTR [rbp+0x0]
  4039c6:	00 00                	add    BYTE PTR [rax],al
  4039c8:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
  4039cb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  4039d1:	02 50 0c             	add    dl,BYTE PTR [rax+0xc]
  4039d4:	07                   	(bad)  
  4039d5:	08 00                	or     BYTE PTR [rax],al
  4039d7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  4039da:	00 00                	add    BYTE PTR [rax],al
  4039dc:	d4                   	(bad)  
  4039dd:	04 00                	add    al,0x0
  4039df:	00 e3                	add    bl,ah
  4039e1:	e1 ff                	loope  4039e2 <__GNU_EH_FRAME_HDR+0x842>
  4039e3:	ff 0e                	dec    DWORD PTR [rsi]
  4039e5:	00 00                	add    BYTE PTR [rax],al
  4039e7:	00 00                	add    BYTE PTR [rax],al
  4039e9:	41 0e                	rex.B (bad) 
  4039eb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  4039f1:	49 0c 07             	rex.WB or al,0x7
  4039f4:	08 00                	or     BYTE PTR [rax],al
  4039f6:	00 00                	add    BYTE PTR [rax],al
  4039f8:	1c 00                	sbb    al,0x0
  4039fa:	00 00                	add    BYTE PTR [rax],al
  4039fc:	f4                   	hlt    
  4039fd:	04 00                	add    al,0x0
  4039ff:	00 d1                	add    cl,dl
  403a01:	e1 ff                	loope  403a02 <__GNU_EH_FRAME_HDR+0x862>
  403a03:	ff                   	(bad)  
  403a04:	3a 00                	cmp    al,BYTE PTR [rax]
  403a06:	00 00                	add    BYTE PTR [rax],al
  403a08:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
  403a0b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  403a11:	75 0c                	jne    403a1f <__GNU_EH_FRAME_HDR+0x87f>
  403a13:	07                   	(bad)  
  403a14:	08 00                	or     BYTE PTR [rax],al
  403a16:	00 00                	add    BYTE PTR [rax],al
  403a18:	1c 00                	sbb    al,0x0
  403a1a:	00 00                	add    BYTE PTR [rax],al
  403a1c:	14 05                	adc    al,0x5
  403a1e:	00 00                	add    BYTE PTR [rax],al
  403a20:	ec                   	in     al,dx
  403a21:	e1 ff                	loope  403a22 <__GNU_EH_FRAME_HDR+0x882>
  403a23:	ff 0b                	dec    DWORD PTR [rbx]
  403a25:	00 00                	add    BYTE PTR [rax],al
  403a27:	00 00                	add    BYTE PTR [rax],al
  403a29:	41 0e                	rex.B (bad) 
  403a2b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  403a31:	46 0c 07             	rex.RX or al,0x7
  403a34:	08 00                	or     BYTE PTR [rax],al
  403a36:	00 00                	add    BYTE PTR [rax],al
  403a38:	1c 00                	sbb    al,0x0
  403a3a:	00 00                	add    BYTE PTR [rax],al
  403a3c:	34 05                	xor    al,0x5
  403a3e:	00 00                	add    BYTE PTR [rax],al
  403a40:	d8 e1                	fsub   st,st(1)
  403a42:	ff                   	(bad)  
  403a43:	ff 0b                	dec    DWORD PTR [rbx]
  403a45:	00 00                	add    BYTE PTR [rax],al
  403a47:	00 00                	add    BYTE PTR [rax],al
  403a49:	41 0e                	rex.B (bad) 
  403a4b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  403a51:	46 0c 07             	rex.RX or al,0x7
  403a54:	08 00                	or     BYTE PTR [rax],al
  403a56:	00 00                	add    BYTE PTR [rax],al
  403a58:	1c 00                	sbb    al,0x0
  403a5a:	00 00                	add    BYTE PTR [rax],al
  403a5c:	54                   	push   rsp
  403a5d:	05 00 00 c4 e1       	add    eax,0xe1c40000
  403a62:	ff                   	(bad)  
  403a63:	ff 1b                	call   FWORD PTR [rbx]
  403a65:	00 00                	add    BYTE PTR [rax],al
  403a67:	00 00                	add    BYTE PTR [rax],al
  403a69:	41 0e                	rex.B (bad) 
  403a6b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  403a71:	56                   	push   rsi
  403a72:	0c 07                	or     al,0x7
  403a74:	08 00                	or     BYTE PTR [rax],al
  403a76:	00 00                	add    BYTE PTR [rax],al
  403a78:	1c 00                	sbb    al,0x0
  403a7a:	00 00                	add    BYTE PTR [rax],al
  403a7c:	74 05                	je     403a83 <__GNU_EH_FRAME_HDR+0x8e3>
  403a7e:	00 00                	add    BYTE PTR [rax],al
  403a80:	c0 e1 ff             	shl    cl,0xff
  403a83:	ff 45 00             	inc    DWORD PTR [rbp+0x0]
  403a86:	00 00                	add    BYTE PTR [rax],al
  403a88:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
  403a8b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  403a91:	02 40 0c             	add    al,BYTE PTR [rax+0xc]
  403a94:	07                   	(bad)  
  403a95:	08 00                	or     BYTE PTR [rax],al
  403a97:	00 24 00             	add    BYTE PTR [rax+rax*1],ah
  403a9a:	00 00                	add    BYTE PTR [rax],al
  403a9c:	94                   	xchg   esp,eax
  403a9d:	02 00                	add    al,BYTE PTR [rax]
  403a9f:	00 e6                	add    dh,ah
  403aa1:	e1 ff                	loope  403aa2 <__GNU_EH_FRAME_HDR+0x902>
  403aa3:	ff 27                	jmp    QWORD PTR [rdi]
  403aa5:	00 00                	add    BYTE PTR [rax],al
  403aa7:	00 04 97             	add    BYTE PTR [rdi+rdx*4],al
  403aaa:	42                   	rex.X
  403aab:	40 00 41 0e          	add    BYTE PTR [rcx+0xe],al
  403aaf:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  403ab5:	62                   	(bad)  {k7}
  403ab6:	0c 07                	or     al,0x7
  403ab8:	08 00                	or     BYTE PTR [rax],al
  403aba:	00 00                	add    BYTE PTR [rax],al
  403abc:	00 00                	add    BYTE PTR [rax],al
  403abe:	00 00                	add    BYTE PTR [rax],al
  403ac0:	1c 00                	sbb    al,0x0
  403ac2:	00 00                	add    BYTE PTR [rax],al
  403ac4:	bc 05 00 00 e6       	mov    esp,0xe6000005
  403ac9:	e1 ff                	loope  403aca <__GNU_EH_FRAME_HDR+0x92a>
  403acb:	ff b4 00 00 00 00 41 	push   QWORD PTR [rax+rax*1+0x41000000]
  403ad2:	0e                   	(bad)  
  403ad3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  403ad9:	02 af 0c 07 08 00    	add    ch,BYTE PTR [rdi+0x8070c]
  403adf:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  403ae2:	00 00                	add    BYTE PTR [rax],al
  403ae4:	dc 05 00 00 7a e2    	fadd   QWORD PTR [rip+0xffffffffe27a0000]        # ffffffffe2ba3aea <_end+0xffffffffe259e8f2>
  403aea:	ff                   	(bad)  
  403aeb:	ff                   	(bad)  
  403aec:	3a 00                	cmp    al,BYTE PTR [rax]
  403aee:	00 00                	add    BYTE PTR [rax],al
  403af0:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
  403af3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  403af9:	75 0c                	jne    403b07 <__GNU_EH_FRAME_HDR+0x967>
  403afb:	07                   	(bad)  
  403afc:	08 00                	or     BYTE PTR [rax],al
  403afe:	00 00                	add    BYTE PTR [rax],al
  403b00:	1c 00                	sbb    al,0x0
  403b02:	00 00                	add    BYTE PTR [rax],al
  403b04:	fc                   	cld    
  403b05:	05 00 00 94 e2       	add    eax,0xe2940000
  403b0a:	ff                   	(bad)  
  403b0b:	ff 1b                	call   FWORD PTR [rbx]
  403b0d:	00 00                	add    BYTE PTR [rax],al
  403b0f:	00 00                	add    BYTE PTR [rax],al
  403b11:	41 0e                	rex.B (bad) 
  403b13:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  403b19:	56                   	push   rsi
  403b1a:	0c 07                	or     al,0x7
  403b1c:	08 00                	or     BYTE PTR [rax],al
  403b1e:	00 00                	add    BYTE PTR [rax],al
  403b20:	24 00                	and    al,0x0
  403b22:	00 00                	add    BYTE PTR [rax],al
  403b24:	1c 06                	sbb    al,0x6
  403b26:	00 00                	add    BYTE PTR [rax],al
  403b28:	90                   	nop
  403b29:	e2 ff                	loop   403b2a <__GNU_EH_FRAME_HDR+0x98a>
  403b2b:	ff 1c 03             	call   FWORD PTR [rbx+rax*1]
  403b2e:	00 00                	add    BYTE PTR [rax],al
  403b30:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
  403b33:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  403b39:	48 83 03 03          	add    QWORD PTR [rbx],0x3
  403b3d:	0f 03 0c 07          	lsl    ecx,WORD PTR [rdi+rax*1]
  403b41:	08 00                	or     BYTE PTR [rax],al
  403b43:	00 00                	add    BYTE PTR [rax],al
  403b45:	00 00                	add    BYTE PTR [rax],al
  403b47:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  403b4a:	00 00                	add    BYTE PTR [rax],al
  403b4c:	44 06                	rex.R (bad) 
  403b4e:	00 00                	add    BYTE PTR [rax],al
  403b50:	84 e5                	test   ch,ah
  403b52:	ff                   	(bad)  
  403b53:	ff 2f                	jmp    FWORD PTR [rdi]
  403b55:	00 00                	add    BYTE PTR [rax],al
  403b57:	00 00                	add    BYTE PTR [rax],al
  403b59:	41 0e                	rex.B (bad) 
  403b5b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  403b61:	6a 0c                	push   0xc
  403b63:	07                   	(bad)  
  403b64:	08 00                	or     BYTE PTR [rax],al
  403b66:	00 00                	add    BYTE PTR [rax],al
  403b68:	1c 00                	sbb    al,0x0
  403b6a:	00 00                	add    BYTE PTR [rax],al
  403b6c:	64 06                	fs (bad) 
  403b6e:	00 00                	add    BYTE PTR [rax],al
  403b70:	94                   	xchg   esp,eax
  403b71:	e5 ff                	in     eax,0xff
  403b73:	ff 46 00             	inc    DWORD PTR [rsi+0x0]
  403b76:	00 00                	add    BYTE PTR [rax],al
  403b78:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
  403b7b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  403b81:	02 41 0c             	add    al,BYTE PTR [rcx+0xc]
  403b84:	07                   	(bad)  
  403b85:	08 00                	or     BYTE PTR [rax],al
  403b87:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  403b8a:	00 00                	add    BYTE PTR [rax],al
  403b8c:	84 06                	test   BYTE PTR [rsi],al
  403b8e:	00 00                	add    BYTE PTR [rax],al
  403b90:	ba e5 ff ff 42       	mov    edx,0x42ffffe5
  403b95:	00 00                	add    BYTE PTR [rax],al
  403b97:	00 00                	add    BYTE PTR [rax],al
  403b99:	41 0e                	rex.B (bad) 
  403b9b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  403ba1:	7d 0c                	jge    403baf <__GNU_EH_FRAME_HDR+0xa0f>
  403ba3:	07                   	(bad)  
  403ba4:	08 00                	or     BYTE PTR [rax],al
  403ba6:	00 00                	add    BYTE PTR [rax],al
  403ba8:	1c 00                	sbb    al,0x0
  403baa:	00 00                	add    BYTE PTR [rax],al
  403bac:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  403bad:	06                   	(bad)  
  403bae:	00 00                	add    BYTE PTR [rax],al
  403bb0:	dc e5                	fsub   st(5),st
  403bb2:	ff                   	(bad)  
  403bb3:	ff 1f                	call   FWORD PTR [rdi]
  403bb5:	00 00                	add    BYTE PTR [rax],al
  403bb7:	00 00                	add    BYTE PTR [rax],al
  403bb9:	41 0e                	rex.B (bad) 
  403bbb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  403bc1:	5a                   	pop    rdx
  403bc2:	0c 07                	or     al,0x7
  403bc4:	08 00                	or     BYTE PTR [rax],al
  403bc6:	00 00                	add    BYTE PTR [rax],al
  403bc8:	1c 00                	sbb    al,0x0
  403bca:	00 00                	add    BYTE PTR [rax],al
  403bcc:	c4                   	(bad)  
  403bcd:	06                   	(bad)  
  403bce:	00 00                	add    BYTE PTR [rax],al
  403bd0:	dc e5                	fsub   st(5),st
  403bd2:	ff                   	(bad)  
  403bd3:	ff 1b                	call   FWORD PTR [rbx]
  403bd5:	00 00                	add    BYTE PTR [rax],al
  403bd7:	00 00                	add    BYTE PTR [rax],al
  403bd9:	41 0e                	rex.B (bad) 
  403bdb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  403be1:	56                   	push   rsi
  403be2:	0c 07                	or     al,0x7
  403be4:	08 00                	or     BYTE PTR [rax],al
  403be6:	00 00                	add    BYTE PTR [rax],al
  403be8:	1c 00                	sbb    al,0x0
  403bea:	00 00                	add    BYTE PTR [rax],al
  403bec:	e4 06                	in     al,0x6
  403bee:	00 00                	add    BYTE PTR [rax],al
  403bf0:	d7                   	xlat   BYTE PTR ds:[rbx]
  403bf1:	e5 ff                	in     eax,0xff
  403bf3:	ff 0e                	dec    DWORD PTR [rsi]
  403bf5:	00 00                	add    BYTE PTR [rax],al
  403bf7:	00 00                	add    BYTE PTR [rax],al
  403bf9:	41 0e                	rex.B (bad) 
  403bfb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  403c01:	49 0c 07             	rex.WB or al,0x7
  403c04:	08 00                	or     BYTE PTR [rax],al
  403c06:	00 00                	add    BYTE PTR [rax],al
  403c08:	1c 00                	sbb    al,0x0
  403c0a:	00 00                	add    BYTE PTR [rax],al
  403c0c:	04 07                	add    al,0x7
  403c0e:	00 00                	add    BYTE PTR [rax],al
  403c10:	c6                   	(bad)  
  403c11:	e5 ff                	in     eax,0xff
  403c13:	ff 59 00             	call   FWORD PTR [rcx+0x0]
  403c16:	00 00                	add    BYTE PTR [rax],al
  403c18:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
  403c1b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  403c21:	02 54 0c 07          	add    dl,BYTE PTR [rsp+rcx*1+0x7]
  403c25:	08 00                	or     BYTE PTR [rax],al
  403c27:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  403c2a:	00 00                	add    BYTE PTR [rax],al
  403c2c:	24 07                	and    al,0x7
  403c2e:	00 00                	add    BYTE PTR [rax],al
  403c30:	00 e6                	add    dh,ah
  403c32:	ff                   	(bad)  
  403c33:	ff 69 00             	jmp    FWORD PTR [rcx+0x0]
  403c36:	00 00                	add    BYTE PTR [rax],al
  403c38:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
  403c3b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  403c41:	02 64 0c 07          	add    ah,BYTE PTR [rsp+rcx*1+0x7]
  403c45:	08 00                	or     BYTE PTR [rax],al
  403c47:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  403c4a:	00 00                	add    BYTE PTR [rax],al
  403c4c:	44 07                	rex.R (bad) 
  403c4e:	00 00                	add    BYTE PTR [rax],al
  403c50:	4a e6 ff             	rex.WX out 0xff,al
  403c53:	ff 30                	push   QWORD PTR [rax]
  403c55:	00 00                	add    BYTE PTR [rax],al
  403c57:	00 00                	add    BYTE PTR [rax],al
  403c59:	41 0e                	rex.B (bad) 
  403c5b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  403c61:	6b 0c 07 08          	imul   ecx,DWORD PTR [rdi+rax*1],0x8
  403c65:	00 00                	add    BYTE PTR [rax],al
  403c67:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  403c6a:	00 00                	add    BYTE PTR [rax],al
  403c6c:	64 07                	fs (bad) 
  403c6e:	00 00                	add    BYTE PTR [rax],al
  403c70:	5a                   	pop    rdx
  403c71:	e6 ff                	out    0xff,al
  403c73:	ff 16                	call   QWORD PTR [rsi]
  403c75:	00 00                	add    BYTE PTR [rax],al
  403c77:	00 00                	add    BYTE PTR [rax],al
  403c79:	41 0e                	rex.B (bad) 
  403c7b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  403c81:	51                   	push   rcx
  403c82:	0c 07                	or     al,0x7
  403c84:	08 00                	or     BYTE PTR [rax],al
  403c86:	00 00                	add    BYTE PTR [rax],al
  403c88:	1c 00                	sbb    al,0x0
  403c8a:	00 00                	add    BYTE PTR [rax],al
  403c8c:	84 07                	test   BYTE PTR [rdi],al
  403c8e:	00 00                	add    BYTE PTR [rax],al
  403c90:	50                   	push   rax
  403c91:	e6 ff                	out    0xff,al
  403c93:	ff 0e                	dec    DWORD PTR [rsi]
  403c95:	00 00                	add    BYTE PTR [rax],al
  403c97:	00 00                	add    BYTE PTR [rax],al
  403c99:	41 0e                	rex.B (bad) 
  403c9b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  403ca1:	49 0c 07             	rex.WB or al,0x7
  403ca4:	08 00                	or     BYTE PTR [rax],al
  403ca6:	00 00                	add    BYTE PTR [rax],al
  403ca8:	1c 00                	sbb    al,0x0
  403caa:	00 00                	add    BYTE PTR [rax],al
  403cac:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  403cad:	07                   	(bad)  
  403cae:	00 00                	add    BYTE PTR [rax],al
  403cb0:	3e e6 ff             	ds out 0xff,al
  403cb3:	ff 43 00             	inc    DWORD PTR [rbx+0x0]
  403cb6:	00 00                	add    BYTE PTR [rax],al
  403cb8:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
  403cbb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  403cc1:	7e 0c                	jle    403ccf <__GNU_EH_FRAME_HDR+0xb2f>
  403cc3:	07                   	(bad)  
  403cc4:	08 00                	or     BYTE PTR [rax],al
  403cc6:	00 00                	add    BYTE PTR [rax],al
  403cc8:	1c 00                	sbb    al,0x0
  403cca:	00 00                	add    BYTE PTR [rax],al
  403ccc:	c4                   	(bad)  
  403ccd:	07                   	(bad)  
  403cce:	00 00                	add    BYTE PTR [rax],al
  403cd0:	61                   	(bad)  
  403cd1:	e6 ff                	out    0xff,al
  403cd3:	ff af 00 00 00 00    	jmp    FWORD PTR [rdi+0x0]
  403cd9:	41 0e                	rex.B (bad) 
  403cdb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  403ce1:	02 aa 0c 07 08 00    	add    ch,BYTE PTR [rdx+0x8070c]
  403ce7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  403cea:	00 00                	add    BYTE PTR [rax],al
  403cec:	e4 07                	in     al,0x7
  403cee:	00 00                	add    BYTE PTR [rax],al
  403cf0:	f0 e6 ff             	lock out 0xff,al
  403cf3:	ff 2b                	jmp    FWORD PTR [rbx]
  403cf5:	00 00                	add    BYTE PTR [rax],al
  403cf7:	00 00                	add    BYTE PTR [rax],al
  403cf9:	41 0e                	rex.B (bad) 
  403cfb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  403d01:	66 0c 07             	data16 or al,0x7
  403d04:	08 00                	or     BYTE PTR [rax],al
  403d06:	00 00                	add    BYTE PTR [rax],al
  403d08:	24 00                	and    al,0x0
  403d0a:	00 00                	add    BYTE PTR [rax],al
  403d0c:	04 08                	add    al,0x8
  403d0e:	00 00                	add    BYTE PTR [rax],al
  403d10:	fc                   	cld    
  403d11:	e6 ff                	out    0xff,al
  403d13:	ff c9                	dec    ecx
  403d15:	00 00                	add    BYTE PTR [rax],al
  403d17:	00 00                	add    BYTE PTR [rax],al
  403d19:	41 0e                	rex.B (bad) 
  403d1b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  403d21:	45 83 03 02          	rex.RB add DWORD PTR [r11],0x2
  403d25:	bf 0c 07 08 00       	mov    edi,0x8070c
  403d2a:	00 00                	add    BYTE PTR [rax],al
  403d2c:	00 00                	add    BYTE PTR [rax],al
  403d2e:	00 00                	add    BYTE PTR [rax],al
  403d30:	1c 00                	sbb    al,0x0
  403d32:	00 00                	add    BYTE PTR [rax],al
  403d34:	2c 08                	sub    al,0x8
  403d36:	00 00                	add    BYTE PTR [rax],al
  403d38:	9e                   	sahf   
  403d39:	e7 ff                	out    0xff,eax
  403d3b:	ff b4 00 00 00 00 41 	push   QWORD PTR [rax+rax*1+0x41000000]
  403d42:	0e                   	(bad)  
  403d43:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  403d49:	02 af 0c 07 08 00    	add    ch,BYTE PTR [rdi+0x8070c]
  403d4f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  403d52:	00 00                	add    BYTE PTR [rax],al
  403d54:	4c 08 00             	rex.WR or BYTE PTR [rax],r8b
  403d57:	00 32                	add    BYTE PTR [rdx],dh
  403d59:	e8 ff ff 2e 00       	call   6f3d5d <_end+0xeeb65>
  403d5e:	00 00                	add    BYTE PTR [rax],al
  403d60:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
  403d63:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  403d69:	69 0c 07 08 00 00 00 	imul   ecx,DWORD PTR [rdi+rax*1],0x8
  403d70:	1c 00                	sbb    al,0x0
  403d72:	00 00                	add    BYTE PTR [rax],al
  403d74:	6c                   	ins    BYTE PTR es:[rdi],dx
  403d75:	08 00                	or     BYTE PTR [rax],al
  403d77:	00 40 e8             	add    BYTE PTR [rax-0x18],al
  403d7a:	ff                   	(bad)  
  403d7b:	ff af 00 00 00 00    	jmp    FWORD PTR [rdi+0x0]
  403d81:	41 0e                	rex.B (bad) 
  403d83:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  403d89:	02 aa 0c 07 08 00    	add    ch,BYTE PTR [rdx+0x8070c]
  403d8f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  403d92:	00 00                	add    BYTE PTR [rax],al
  403d94:	8c 08                	mov    WORD PTR [rax],cs
  403d96:	00 00                	add    BYTE PTR [rax],al
  403d98:	d0 e8                	shr    al,1
  403d9a:	ff                   	(bad)  
  403d9b:	ff 0b                	dec    DWORD PTR [rbx]
  403d9d:	00 00                	add    BYTE PTR [rax],al
  403d9f:	00 00                	add    BYTE PTR [rax],al
  403da1:	41 0e                	rex.B (bad) 
  403da3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  403da9:	46 0c 07             	rex.RX or al,0x7
  403dac:	08 00                	or     BYTE PTR [rax],al
  403dae:	00 00                	add    BYTE PTR [rax],al
  403db0:	1c 00                	sbb    al,0x0
  403db2:	00 00                	add    BYTE PTR [rax],al
  403db4:	ac                   	lods   al,BYTE PTR ds:[rsi]
  403db5:	08 00                	or     BYTE PTR [rax],al
  403db7:	00 bc e8 ff ff 0b 00 	add    BYTE PTR [rax+rbp*8+0xbffff],bh
  403dbe:	00 00                	add    BYTE PTR [rax],al
  403dc0:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
  403dc3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  403dc9:	46 0c 07             	rex.RX or al,0x7
  403dcc:	08 00                	or     BYTE PTR [rax],al
  403dce:	00 00                	add    BYTE PTR [rax],al
  403dd0:	1c 00                	sbb    al,0x0
  403dd2:	00 00                	add    BYTE PTR [rax],al
  403dd4:	cc                   	int3   
  403dd5:	08 00                	or     BYTE PTR [rax],al
  403dd7:	00 a8 e8 ff ff 26    	add    BYTE PTR [rax+0x26ffffe8],ch
  403ddd:	00 00                	add    BYTE PTR [rax],al
  403ddf:	00 00                	add    BYTE PTR [rax],al
  403de1:	41 0e                	rex.B (bad) 
  403de3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  403de9:	61                   	(bad)  
  403dea:	0c 07                	or     al,0x7
  403dec:	08 00                	or     BYTE PTR [rax],al
  403dee:	00 00                	add    BYTE PTR [rax],al
  403df0:	1c 00                	sbb    al,0x0
  403df2:	00 00                	add    BYTE PTR [rax],al
  403df4:	ec                   	in     al,dx
  403df5:	08 00                	or     BYTE PTR [rax],al
  403df7:	00 ae e8 ff ff 2e    	add    BYTE PTR [rsi+0x2effffe8],ch
  403dfd:	00 00                	add    BYTE PTR [rax],al
  403dff:	00 00                	add    BYTE PTR [rax],al
  403e01:	41 0e                	rex.B (bad) 
  403e03:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  403e09:	69 0c 07 08 00 00 00 	imul   ecx,DWORD PTR [rdi+rax*1],0x8
  403e10:	1c 00                	sbb    al,0x0
  403e12:	00 00                	add    BYTE PTR [rax],al
  403e14:	0c 09                	or     al,0x9
  403e16:	00 00                	add    BYTE PTR [rax],al
  403e18:	bc e8 ff ff 2a       	mov    esp,0x2affffe8
  403e1d:	00 00                	add    BYTE PTR [rax],al
  403e1f:	00 00                	add    BYTE PTR [rax],al
  403e21:	41 0e                	rex.B (bad) 
  403e23:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  403e29:	65 0c 07             	gs or  al,0x7
  403e2c:	08 00                	or     BYTE PTR [rax],al
  403e2e:	00 00                	add    BYTE PTR [rax],al
  403e30:	1c 00                	sbb    al,0x0
  403e32:	00 00                	add    BYTE PTR [rax],al
  403e34:	2c 09                	sub    al,0x9
  403e36:	00 00                	add    BYTE PTR [rax],al
  403e38:	c6                   	(bad)  
  403e39:	e8 ff ff 1b 00       	call   5c3e3d <__FRAME_END__+0x1bfbf5>
  403e3e:	00 00                	add    BYTE PTR [rax],al
  403e40:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
  403e43:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  403e49:	56                   	push   rsi
  403e4a:	0c 07                	or     al,0x7
  403e4c:	08 00                	or     BYTE PTR [rax],al
  403e4e:	00 00                	add    BYTE PTR [rax],al
  403e50:	1c 00                	sbb    al,0x0
  403e52:	00 00                	add    BYTE PTR [rax],al
  403e54:	4c 09 00             	or     QWORD PTR [rax],r8
  403e57:	00 c1                	add    cl,al
  403e59:	e8 ff ff 35 00       	call   763e5d <_end+0x15ec65>
  403e5e:	00 00                	add    BYTE PTR [rax],al
  403e60:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
  403e63:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  403e69:	70 0c                	jo     403e77 <__GNU_EH_FRAME_HDR+0xcd7>
  403e6b:	07                   	(bad)  
  403e6c:	08 00                	or     BYTE PTR [rax],al
  403e6e:	00 00                	add    BYTE PTR [rax],al
  403e70:	1c 00                	sbb    al,0x0
  403e72:	00 00                	add    BYTE PTR [rax],al
  403e74:	6c                   	ins    BYTE PTR es:[rdi],dx
  403e75:	09 00                	or     DWORD PTR [rax],eax
  403e77:	00 d6                	add    dh,dl
  403e79:	e8 ff ff d0 00       	call   1113e7d <_end+0xb0ec85>
  403e7e:	00 00                	add    BYTE PTR [rax],al
  403e80:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
  403e83:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  403e89:	02 cb                	add    cl,bl
  403e8b:	0c 07                	or     al,0x7
  403e8d:	08 00                	or     BYTE PTR [rax],al
  403e8f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  403e92:	00 00                	add    BYTE PTR [rax],al
  403e94:	8c 09                	mov    WORD PTR [rcx],cs
  403e96:	00 00                	add    BYTE PTR [rax],al
  403e98:	86 e9                	xchg   cl,ch
  403e9a:	ff                   	(bad)  
  403e9b:	ff 58 00             	call   FWORD PTR [rax+0x0]
  403e9e:	00 00                	add    BYTE PTR [rax],al
  403ea0:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
  403ea3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  403ea9:	02 53 0c             	add    dl,BYTE PTR [rbx+0xc]
  403eac:	07                   	(bad)  
  403ead:	08 00                	or     BYTE PTR [rax],al
  403eaf:	00 24 00             	add    BYTE PTR [rax+rax*1],ah
  403eb2:	00 00                	add    BYTE PTR [rax],al
  403eb4:	ac                   	lods   al,BYTE PTR ds:[rsi]
  403eb5:	09 00                	or     DWORD PTR [rax],eax
  403eb7:	00 be e9 ff ff 4c    	add    BYTE PTR [rsi+0x4cffffe9],bh
  403ebd:	00 00                	add    BYTE PTR [rax],al
  403ebf:	00 00                	add    BYTE PTR [rax],al
  403ec1:	41 0e                	rex.B (bad) 
  403ec3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  403ec9:	45 83 03 02          	rex.RB add DWORD PTR [r11],0x2
  403ecd:	42 0c 07             	rex.X or al,0x7
  403ed0:	08 00                	or     BYTE PTR [rax],al
  403ed2:	00 00                	add    BYTE PTR [rax],al
  403ed4:	00 00                	add    BYTE PTR [rax],al
  403ed6:	00 00                	add    BYTE PTR [rax],al
  403ed8:	1c 00                	sbb    al,0x0
  403eda:	00 00                	add    BYTE PTR [rax],al
  403edc:	d4                   	(bad)  
  403edd:	09 00                	or     DWORD PTR [rax],eax
  403edf:	00 e2                	add    dl,ah
  403ee1:	e9 ff ff af 00       	jmp    f03ee5 <_end+0x8feced>
  403ee6:	00 00                	add    BYTE PTR [rax],al
  403ee8:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
  403eeb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  403ef1:	02 aa 0c 07 08 00    	add    ch,BYTE PTR [rdx+0x8070c]
  403ef7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  403efa:	00 00                	add    BYTE PTR [rax],al
  403efc:	f4                   	hlt    
  403efd:	09 00                	or     DWORD PTR [rax],eax
  403eff:	00 71 ea             	add    BYTE PTR [rcx-0x16],dh
  403f02:	ff                   	(bad)  
  403f03:	ff d0                	call   rax
  403f05:	00 00                	add    BYTE PTR [rax],al
  403f07:	00 00                	add    BYTE PTR [rax],al
  403f09:	41 0e                	rex.B (bad) 
  403f0b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  403f11:	02 cb                	add    cl,bl
  403f13:	0c 07                	or     al,0x7
  403f15:	08 00                	or     BYTE PTR [rax],al
  403f17:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  403f1a:	00 00                	add    BYTE PTR [rax],al
  403f1c:	14 0a                	adc    al,0xa
  403f1e:	00 00                	add    BYTE PTR [rax],al
  403f20:	22 eb                	and    ch,bl
  403f22:	ff                   	(bad)  
  403f23:	ff 0f                	dec    DWORD PTR [rdi]
  403f25:	00 00                	add    BYTE PTR [rax],al
  403f27:	00 00                	add    BYTE PTR [rax],al
  403f29:	41 0e                	rex.B (bad) 
  403f2b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  403f31:	4a 0c 07             	rex.WX or al,0x7
  403f34:	08 00                	or     BYTE PTR [rax],al
  403f36:	00 00                	add    BYTE PTR [rax],al
  403f38:	1c 00                	sbb    al,0x0
  403f3a:	00 00                	add    BYTE PTR [rax],al
  403f3c:	34 0a                	xor    al,0xa
  403f3e:	00 00                	add    BYTE PTR [rax],al
  403f40:	12 eb                	adc    ch,bl
  403f42:	ff                   	(bad)  
  403f43:	ff 23                	jmp    QWORD PTR [rbx]
  403f45:	00 00                	add    BYTE PTR [rax],al
  403f47:	00 00                	add    BYTE PTR [rax],al
  403f49:	41 0e                	rex.B (bad) 
  403f4b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  403f51:	5e                   	pop    rsi
  403f52:	0c 07                	or     al,0x7
  403f54:	08 00                	or     BYTE PTR [rax],al
  403f56:	00 00                	add    BYTE PTR [rax],al
  403f58:	1c 00                	sbb    al,0x0
  403f5a:	00 00                	add    BYTE PTR [rax],al
  403f5c:	54                   	push   rsp
  403f5d:	0a 00                	or     al,BYTE PTR [rax]
  403f5f:	00 16                	add    BYTE PTR [rsi],dl
  403f61:	eb ff                	jmp    403f62 <__GNU_EH_FRAME_HDR+0xdc2>
  403f63:	ff 42 00             	inc    DWORD PTR [rdx+0x0]
  403f66:	00 00                	add    BYTE PTR [rax],al
  403f68:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
  403f6b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  403f71:	7d 0c                	jge    403f7f <__GNU_EH_FRAME_HDR+0xddf>
  403f73:	07                   	(bad)  
  403f74:	08 00                	or     BYTE PTR [rax],al
  403f76:	00 00                	add    BYTE PTR [rax],al
  403f78:	1c 00                	sbb    al,0x0
  403f7a:	00 00                	add    BYTE PTR [rax],al
  403f7c:	74 0a                	je     403f88 <__GNU_EH_FRAME_HDR+0xde8>
  403f7e:	00 00                	add    BYTE PTR [rax],al
  403f80:	38 eb                	cmp    bl,ch
  403f82:	ff                   	(bad)  
  403f83:	ff 35 00 00 00 00    	push   QWORD PTR [rip+0x0]        # 403f89 <__GNU_EH_FRAME_HDR+0xde9>
  403f89:	41 0e                	rex.B (bad) 
  403f8b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  403f91:	70 0c                	jo     403f9f <__GNU_EH_FRAME_HDR+0xdff>
  403f93:	07                   	(bad)  
  403f94:	08 00                	or     BYTE PTR [rax],al
  403f96:	00 00                	add    BYTE PTR [rax],al
  403f98:	1c 00                	sbb    al,0x0
  403f9a:	00 00                	add    BYTE PTR [rax],al
  403f9c:	94                   	xchg   esp,eax
  403f9d:	0a 00                	or     al,BYTE PTR [rax]
  403f9f:	00 4d eb             	add    BYTE PTR [rbp-0x15],cl
  403fa2:	ff                   	(bad)  
  403fa3:	ff 71 00             	push   QWORD PTR [rcx+0x0]
  403fa6:	00 00                	add    BYTE PTR [rax],al
  403fa8:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
  403fab:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  403fb1:	02 6c 0c 07          	add    ch,BYTE PTR [rsp+rcx*1+0x7]
  403fb5:	08 00                	or     BYTE PTR [rax],al
  403fb7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  403fba:	00 00                	add    BYTE PTR [rax],al
  403fbc:	b4 0a                	mov    ah,0xa
  403fbe:	00 00                	add    BYTE PTR [rax],al
  403fc0:	9e                   	sahf   
  403fc1:	eb ff                	jmp    403fc2 <__GNU_EH_FRAME_HDR+0xe22>
  403fc3:	ff 1a                	call   FWORD PTR [rdx]
  403fc5:	00 00                	add    BYTE PTR [rax],al
  403fc7:	00 00                	add    BYTE PTR [rax],al
  403fc9:	41 0e                	rex.B (bad) 
  403fcb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  403fd1:	55                   	push   rbp
  403fd2:	0c 07                	or     al,0x7
  403fd4:	08 00                	or     BYTE PTR [rax],al
  403fd6:	00 00                	add    BYTE PTR [rax],al
  403fd8:	1c 00                	sbb    al,0x0
  403fda:	00 00                	add    BYTE PTR [rax],al
  403fdc:	d4                   	(bad)  
  403fdd:	0a 00                	or     al,BYTE PTR [rax]
  403fdf:	00 98 eb ff ff 0e    	add    BYTE PTR [rax+0xeffffeb],bl
  403fe5:	00 00                	add    BYTE PTR [rax],al
  403fe7:	00 00                	add    BYTE PTR [rax],al
  403fe9:	41 0e                	rex.B (bad) 
  403feb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  403ff1:	49 0c 07             	rex.WB or al,0x7
  403ff4:	08 00                	or     BYTE PTR [rax],al
  403ff6:	00 00                	add    BYTE PTR [rax],al
  403ff8:	1c 00                	sbb    al,0x0
  403ffa:	00 00                	add    BYTE PTR [rax],al
  403ffc:	f4                   	hlt    
  403ffd:	0a 00                	or     al,BYTE PTR [rax]
  403fff:	00 86 eb ff ff 0e    	add    BYTE PTR [rsi+0xeffffeb],al
  404005:	00 00                	add    BYTE PTR [rax],al
  404007:	00 00                	add    BYTE PTR [rax],al
  404009:	41 0e                	rex.B (bad) 
  40400b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  404011:	49 0c 07             	rex.WB or al,0x7
  404014:	08 00                	or     BYTE PTR [rax],al
  404016:	00 00                	add    BYTE PTR [rax],al
  404018:	24 00                	and    al,0x0
  40401a:	00 00                	add    BYTE PTR [rax],al
  40401c:	14 0b                	adc    al,0xb
  40401e:	00 00                	add    BYTE PTR [rax],al
  404020:	74 eb                	je     40400d <__GNU_EH_FRAME_HDR+0xe6d>
  404022:	ff                   	(bad)  
  404023:	ff 58 00             	call   FWORD PTR [rax+0x0]
  404026:	00 00                	add    BYTE PTR [rax],al
  404028:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
  40402b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  404031:	47 8c 03             	rex.RXB mov WORD PTR [r11],es
  404034:	83 04 02 4c          	add    DWORD PTR [rdx+rax*1],0x4c
  404038:	0c 07                	or     al,0x7
  40403a:	08 00                	or     BYTE PTR [rax],al
  40403c:	00 00                	add    BYTE PTR [rax],al
  40403e:	00 00                	add    BYTE PTR [rax],al
  404040:	1c 00                	sbb    al,0x0
  404042:	00 00                	add    BYTE PTR [rax],al
  404044:	3c 0b                	cmp    al,0xb
  404046:	00 00                	add    BYTE PTR [rax],al
  404048:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  404049:	eb ff                	jmp    40404a <__GNU_EH_FRAME_HDR+0xeaa>
  40404b:	ff 35 00 00 00 00    	push   QWORD PTR [rip+0x0]        # 404051 <__GNU_EH_FRAME_HDR+0xeb1>
  404051:	41 0e                	rex.B (bad) 
  404053:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  404059:	70 0c                	jo     404067 <__GNU_EH_FRAME_HDR+0xec7>
  40405b:	07                   	(bad)  
  40405c:	08 00                	or     BYTE PTR [rax],al
  40405e:	00 00                	add    BYTE PTR [rax],al
  404060:	1c 00                	sbb    al,0x0
  404062:	00 00                	add    BYTE PTR [rax],al
  404064:	5c                   	pop    rsp
  404065:	0b 00                	or     eax,DWORD PTR [rax]
  404067:	00 b9 eb ff ff d0    	add    BYTE PTR [rcx-0x2f000015],bh
  40406d:	00 00                	add    BYTE PTR [rax],al
  40406f:	00 00                	add    BYTE PTR [rax],al
  404071:	41 0e                	rex.B (bad) 
  404073:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  404079:	02 cb                	add    cl,bl
  40407b:	0c 07                	or     al,0x7
  40407d:	08 00                	or     BYTE PTR [rax],al
  40407f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  404082:	00 00                	add    BYTE PTR [rax],al
  404084:	7c 0b                	jl     404091 <__GNU_EH_FRAME_HDR+0xef1>
  404086:	00 00                	add    BYTE PTR [rax],al
  404088:	69 ec ff ff 71 00    	imul   ebp,esp,0x71ffff
  40408e:	00 00                	add    BYTE PTR [rax],al
  404090:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
  404093:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  404099:	02 6c 0c 07          	add    ch,BYTE PTR [rsp+rcx*1+0x7]
  40409d:	08 00                	or     BYTE PTR [rax],al
  40409f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  4040a2:	00 00                	add    BYTE PTR [rax],al
  4040a4:	9c                   	pushf  
  4040a5:	0b 00                	or     eax,DWORD PTR [rax]
  4040a7:	00 ba ec ff ff 14    	add    BYTE PTR [rdx+0x14ffffec],bh
  4040ad:	00 00                	add    BYTE PTR [rax],al
  4040af:	00 00                	add    BYTE PTR [rax],al
  4040b1:	41 0e                	rex.B (bad) 
  4040b3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  4040b9:	4f 0c 07             	rex.WRXB or al,0x7
  4040bc:	08 00                	or     BYTE PTR [rax],al
  4040be:	00 00                	add    BYTE PTR [rax],al
  4040c0:	1c 00                	sbb    al,0x0
  4040c2:	00 00                	add    BYTE PTR [rax],al
  4040c4:	bc 0b 00 00 ae       	mov    esp,0xae00000b
  4040c9:	ec                   	in     al,dx
  4040ca:	ff                   	(bad)  
  4040cb:	ff                   	(bad)  
  4040cc:	b9 00 00 00 00       	mov    ecx,0x0
  4040d1:	41 0e                	rex.B (bad) 
  4040d3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  4040d9:	02 b4 0c 07 08 00 00 	add    dh,BYTE PTR [rsp+rcx*1+0x807]
  4040e0:	1c 00                	sbb    al,0x0
  4040e2:	00 00                	add    BYTE PTR [rax],al
  4040e4:	dc 0b                	fmul   QWORD PTR [rbx]
  4040e6:	00 00                	add    BYTE PTR [rax],al
  4040e8:	47 ed                	rex.RXB in eax,dx
  4040ea:	ff                   	(bad)  
  4040eb:	ff 31                	push   QWORD PTR [rcx]
  4040ed:	00 00                	add    BYTE PTR [rax],al
  4040ef:	00 00                	add    BYTE PTR [rax],al
  4040f1:	41 0e                	rex.B (bad) 
  4040f3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  4040f9:	6c                   	ins    BYTE PTR es:[rdi],dx
  4040fa:	0c 07                	or     al,0x7
  4040fc:	08 00                	or     BYTE PTR [rax],al
  4040fe:	00 00                	add    BYTE PTR [rax],al
  404100:	1c 00                	sbb    al,0x0
  404102:	00 00                	add    BYTE PTR [rax],al
  404104:	fc                   	cld    
  404105:	0b 00                	or     eax,DWORD PTR [rax]
  404107:	00 58 ed             	add    BYTE PTR [rax-0x13],bl
  40410a:	ff                   	(bad)  
  40410b:	ff 35 00 00 00 00    	push   QWORD PTR [rip+0x0]        # 404111 <__GNU_EH_FRAME_HDR+0xf71>
  404111:	41 0e                	rex.B (bad) 
  404113:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  404119:	70 0c                	jo     404127 <__GNU_EH_FRAME_HDR+0xf87>
  40411b:	07                   	(bad)  
  40411c:	08 00                	or     BYTE PTR [rax],al
  40411e:	00 00                	add    BYTE PTR [rax],al
  404120:	1c 00                	sbb    al,0x0
  404122:	00 00                	add    BYTE PTR [rax],al
  404124:	1c 0c                	sbb    al,0xc
  404126:	00 00                	add    BYTE PTR [rax],al
  404128:	6d                   	ins    DWORD PTR es:[rdi],dx
  404129:	ed                   	in     eax,dx
  40412a:	ff                   	(bad)  
  40412b:	ff 71 00             	push   QWORD PTR [rcx+0x0]
  40412e:	00 00                	add    BYTE PTR [rax],al
  404130:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
  404133:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  404139:	02 6c 0c 07          	add    ch,BYTE PTR [rsp+rcx*1+0x7]
  40413d:	08 00                	or     BYTE PTR [rax],al
  40413f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  404142:	00 00                	add    BYTE PTR [rax],al
  404144:	3c 0c                	cmp    al,0xc
  404146:	00 00                	add    BYTE PTR [rax],al
  404148:	be ed ff ff c1       	mov    esi,0xc1ffffed
  40414d:	00 00                	add    BYTE PTR [rax],al
  40414f:	00 00                	add    BYTE PTR [rax],al
  404151:	41 0e                	rex.B (bad) 
  404153:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  404159:	02 bc 0c 07 08 00 00 	add    bh,BYTE PTR [rsp+rcx*1+0x807]
  404160:	1c 00                	sbb    al,0x0
  404162:	00 00                	add    BYTE PTR [rax],al
  404164:	5c                   	pop    rsp
  404165:	0c 00                	or     al,0x0
  404167:	00 5f ee             	add    BYTE PTR [rdi-0x12],bl
  40416a:	ff                   	(bad)  
  40416b:	ff 65 00             	jmp    QWORD PTR [rbp+0x0]
  40416e:	00 00                	add    BYTE PTR [rax],al
  404170:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
  404173:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  404179:	02 60 0c             	add    ah,BYTE PTR [rax+0xc]
  40417c:	07                   	(bad)  
  40417d:	08 00                	or     BYTE PTR [rax],al
  40417f:	00 24 00             	add    BYTE PTR [rax+rax*1],ah
  404182:	00 00                	add    BYTE PTR [rax],al
  404184:	7c 0c                	jl     404192 <__GNU_EH_FRAME_HDR+0xff2>
  404186:	00 00                	add    BYTE PTR [rax],al
  404188:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  404189:	ee                   	out    dx,al
  40418a:	ff                   	(bad)  
  40418b:	ff                   	(bad)  
  40418c:	bd 00 00 00 00       	mov    ebp,0x0
  404191:	41 0e                	rex.B (bad) 
  404193:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  404199:	45 83 03 02          	rex.RB add DWORD PTR [r11],0x2
  40419d:	b3 0c                	mov    bl,0xc
  40419f:	07                   	(bad)  
  4041a0:	08 00                	or     BYTE PTR [rax],al
  4041a2:	00 00                	add    BYTE PTR [rax],al
  4041a4:	00 00                	add    BYTE PTR [rax],al
  4041a6:	00 00                	add    BYTE PTR [rax],al
  4041a8:	1c 00                	sbb    al,0x0
  4041aa:	00 00                	add    BYTE PTR [rax],al
  4041ac:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  4041ad:	0c 00                	or     al,0x0
  4041af:	00 01                	add    BYTE PTR [rcx],al
  4041b1:	d2 ff                	sar    bh,cl
  4041b3:	ff                   	(bad)  
  4041b4:	3e 00 00             	add    BYTE PTR ds:[rax],al
  4041b7:	00 00                	add    BYTE PTR [rax],al
  4041b9:	41 0e                	rex.B (bad) 
  4041bb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  4041c1:	79 0c                	jns    4041cf <__GNU_EH_FRAME_HDR+0x102f>
  4041c3:	07                   	(bad)  
  4041c4:	08 00                	or     BYTE PTR [rax],al
  4041c6:	00 00                	add    BYTE PTR [rax],al
  4041c8:	1c 00                	sbb    al,0x0
  4041ca:	00 00                	add    BYTE PTR [rax],al
  4041cc:	c4                   	(bad)  
  4041cd:	0c 00                	or     al,0x0
  4041cf:	00 1f                	add    BYTE PTR [rdi],bl
  4041d1:	d2 ff                	sar    bh,cl
  4041d3:	ff 15 00 00 00 00    	call   QWORD PTR [rip+0x0]        # 4041d9 <__GNU_EH_FRAME_HDR+0x1039>
  4041d9:	41 0e                	rex.B (bad) 
  4041db:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  4041e1:	50                   	push   rax
  4041e2:	0c 07                	or     al,0x7
  4041e4:	08 00                	or     BYTE PTR [rax],al
  4041e6:	00 00                	add    BYTE PTR [rax],al
  4041e8:	44 00 00             	add    BYTE PTR [rax],r8b
  4041eb:	00 e4                	add    ah,ah
  4041ed:	0c 00                	or     al,0x0
  4041ef:	00 00                	add    BYTE PTR [rax],al
  4041f1:	ef                   	out    dx,eax
  4041f2:	ff                   	(bad)  
  4041f3:	ff 65 00             	jmp    QWORD PTR [rbp+0x0]
  4041f6:	00 00                	add    BYTE PTR [rax],al
  4041f8:	00 42 0e             	add    BYTE PTR [rdx+0xe],al
  4041fb:	10 8f 02 42 0e 18    	adc    BYTE PTR [rdi+0x180e4202],cl
  404201:	8e 03                	mov    es,WORD PTR [rbx]
  404203:	45 0e                	rex.RB (bad) 
  404205:	20 8d 04 42 0e 28    	and    BYTE PTR [rbp+0x280e4204],cl
  40420b:	8c 05 48 0e 30 86    	mov    WORD PTR [rip+0xffffffff86300e48],es        # ffffffff86705059 <_end+0xffffffff860ffe61>
  404211:	06                   	(bad)  
  404212:	48 0e                	rex.W (bad) 
  404214:	38 83 07 4d 0e 40    	cmp    BYTE PTR [rbx+0x400e4d07],al
  40421a:	72 0e                	jb     40422a <__GNU_EH_FRAME_HDR+0x108a>
  40421c:	38 41 0e             	cmp    BYTE PTR [rcx+0xe],al
  40421f:	30 41 0e             	xor    BYTE PTR [rcx+0xe],al
  404222:	28 42 0e             	sub    BYTE PTR [rdx+0xe],al
  404225:	20 42 0e             	and    BYTE PTR [rdx+0xe],al
  404228:	18 42 0e             	sbb    BYTE PTR [rdx+0xe],al
  40422b:	10 42 0e             	adc    BYTE PTR [rdx+0xe],al
  40422e:	08 00                	or     BYTE PTR [rax],al
  404230:	14 00                	adc    al,0x0
  404232:	00 00                	add    BYTE PTR [rax],al
  404234:	2c 0d                	sub    al,0xd
  404236:	00 00                	add    BYTE PTR [rax],al
  404238:	28 ef                	sub    bh,ch
  40423a:	ff                   	(bad)  
  40423b:	ff 02                	inc    DWORD PTR [rdx]
	...

0000000000404248 <__FRAME_END__>:
  404248:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .gcc_except_table:

000000000040424c <.gcc_except_table>:
  40424c:	ff                   	(bad)  
  40424d:	ff 01                	inc    DWORD PTR [rcx]
  40424f:	1d 7e 05 ff 08       	sbb    eax,0x8ff057e
  404254:	00 c3                	add    bl,al
  404256:	01 05 9c 09 00 99    	add    DWORD PTR [rip+0xffffffff9900099c],eax        # ffffffff99404bf8 <_end+0xffffffff98dffa00>
  40425c:	02 e0                	add    ah,al
  40425e:	03 c4                	add    eax,esp
  404260:	09 00                	or     DWORD PTR [rax],eax
  404262:	c1 08 05             	ror    DWORD PTR [rax],0x5
  404265:	b0 09                	mov    al,0x9
  404267:	00 97 09 68 00 00    	add    BYTE PTR [rdi+0x6809],dl
  40426d:	ff                   	(bad)  
  40426e:	ff 01                	inc    DWORD PTR [rcx]
  404270:	10 2d 53 dc 01 00    	adc    BYTE PTR [rip+0x1dc53],ch        # 421ec9 <__FRAME_END__+0x1dc81>
  404276:	8c 01                	mov    WORD PTR [rcx],es
  404278:	12 cb                	adc    cl,bl
  40427a:	01 00                	add    DWORD PTR [rax],eax
  40427c:	fd                   	std    
  40427d:	01 05 00 00 ff ff    	add    DWORD PTR [rip+0xffffffffffff0000],eax        # 3f4283 <_init-0xc895>
  404283:	01 0e                	add    DWORD PTR [rsi],ecx
  404285:	27                   	(bad)  
  404286:	05 00 00 3a 05       	add    eax,0x53a0000
  40428b:	80 01 00             	add    BYTE PTR [rcx],0x0
  40428e:	95                   	xchg   ebp,eax
  40428f:	01 05 00 00 ff ff    	add    DWORD PTR [rip+0xffffffffffff0000],eax        # 3f4295 <_init-0xc883>
  404295:	01 00                	add    DWORD PTR [rax],eax
  404297:	ff                   	(bad)  
  404298:	ff 01                	inc    DWORD PTR [rcx]
	...

Disassembly of section .init_array:

0000000000604dd8 <__frame_dummy_init_array_entry>:
  604dd8:	70 0d                	jo     604de7 <__frame_dummy_init_array_entry+0xf>
  604dda:	40 00 00             	add    BYTE PTR [rax],al
  604ddd:	00 00                	add    BYTE PTR [rax],al
  604ddf:	00 ef                	add    bh,ch
  604de1:	13 40 00             	adc    eax,DWORD PTR [rax+0x0]
  604de4:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .fini_array:

0000000000604de8 <__do_global_dtors_aux_fini_array_entry>:
  604de8:	50                   	push   rax
  604de9:	0d 40 00 00 00       	or     eax,0x40
	...

Disassembly of section .jcr:

0000000000604df0 <__JCR_END__>:
	...

Disassembly of section .dynamic:

0000000000604df8 <_DYNAMIC>:
  604df8:	01 00                	add    DWORD PTR [rax],eax
  604dfa:	00 00                	add    BYTE PTR [rax],al
  604dfc:	00 00                	add    BYTE PTR [rax],al
  604dfe:	00 00                	add    BYTE PTR [rax],al
  604e00:	01 00                	add    DWORD PTR [rax],eax
  604e02:	00 00                	add    BYTE PTR [rax],al
  604e04:	00 00                	add    BYTE PTR [rax],al
  604e06:	00 00                	add    BYTE PTR [rax],al
  604e08:	01 00                	add    DWORD PTR [rax],eax
  604e0a:	00 00                	add    BYTE PTR [rax],al
  604e0c:	00 00                	add    BYTE PTR [rax],al
  604e0e:	00 00                	add    BYTE PTR [rax],al
  604e10:	cc                   	int3   
  604e11:	02 00                	add    al,BYTE PTR [rax]
  604e13:	00 00                	add    BYTE PTR [rax],al
  604e15:	00 00                	add    BYTE PTR [rax],al
  604e17:	00 01                	add    BYTE PTR [rcx],al
  604e19:	00 00                	add    BYTE PTR [rax],al
  604e1b:	00 00                	add    BYTE PTR [rax],al
  604e1d:	00 00                	add    BYTE PTR [rax],al
  604e1f:	00 d6                	add    dh,dl
  604e21:	02 00                	add    al,BYTE PTR [rax]
  604e23:	00 00                	add    BYTE PTR [rax],al
  604e25:	00 00                	add    BYTE PTR [rax],al
  604e27:	00 01                	add    BYTE PTR [rcx],al
  604e29:	00 00                	add    BYTE PTR [rax],al
  604e2b:	00 00                	add    BYTE PTR [rax],al
  604e2d:	00 00                	add    BYTE PTR [rax],al
  604e2f:	00 f3                	add    bl,dh
  604e31:	02 00                	add    al,BYTE PTR [rax]
  604e33:	00 00                	add    BYTE PTR [rax],al
  604e35:	00 00                	add    BYTE PTR [rax],al
  604e37:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
  604e3a:	00 00                	add    BYTE PTR [rax],al
  604e3c:	00 00                	add    BYTE PTR [rax],al
  604e3e:	00 00                	add    BYTE PTR [rax],al
  604e40:	18 0b                	sbb    BYTE PTR [rbx],cl
  604e42:	40 00 00             	add    BYTE PTR [rax],al
  604e45:	00 00                	add    BYTE PTR [rax],al
  604e47:	00 0d 00 00 00 00    	add    BYTE PTR [rip+0x0],cl        # 604e4d <_DYNAMIC+0x55>
  604e4d:	00 00                	add    BYTE PTR [rax],al
  604e4f:	00 64 31 40          	add    BYTE PTR [rcx+rsi*1+0x40],ah
  604e53:	00 00                	add    BYTE PTR [rax],al
  604e55:	00 00                	add    BYTE PTR [rax],al
  604e57:	00 19                	add    BYTE PTR [rcx],bl
  604e59:	00 00                	add    BYTE PTR [rax],al
  604e5b:	00 00                	add    BYTE PTR [rax],al
  604e5d:	00 00                	add    BYTE PTR [rax],al
  604e5f:	00 d8                	add    al,bl
  604e61:	4d 60                	rex.WRB (bad) 
  604e63:	00 00                	add    BYTE PTR [rax],al
  604e65:	00 00                	add    BYTE PTR [rax],al
  604e67:	00 1b                	add    BYTE PTR [rbx],bl
  604e69:	00 00                	add    BYTE PTR [rax],al
  604e6b:	00 00                	add    BYTE PTR [rax],al
  604e6d:	00 00                	add    BYTE PTR [rax],al
  604e6f:	00 10                	add    BYTE PTR [rax],dl
  604e71:	00 00                	add    BYTE PTR [rax],al
  604e73:	00 00                	add    BYTE PTR [rax],al
  604e75:	00 00                	add    BYTE PTR [rax],al
  604e77:	00 1a                	add    BYTE PTR [rdx],bl
  604e79:	00 00                	add    BYTE PTR [rax],al
  604e7b:	00 00                	add    BYTE PTR [rax],al
  604e7d:	00 00                	add    BYTE PTR [rax],al
  604e7f:	00 e8                	add    al,ch
  604e81:	4d 60                	rex.WRB (bad) 
  604e83:	00 00                	add    BYTE PTR [rax],al
  604e85:	00 00                	add    BYTE PTR [rax],al
  604e87:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  604e8a:	00 00                	add    BYTE PTR [rax],al
  604e8c:	00 00                	add    BYTE PTR [rax],al
  604e8e:	00 00                	add    BYTE PTR [rax],al
  604e90:	08 00                	or     BYTE PTR [rax],al
  604e92:	00 00                	add    BYTE PTR [rax],al
  604e94:	00 00                	add    BYTE PTR [rax],al
  604e96:	00 00                	add    BYTE PTR [rax],al
  604e98:	f5                   	cmc    
  604e99:	fe                   	(bad)  
  604e9a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
  604e9d:	00 00                	add    BYTE PTR [rax],al
  604e9f:	00 98 02 40 00 00    	add    BYTE PTR [rax+0x4002],bl
  604ea5:	00 00                	add    BYTE PTR [rax],al
  604ea7:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 604ead <_DYNAMIC+0xb5>
  604ead:	00 00                	add    BYTE PTR [rax],al
  604eaf:	00 f8                	add    al,bh
  604eb1:	04 40                	add    al,0x40
  604eb3:	00 00                	add    BYTE PTR [rax],al
  604eb5:	00 00                	add    BYTE PTR [rax],al
  604eb7:	00 06                	add    BYTE PTR [rsi],al
  604eb9:	00 00                	add    BYTE PTR [rax],al
  604ebb:	00 00                	add    BYTE PTR [rax],al
  604ebd:	00 00                	add    BYTE PTR [rax],al
  604ebf:	00 d0                	add    al,dl
  604ec1:	02 40 00             	add    al,BYTE PTR [rax+0x0]
  604ec4:	00 00                	add    BYTE PTR [rax],al
  604ec6:	00 00                	add    BYTE PTR [rax],al
  604ec8:	0a 00                	or     al,BYTE PTR [rax]
  604eca:	00 00                	add    BYTE PTR [rax],al
  604ecc:	00 00                	add    BYTE PTR [rax],al
  604ece:	00 00                	add    BYTE PTR [rax],al
  604ed0:	5e                   	pop    rsi
  604ed1:	03 00                	add    eax,DWORD PTR [rax]
  604ed3:	00 00                	add    BYTE PTR [rax],al
  604ed5:	00 00                	add    BYTE PTR [rax],al
  604ed7:	00 0b                	add    BYTE PTR [rbx],cl
  604ed9:	00 00                	add    BYTE PTR [rax],al
  604edb:	00 00                	add    BYTE PTR [rax],al
  604edd:	00 00                	add    BYTE PTR [rax],al
  604edf:	00 18                	add    BYTE PTR [rax],bl
  604ee1:	00 00                	add    BYTE PTR [rax],al
  604ee3:	00 00                	add    BYTE PTR [rax],al
  604ee5:	00 00                	add    BYTE PTR [rax],al
  604ee7:	00 15 00 00 00 00    	add    BYTE PTR [rip+0x0],dl        # 604eed <_DYNAMIC+0xf5>
	...
  604ef5:	00 00                	add    BYTE PTR [rax],al
  604ef7:	00 03                	add    BYTE PTR [rbx],al
	...
  604f01:	50                   	push   rax
  604f02:	60                   	(bad)  
  604f03:	00 00                	add    BYTE PTR [rax],al
  604f05:	00 00                	add    BYTE PTR [rax],al
  604f07:	00 02                	add    BYTE PTR [rdx],al
  604f09:	00 00                	add    BYTE PTR [rax],al
  604f0b:	00 00                	add    BYTE PTR [rax],al
  604f0d:	00 00                	add    BYTE PTR [rax],al
  604f0f:	00 e0                	add    al,ah
  604f11:	01 00                	add    DWORD PTR [rax],eax
  604f13:	00 00                	add    BYTE PTR [rax],al
  604f15:	00 00                	add    BYTE PTR [rax],al
  604f17:	00 14 00             	add    BYTE PTR [rax+rax*1],dl
  604f1a:	00 00                	add    BYTE PTR [rax],al
  604f1c:	00 00                	add    BYTE PTR [rax],al
  604f1e:	00 00                	add    BYTE PTR [rax],al
  604f20:	07                   	(bad)  
  604f21:	00 00                	add    BYTE PTR [rax],al
  604f23:	00 00                	add    BYTE PTR [rax],al
  604f25:	00 00                	add    BYTE PTR [rax],al
  604f27:	00 17                	add    BYTE PTR [rdi],dl
  604f29:	00 00                	add    BYTE PTR [rax],al
  604f2b:	00 00                	add    BYTE PTR [rax],al
  604f2d:	00 00                	add    BYTE PTR [rax],al
  604f2f:	00 38                	add    BYTE PTR [rax],bh
  604f31:	09 40 00             	or     DWORD PTR [rax+0x0],eax
  604f34:	00 00                	add    BYTE PTR [rax],al
  604f36:	00 00                	add    BYTE PTR [rax],al
  604f38:	07                   	(bad)  
  604f39:	00 00                	add    BYTE PTR [rax],al
  604f3b:	00 00                	add    BYTE PTR [rax],al
  604f3d:	00 00                	add    BYTE PTR [rax],al
  604f3f:	00 08                	add    BYTE PTR [rax],cl
  604f41:	09 40 00             	or     DWORD PTR [rax+0x0],eax
  604f44:	00 00                	add    BYTE PTR [rax],al
  604f46:	00 00                	add    BYTE PTR [rax],al
  604f48:	08 00                	or     BYTE PTR [rax],al
  604f4a:	00 00                	add    BYTE PTR [rax],al
  604f4c:	00 00                	add    BYTE PTR [rax],al
  604f4e:	00 00                	add    BYTE PTR [rax],al
  604f50:	30 00                	xor    BYTE PTR [rax],al
  604f52:	00 00                	add    BYTE PTR [rax],al
  604f54:	00 00                	add    BYTE PTR [rax],al
  604f56:	00 00                	add    BYTE PTR [rax],al
  604f58:	09 00                	or     DWORD PTR [rax],eax
  604f5a:	00 00                	add    BYTE PTR [rax],al
  604f5c:	00 00                	add    BYTE PTR [rax],al
  604f5e:	00 00                	add    BYTE PTR [rax],al
  604f60:	18 00                	sbb    BYTE PTR [rax],al
  604f62:	00 00                	add    BYTE PTR [rax],al
  604f64:	00 00                	add    BYTE PTR [rax],al
  604f66:	00 00                	add    BYTE PTR [rax],al
  604f68:	fe                   	(bad)  
  604f69:	ff                   	(bad)  
  604f6a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
  604f6d:	00 00                	add    BYTE PTR [rax],al
  604f6f:	00 88 08 40 00 00    	add    BYTE PTR [rax+0x4008],cl
  604f75:	00 00                	add    BYTE PTR [rax],al
  604f77:	00 ff                	add    bh,bh
  604f79:	ff                   	(bad)  
  604f7a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
  604f7d:	00 00                	add    BYTE PTR [rax],al
  604f7f:	00 03                	add    BYTE PTR [rbx],al
  604f81:	00 00                	add    BYTE PTR [rax],al
  604f83:	00 00                	add    BYTE PTR [rax],al
  604f85:	00 00                	add    BYTE PTR [rax],al
  604f87:	00 f0                	add    al,dh
  604f89:	ff                   	(bad)  
  604f8a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
  604f8d:	00 00                	add    BYTE PTR [rax],al
  604f8f:	00 56 08             	add    BYTE PTR [rsi+0x8],dl
  604f92:	40 00 00             	add    BYTE PTR [rax],al
	...

Disassembly of section .got:

0000000000604ff8 <.got>:
	...

Disassembly of section .got.plt:

0000000000605000 <_GLOBAL_OFFSET_TABLE_>:
  605000:	f8                   	clc    
  605001:	4d 60                	rex.WRB (bad) 
	...
  605017:	00 56 0b             	add    BYTE PTR [rsi+0xb],dl
  60501a:	40 00 00             	add    BYTE PTR [rax],al
  60501d:	00 00                	add    BYTE PTR [rax],al
  60501f:	00 66 0b             	add    BYTE PTR [rsi+0xb],ah
  605022:	40 00 00             	add    BYTE PTR [rax],al
  605025:	00 00                	add    BYTE PTR [rax],al
  605027:	00 76 0b             	add    BYTE PTR [rsi+0xb],dh
  60502a:	40 00 00             	add    BYTE PTR [rax],al
  60502d:	00 00                	add    BYTE PTR [rax],al
  60502f:	00 86 0b 40 00 00    	add    BYTE PTR [rsi+0x400b],al
  605035:	00 00                	add    BYTE PTR [rax],al
  605037:	00 96 0b 40 00 00    	add    BYTE PTR [rsi+0x400b],dl
  60503d:	00 00                	add    BYTE PTR [rax],al
  60503f:	00 a6 0b 40 00 00    	add    BYTE PTR [rsi+0x400b],ah
  605045:	00 00                	add    BYTE PTR [rax],al
  605047:	00 b6 0b 40 00 00    	add    BYTE PTR [rsi+0x400b],dh
  60504d:	00 00                	add    BYTE PTR [rax],al
  60504f:	00 c6                	add    dh,al
  605051:	0b 40 00             	or     eax,DWORD PTR [rax+0x0]
  605054:	00 00                	add    BYTE PTR [rax],al
  605056:	00 00                	add    BYTE PTR [rax],al
  605058:	d6                   	(bad)  
  605059:	0b 40 00             	or     eax,DWORD PTR [rax+0x0]
  60505c:	00 00                	add    BYTE PTR [rax],al
  60505e:	00 00                	add    BYTE PTR [rax],al
  605060:	e6 0b                	out    0xb,al
  605062:	40 00 00             	add    BYTE PTR [rax],al
  605065:	00 00                	add    BYTE PTR [rax],al
  605067:	00 f6                	add    dh,dh
  605069:	0b 40 00             	or     eax,DWORD PTR [rax+0x0]
  60506c:	00 00                	add    BYTE PTR [rax],al
  60506e:	00 00                	add    BYTE PTR [rax],al
  605070:	06                   	(bad)  
  605071:	0c 40                	or     al,0x40
  605073:	00 00                	add    BYTE PTR [rax],al
  605075:	00 00                	add    BYTE PTR [rax],al
  605077:	00 16                	add    BYTE PTR [rsi],dl
  605079:	0c 40                	or     al,0x40
  60507b:	00 00                	add    BYTE PTR [rax],al
  60507d:	00 00                	add    BYTE PTR [rax],al
  60507f:	00 26                	add    BYTE PTR [rsi],ah
  605081:	0c 40                	or     al,0x40
  605083:	00 00                	add    BYTE PTR [rax],al
  605085:	00 00                	add    BYTE PTR [rax],al
  605087:	00 36                	add    BYTE PTR [rsi],dh
  605089:	0c 40                	or     al,0x40
  60508b:	00 00                	add    BYTE PTR [rax],al
  60508d:	00 00                	add    BYTE PTR [rax],al
  60508f:	00 46 0c             	add    BYTE PTR [rsi+0xc],al
  605092:	40 00 00             	add    BYTE PTR [rax],al
  605095:	00 00                	add    BYTE PTR [rax],al
  605097:	00 56 0c             	add    BYTE PTR [rsi+0xc],dl
  60509a:	40 00 00             	add    BYTE PTR [rax],al
  60509d:	00 00                	add    BYTE PTR [rax],al
  60509f:	00 66 0c             	add    BYTE PTR [rsi+0xc],ah
  6050a2:	40 00 00             	add    BYTE PTR [rax],al
  6050a5:	00 00                	add    BYTE PTR [rax],al
  6050a7:	00 76 0c             	add    BYTE PTR [rsi+0xc],dh
  6050aa:	40 00 00             	add    BYTE PTR [rax],al
  6050ad:	00 00                	add    BYTE PTR [rax],al
  6050af:	00 86 0c 40 00 00    	add    BYTE PTR [rsi+0x400c],al
  6050b5:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .data:

00000000006050b8 <__data_start>:
	...

00000000006050c0 <__dso_handle>:
	...

Disassembly of section .bss:

00000000006050e0 <_ZSt4cout@@GLIBCXX_3.4>:
	...

00000000006051f0 <completed.6979>:
	...

00000000006051f1 <_ZStL8__ioinit>:
	...

00000000006051f2 <_ZZ5add_bRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_RjS6_E2cc>:
  6051f2:	00 00                	add    BYTE PTR [rax],al
  6051f4:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp spl,BYTE PTR [r8]
   5:	28 44 65 62          	sub    BYTE PTR [rbp+riz*2+0x62],al
   9:	69 61 6e 20 36 2e 31 	imul   esp,DWORD PTR [rcx+0x6e],0x312e3620
  10:	2e 31 2d 31 31 29 20 	xor    DWORD PTR cs:[rip+0x20293131],ebp        # 20293148 <_end+0x1fc8df50>
  17:	36 2e 31 2e          	ss xor DWORD PTR cs:[rsi],ebp
  1b:	31 20                	xor    DWORD PTR [rax],esp
  1d:	32 30                	xor    dh,BYTE PTR [rax]
  1f:	31 36                	xor    DWORD PTR [rsi],esi
  21:	30 38                	xor    BYTE PTR [rax],bh
  23:	30 32                	xor    BYTE PTR [rdx],dh
	...
