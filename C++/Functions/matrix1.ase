
matrix1:     file format elf64-x86-64


Disassembly of section .interp:

0000000000400238 <.interp>:
  400238:	2f                   	(bad)  
  400239:	6c                   	ins    BYTE PTR es:[rdi],dx
  40023a:	69 62 36 34 2f 6c 64 	imul   esp,DWORD PTR [rdx+0x36],0x646c2f34
  400241:	2d 6c 69 6e 75       	sub    eax,0x756e696c
  400246:	78 2d                	js     400275 <_init-0x73b>
  400248:	78 38                	js     400282 <_init-0x72e>
  40024a:	36 2d 36 34 2e 73    	ss sub eax,0x732e3436
  400250:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  400251:	2e 32 00             	xor    al,BYTE PTR cs:[rax]

Disassembly of section .note.ABI-tag:

0000000000400254 <.note.ABI-tag>:
  400254:	04 00                	add    al,0x0
  400256:	00 00                	add    BYTE PTR [rax],al
  400258:	10 00                	adc    BYTE PTR [rax],al
  40025a:	00 00                	add    BYTE PTR [rax],al
  40025c:	01 00                	add    DWORD PTR [rax],eax
  40025e:	00 00                	add    BYTE PTR [rax],al
  400260:	47                   	rex.RXB
  400261:	4e 55                	rex.WRX push rbp
  400263:	00 00                	add    BYTE PTR [rax],al
  400265:	00 00                	add    BYTE PTR [rax],al
  400267:	00 02                	add    BYTE PTR [rdx],al
  400269:	00 00                	add    BYTE PTR [rax],al
  40026b:	00 06                	add    BYTE PTR [rsi],al
  40026d:	00 00                	add    BYTE PTR [rax],al
  40026f:	00 20                	add    BYTE PTR [rax],ah
  400271:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .note.gnu.build-id:

0000000000400274 <.note.gnu.build-id>:
  400274:	04 00                	add    al,0x0
  400276:	00 00                	add    BYTE PTR [rax],al
  400278:	14 00                	adc    al,0x0
  40027a:	00 00                	add    BYTE PTR [rax],al
  40027c:	03 00                	add    eax,DWORD PTR [rax]
  40027e:	00 00                	add    BYTE PTR [rax],al
  400280:	47                   	rex.RXB
  400281:	4e 55                	rex.WRX push rbp
  400283:	00 d5                	add    ch,dl
  400285:	5b                   	pop    rbx
  400286:	27                   	(bad)  
  400287:	7c 77                	jl     400300 <_init-0x6b0>
  400289:	4a 18 87 01 e7 fb 17 	rex.WX sbb BYTE PTR [rdi+0x17fbe701],al
  400290:	37                   	(bad)  
  400291:	a3                   	.byte 0xa3
  400292:	18 d2                	sbb    dl,dl
  400294:	2c ee                	sub    al,0xee
  400296:	29                   	.byte 0x29
  400297:	40                   	rex

Disassembly of section .gnu.hash:

0000000000400298 <.gnu.hash>:
  400298:	03 00                	add    eax,DWORD PTR [rax]
  40029a:	00 00                	add    BYTE PTR [rax],al
  40029c:	12 00                	adc    al,BYTE PTR [rax]
  40029e:	00 00                	add    BYTE PTR [rax],al
  4002a0:	01 00                	add    DWORD PTR [rax],eax
  4002a2:	00 00                	add    BYTE PTR [rax],al
  4002a4:	06                   	(bad)  
  4002a5:	00 00                	add    BYTE PTR [rax],al
  4002a7:	00 00                	add    BYTE PTR [rax],al
  4002a9:	00 10                	add    BYTE PTR [rax],dl
  4002ab:	02 21                	add    ah,BYTE PTR [rcx]
  4002ad:	01 14 01             	add    DWORD PTR [rcx+rax*1],edx
  4002b0:	12 00                	adc    al,BYTE PTR [rax]
  4002b2:	00 00                	add    BYTE PTR [rax],al
  4002b4:	13 00                	adc    eax,DWORD PTR [rax]
  4002b6:	00 00                	add    BYTE PTR [rax],al
  4002b8:	14 00                	adc    al,0x0
  4002ba:	00 00                	add    BYTE PTR [rax],al
  4002bc:	73 96                	jae    400254 <_init-0x75c>
  4002be:	07                   	(bad)  
  4002bf:	02 21                	add    ah,BYTE PTR [rcx]
  4002c1:	fd                   	std    
  4002c2:	f4                   	hlt    
  4002c3:	09 28                	or     DWORD PTR [rax],ebp
  4002c5:	45 d5                	rex.RB (bad) 
  4002c7:	4c 14 98             	rex.WR adc al,0x98
  4002ca:	0c 43                	or     al,0x43
  4002cc:	79 49                	jns    400317 <_init-0x699>
  4002ce:	6b                   	.byte 0x6b
  4002cf:	b6                   	.byte 0xb6

Disassembly of section .dynsym:

00000000004002d0 <.dynsym>:
	...
  4002e8:	76 00                	jbe    4002ea <_init-0x6c6>
  4002ea:	00 00                	add    BYTE PTR [rax],al
  4002ec:	12 00                	adc    al,BYTE PTR [rax]
	...
  4002fe:	00 00                	add    BYTE PTR [rax],al
  400300:	7a 01                	jp     400303 <_init-0x6ad>
  400302:	00 00                	add    BYTE PTR [rax],al
  400304:	12 00                	adc    al,BYTE PTR [rax]
	...
  400316:	00 00                	add    BYTE PTR [rax],al
  400318:	10 00                	adc    BYTE PTR [rax],al
  40031a:	00 00                	add    BYTE PTR [rax],al
  40031c:	20 00                	and    BYTE PTR [rax],al
	...
  40032e:	00 00                	add    BYTE PTR [rax],al
  400330:	5d                   	pop    rbp
  400331:	00 00                	add    BYTE PTR [rax],al
  400333:	00 12                	add    BYTE PTR [rdx],dl
	...
  400345:	00 00                	add    BYTE PTR [rax],al
  400347:	00 2a                	add    BYTE PTR [rdx],ch
  400349:	01 00                	add    DWORD PTR [rax],eax
  40034b:	00 12                	add    BYTE PTR [rdx],dl
	...
  40035d:	00 00                	add    BYTE PTR [rax],al
  40035f:	00 03                	add    BYTE PTR [rbx],al
  400361:	01 00                	add    DWORD PTR [rax],eax
  400363:	00 12                	add    BYTE PTR [rdx],dl
	...
  400375:	00 00                	add    BYTE PTR [rax],al
  400377:	00 ca                	add    dl,cl
  400379:	01 00                	add    DWORD PTR [rax],eax
  40037b:	00 12                	add    BYTE PTR [rdx],dl
	...
  40038d:	00 00                	add    BYTE PTR [rax],al
  40038f:	00 b5 01 00 00 12    	add    BYTE PTR [rbp+0x12000001],dh
	...
  4003a5:	00 00                	add    BYTE PTR [rax],al
  4003a7:	00 38                	add    BYTE PTR [rax],bh
  4003a9:	01 00                	add    DWORD PTR [rax],eax
  4003ab:	00 12                	add    BYTE PTR [rdx],dl
	...
  4003bd:	00 00                	add    BYTE PTR [rax],al
  4003bf:	00 c2                	add    dl,al
  4003c1:	01 00                	add    DWORD PTR [rax],eax
  4003c3:	00 12                	add    BYTE PTR [rdx],dl
	...
  4003d5:	00 00                	add    BYTE PTR [rax],al
  4003d7:	00 94 00 00 00 12 00 	add    BYTE PTR [rax+rax*1+0x120000],dl
	...
  4003ee:	00 00                	add    BYTE PTR [rax],al
  4003f0:	37                   	(bad)  
  4003f1:	00 00                	add    BYTE PTR [rax],al
  4003f3:	00 12                	add    BYTE PTR [rdx],dl
	...
  400405:	00 00                	add    BYTE PTR [rax],al
  400407:	00 da                	add    dl,bl
  400409:	00 00                	add    BYTE PTR [rax],al
  40040b:	00 12                	add    BYTE PTR [rdx],dl
	...
  40041d:	00 00                	add    BYTE PTR [rax],al
  40041f:	00 ea                	add    dl,ch
  400421:	00 00                	add    BYTE PTR [rax],al
  400423:	00 12                	add    BYTE PTR [rdx],dl
	...
  400435:	00 00                	add    BYTE PTR [rax],al
  400437:	00 64 00 00          	add    BYTE PTR [rax+rax*1+0x0],ah
  40043b:	00 12                	add    BYTE PTR [rdx],dl
	...
  40044d:	00 00                	add    BYTE PTR [rax],al
  40044f:	00 1b                	add    BYTE PTR [rbx],bl
  400451:	01 00                	add    DWORD PTR [rax],eax
  400453:	00 12                	add    BYTE PTR [rdx],dl
	...
  400465:	00 00                	add    BYTE PTR [rax],al
  400467:	00 9c 01 00 00 12 00 	add    BYTE PTR [rcx+rax*1+0x120000],bl
	...
  40047e:	00 00                	add    BYTE PTR [rax],al
  400480:	21 01                	and    DWORD PTR [rcx],eax
  400482:	00 00                	add    BYTE PTR [rax],al
  400484:	11 00                	adc    DWORD PTR [rax],eax
  400486:	1b 00                	sbb    eax,DWORD PTR [rax]
  400488:	c0 40 60 00          	rol    BYTE PTR [rax+0x60],0x0
  40048c:	00 00                	add    BYTE PTR [rax],al
  40048e:	00 00                	add    BYTE PTR [rax],al
  400490:	18 01                	sbb    BYTE PTR [rcx],al
  400492:	00 00                	add    BYTE PTR [rax],al
  400494:	00 00                	add    BYTE PTR [rax],al
  400496:	00 00                	add    BYTE PTR [rax],al
  400498:	9f                   	lahf   
  400499:	00 00                	add    BYTE PTR [rax],al
  40049b:	00 12                	add    BYTE PTR [rdx],dl
  40049d:	00 00                	add    BYTE PTR [rax],al
  40049f:	00 c0                	add    al,al
  4004a1:	0a 40 00             	or     al,BYTE PTR [rax+0x0]
	...
  4004b0:	1f                   	(bad)  
  4004b1:	00 00                	add    BYTE PTR [rax],al
  4004b3:	00 12                	add    BYTE PTR [rdx],dl
  4004b5:	00 00                	add    BYTE PTR [rax],al
  4004b7:	00 50 0a             	add    BYTE PTR [rax+0xa],dl
  4004ba:	40 00 00             	add    BYTE PTR [rax],al
	...
  4004c5:	00 00                	add    BYTE PTR [rax],al
  4004c7:	00 70 01             	add    BYTE PTR [rax+0x1],dh
  4004ca:	00 00                	add    BYTE PTR [rax],al
  4004cc:	11 00                	adc    DWORD PTR [rax],eax
  4004ce:	1b 00                	sbb    eax,DWORD PTR [rax]
  4004d0:	e0 41                	loopne 400513 <_init-0x49d>
  4004d2:	60                   	(bad)  
  4004d3:	00 00                	add    BYTE PTR [rax],al
  4004d5:	00 00                	add    BYTE PTR [rax],al
  4004d7:	00 10                	add    BYTE PTR [rax],dl
  4004d9:	01 00                	add    DWORD PTR [rax],eax
  4004db:	00 00                	add    BYTE PTR [rax],al
  4004dd:	00 00                	add    BYTE PTR [rax],al
  4004df:	00 48 00             	add    BYTE PTR [rax+0x0],cl
  4004e2:	00 00                	add    BYTE PTR [rax],al
  4004e4:	12 00                	adc    al,BYTE PTR [rax]
  4004e6:	00 00                	add    BYTE PTR [rax],al
  4004e8:	e0 0a                	loopne 4004f4 <_init-0x4bc>
  4004ea:	40 00 00             	add    BYTE PTR [rax],al
	...

Disassembly of section .dynstr:

00000000004004f8 <.dynstr>:
  4004f8:	00 6c 69 62          	add    BYTE PTR [rcx+rbp*2+0x62],ch
  4004fc:	73 74                	jae    400572 <_init-0x43e>
  4004fe:	64 63 2b             	movsxd ebp,DWORD PTR fs:[rbx]
  400501:	2b 2e                	sub    ebp,DWORD PTR [rsi]
  400503:	73 6f                	jae    400574 <_init-0x43c>
  400505:	2e 36 00 5f 5f       	cs add BYTE PTR ss:[rdi+0x5f],bl
  40050a:	67 6d                	ins    DWORD PTR es:[edi],dx
  40050c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  40050d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  40050e:	5f                   	pop    rdi
  40050f:	73 74                	jae    400585 <_init-0x42b>
  400511:	61                   	(bad)  
  400512:	72 74                	jb     400588 <_init-0x428>
  400514:	5f                   	pop    rdi
  400515:	5f                   	pop    rdi
  400516:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
  400519:	4e 53                	rex.WRX push rbx
  40051b:	74 38                	je     400555 <_init-0x45b>
  40051d:	69 6f 73 5f 62 61 73 	imul   ebp,DWORD PTR [rdi+0x73],0x7361625f
  400524:	65 34 49             	gs xor al,0x49
  400527:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  400528:	69 74 44 31 45 76 00 	imul   esi,DWORD PTR [rsp+rax*2+0x31],0x5f007645
  40052f:	5f 
  400530:	5a                   	pop    rdx
  400531:	4e 53                	rex.WRX push rbx
  400533:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  400534:	6c                   	ins    BYTE PTR es:[rdi],dx
  400535:	73 45                	jae    40057c <_init-0x434>
  400537:	50                   	push   rax
  400538:	46 52                	rex.RX push rdx
  40053a:	53                   	push   rbx
  40053b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  40053c:	53                   	push   rbx
  40053d:	5f                   	pop    rdi
  40053e:	45 00 5f 5f          	add    BYTE PTR [r15+0x5f],r11b
  400542:	67 78 78             	addr32 js 4005bd <_init-0x3f3>
  400545:	5f                   	pop    rdi
  400546:	70 65                	jo     4005ad <_init-0x403>
  400548:	72 73                	jb     4005bd <_init-0x3f3>
  40054a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  40054b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  40054c:	61                   	(bad)  
  40054d:	6c                   	ins    BYTE PTR es:[rdi],dx
  40054e:	69 74 79 5f 76 30 00 	imul   esi,DWORD PTR [rcx+rdi*2+0x5f],0x5f003076
  400555:	5f 
  400556:	5a                   	pop    rdx
  400557:	64 6c                	fs ins BYTE PTR es:[rdi],dx
  400559:	50                   	push   rax
  40055a:	76 00                	jbe    40055c <_init-0x454>
  40055c:	5f                   	pop    rdi
  40055d:	5f                   	pop    rdi
  40055e:	63 78 61             	movsxd edi,DWORD PTR [rax+0x61]
  400561:	5f                   	pop    rdi
  400562:	62                   	(bad)  
  400563:	65 67 69 6e 5f 63 61 	imul   ebp,DWORD PTR gs:[esi+0x5f],0x63746163
  40056a:	74 63 
  40056c:	68 00 5f 5a 53       	push   0x535a5f00
  400571:	74 32                	je     4005a5 <_init-0x40b>
  400573:	30 5f 5f             	xor    BYTE PTR [rdi+0x5f],bl
  400576:	74 68                	je     4005e0 <_init-0x3d0>
  400578:	72 6f                	jb     4005e9 <_init-0x3c7>
  40057a:	77 5f                	ja     4005db <_init-0x3d5>
  40057c:	6c                   	ins    BYTE PTR es:[rdi],dx
  40057d:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
  40057f:	67 74 68             	addr32 je 4005ea <_init-0x3c6>
  400582:	5f                   	pop    rdi
  400583:	65 72 72             	gs jb  4005f8 <_init-0x3b8>
  400586:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  400587:	72 50                	jb     4005d9 <_init-0x3d7>
  400589:	4b 63 00             	rex.WXB movsxd rax,DWORD PTR [r8]
  40058c:	5f                   	pop    rdi
  40058d:	5a                   	pop    rdx
  40058e:	4e 53                	rex.WRX push rbx
  400590:	69 72 73 45 52 69 00 	imul   esi,DWORD PTR [rdx+0x73],0x695245
  400597:	5f                   	pop    rdi
  400598:	5a                   	pop    rdx
  400599:	53                   	push   rbx
  40059a:	74 34                	je     4005d0 <_init-0x3e0>
  40059c:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
  40059e:	64 6c                	fs ins BYTE PTR es:[rdi],dx
  4005a0:	49 63 53 74          	movsxd rdx,DWORD PTR [r11+0x74]
  4005a4:	31 31                	xor    DWORD PTR [rcx],esi
  4005a6:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
  4005a9:	72 5f                	jb     40060a <_init-0x3a6>
  4005ab:	74 72                	je     40061f <_init-0x391>
  4005ad:	61                   	(bad)  
  4005ae:	69 74 73 49 63 45 45 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x52454563
  4005b5:	52 
  4005b6:	53                   	push   rbx
  4005b7:	74 31                	je     4005ea <_init-0x3c6>
  4005b9:	33 62 61             	xor    esp,DWORD PTR [rdx+0x61]
  4005bc:	73 69                	jae    400627 <_init-0x389>
  4005be:	63 5f 6f             	movsxd ebx,DWORD PTR [rdi+0x6f]
  4005c1:	73 74                	jae    400637 <_init-0x379>
  4005c3:	72 65                	jb     40062a <_init-0x386>
  4005c5:	61                   	(bad)  
  4005c6:	6d                   	ins    DWORD PTR es:[rdi],dx
  4005c7:	49 54                	rex.WB push r12
  4005c9:	5f                   	pop    rdi
  4005ca:	54                   	push   rsp
  4005cb:	30 5f 45             	xor    BYTE PTR [rdi+0x45],bl
  4005ce:	53                   	push   rbx
  4005cf:	36 5f                	ss pop rdi
  4005d1:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
  4005d4:	63 78 61             	movsxd edi,DWORD PTR [rax+0x61]
  4005d7:	5f                   	pop    rdi
  4005d8:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
  4005da:	64 5f                	fs pop rdi
  4005dc:	63 61 74             	movsxd esp,DWORD PTR [rcx+0x74]
  4005df:	63 68 00             	movsxd ebp,DWORD PTR [rax+0x0]
  4005e2:	5f                   	pop    rdi
  4005e3:	5a                   	pop    rdx
  4005e4:	53                   	push   rbx
  4005e5:	74 31                	je     400618 <_init-0x398>
  4005e7:	37                   	(bad)  
  4005e8:	5f                   	pop    rdi
  4005e9:	5f                   	pop    rdi
  4005ea:	74 68                	je     400654 <_init-0x35c>
  4005ec:	72 6f                	jb     40065d <_init-0x353>
  4005ee:	77 5f                	ja     40064f <_init-0x361>
  4005f0:	62 61 64 5f 61       	(bad)  {k7}
  4005f5:	6c                   	ins    BYTE PTR es:[rdi],dx
  4005f6:	6c                   	ins    BYTE PTR es:[rdi],dx
  4005f7:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  4005f8:	63 76 00             	movsxd esi,DWORD PTR [rsi+0x0]
  4005fb:	5f                   	pop    rdi
  4005fc:	5a                   	pop    rdx
  4005fd:	4e 53                	rex.WRX push rbx
  4005ff:	74 38                	je     400639 <_init-0x377>
  400601:	69 6f 73 5f 62 61 73 	imul   ebp,DWORD PTR [rdi+0x73],0x7361625f
  400608:	65 34 49             	gs xor al,0x49
  40060b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  40060c:	69 74 43 31 45 76 00 	imul   esi,DWORD PTR [rbx+rax*2+0x31],0x5f007645
  400613:	5f 
  400614:	5a                   	pop    rdx
  400615:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  400616:	77 6d                	ja     400685 <_init-0x32b>
  400618:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
  40061b:	53                   	push   rbx
  40061c:	74 33                	je     400651 <_init-0x35f>
  40061e:	63 69 6e             	movsxd ebp,DWORD PTR [rcx+0x6e]
  400621:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
  400624:	63 78 61             	movsxd edi,DWORD PTR [rax+0x61]
  400627:	5f                   	pop    rdi
  400628:	72 65                	jb     40068f <_init-0x321>
  40062a:	74 68                	je     400694 <_init-0x31c>
  40062c:	72 6f                	jb     40069d <_init-0x313>
  40062e:	77 00                	ja     400630 <_init-0x380>
  400630:	5f                   	pop    rdi
  400631:	5a                   	pop    rdx
  400632:	53                   	push   rbx
  400633:	74 6c                	je     4006a1 <_init-0x30f>
  400635:	73 49                	jae    400680 <_init-0x330>
  400637:	53                   	push   rbx
  400638:	74 31                	je     40066b <_init-0x345>
  40063a:	31 63 68             	xor    DWORD PTR [rbx+0x68],esp
  40063d:	61                   	(bad)  
  40063e:	72 5f                	jb     40069f <_init-0x311>
  400640:	74 72                	je     4006b4 <_init-0x2fc>
  400642:	61                   	(bad)  
  400643:	69 74 73 49 63 45 45 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x52454563
  40064a:	52 
  40064b:	53                   	push   rbx
  40064c:	74 31                	je     40067f <_init-0x331>
  40064e:	33 62 61             	xor    esp,DWORD PTR [rdx+0x61]
  400651:	73 69                	jae    4006bc <_init-0x2f4>
  400653:	63 5f 6f             	movsxd ebx,DWORD PTR [rdi+0x6f]
  400656:	73 74                	jae    4006cc <_init-0x2e4>
  400658:	72 65                	jb     4006bf <_init-0x2f1>
  40065a:	61                   	(bad)  
  40065b:	6d                   	ins    DWORD PTR es:[rdi],dx
  40065c:	49 63 54 5f 45       	movsxd rdx,DWORD PTR [r15+rbx*2+0x45]
  400661:	53                   	push   rbx
  400662:	35 5f 50 4b 63       	xor    eax,0x634b505f
  400667:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
  40066a:	53                   	push   rbx
  40066b:	74 34                	je     4006a1 <_init-0x30f>
  40066d:	63 6f 75             	movsxd ebp,DWORD PTR [rdi+0x75]
  400670:	74 00                	je     400672 <_init-0x33e>
  400672:	5f                   	pop    rdi
  400673:	5a                   	pop    rdx
  400674:	4e 53                	rex.WRX push rbx
  400676:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  400677:	6c                   	ins    BYTE PTR es:[rdi],dx
  400678:	73 45                	jae    4006bf <_init-0x2f1>
  40067a:	69 00 6c 69 62 6d    	imul   eax,DWORD PTR [rax],0x6d62696c
  400680:	2e 73 6f             	cs jae 4006f2 <_init-0x2be>
  400683:	2e 36 00 6c 69 62    	cs add BYTE PTR ss:[rcx+rbp*2+0x62],ch
  400689:	67 63 63 5f          	movsxd esp,DWORD PTR [ebx+0x5f]
  40068d:	73 2e                	jae    4006bd <_init-0x2f3>
  40068f:	73 6f                	jae    400700 <_init-0x2b0>
  400691:	2e 31 00             	xor    DWORD PTR cs:[rax],eax
  400694:	5f                   	pop    rdi
  400695:	55                   	push   rbp
  400696:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  400697:	77 69                	ja     400702 <_init-0x2ae>
  400699:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  40069a:	64 5f                	fs pop rdi
  40069c:	52                   	push   rdx
  40069d:	65 73 75             	gs jae 400715 <_init-0x29b>
  4006a0:	6d                   	ins    DWORD PTR es:[rdi],dx
  4006a1:	65 00 6c 69 62       	add    BYTE PTR gs:[rcx+rbp*2+0x62],ch
  4006a6:	63 2e                	movsxd ebp,DWORD PTR [rsi]
  4006a8:	73 6f                	jae    400719 <_init-0x297>
  4006aa:	2e 36 00 5f 5f       	cs add BYTE PTR ss:[rdi+0x5f],bl
  4006af:	63 78 61             	movsxd edi,DWORD PTR [rax+0x61]
  4006b2:	5f                   	pop    rdi
  4006b3:	61                   	(bad)  
  4006b4:	74 65                	je     40071b <_init-0x295>
  4006b6:	78 69                	js     400721 <_init-0x28f>
  4006b8:	74 00                	je     4006ba <_init-0x2f6>
  4006ba:	6d                   	ins    DWORD PTR es:[rdi],dx
  4006bb:	65 6d                	gs ins DWORD PTR es:[rdi],dx
  4006bd:	6d                   	ins    DWORD PTR es:[rdi],dx
  4006be:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  4006bf:	76 65                	jbe    400726 <_init-0x28a>
  4006c1:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
  4006c4:	6c                   	ins    BYTE PTR es:[rdi],dx
  4006c5:	69 62 63 5f 73 74 61 	imul   esp,DWORD PTR [rdx+0x63],0x6174735f
  4006cc:	72 74                	jb     400742 <_init-0x26e>
  4006ce:	5f                   	pop    rdi
  4006cf:	6d                   	ins    DWORD PTR es:[rdi],dx
  4006d0:	61                   	(bad)  
  4006d1:	69 6e 00 47 43 43 5f 	imul   ebp,DWORD PTR [rsi+0x0],0x5f434347
  4006d8:	33 2e                	xor    ebp,DWORD PTR [rsi]
  4006da:	30 00                	xor    BYTE PTR [rax],al
  4006dc:	47                   	rex.RXB
  4006dd:	4c                   	rex.WR
  4006de:	49                   	rex.WB
  4006df:	42                   	rex.X
  4006e0:	43 5f                	rex.XB pop r15
  4006e2:	32 2e                	xor    ch,BYTE PTR [rsi]
  4006e4:	32 2e                	xor    ch,BYTE PTR [rsi]
  4006e6:	35 00 43 58 58       	xor    eax,0x58584300
  4006eb:	41                   	rex.B
  4006ec:	42                   	rex.X
  4006ed:	49 5f                	rex.WB pop r15
  4006ef:	31 2e                	xor    DWORD PTR [rsi],ebp
  4006f1:	33 00                	xor    eax,DWORD PTR [rax]
  4006f3:	47                   	rex.RXB
  4006f4:	4c                   	rex.WR
  4006f5:	49                   	rex.WB
  4006f6:	42                   	rex.X
  4006f7:	43 58                	rex.XB pop r8
  4006f9:	58                   	pop    rax
  4006fa:	5f                   	pop    rdi
  4006fb:	33 2e                	xor    ebp,DWORD PTR [rsi]
  4006fd:	34 00                	xor    al,0x0

Disassembly of section .gnu.version:

0000000000400700 <.gnu.version>:
  400700:	00 00                	add    BYTE PTR [rax],al
  400702:	02 00                	add    al,BYTE PTR [rax]
  400704:	02 00                	add    al,BYTE PTR [rax]
  400706:	00 00                	add    BYTE PTR [rax],al
  400708:	02 00                	add    al,BYTE PTR [rax]
  40070a:	03 00                	add    eax,DWORD PTR [rax]
  40070c:	02 00                	add    al,BYTE PTR [rax]
  40070e:	04 00                	add    al,0x0
  400710:	04 00                	add    al,0x0
  400712:	02 00                	add    al,BYTE PTR [rax]
  400714:	04 00                	add    al,0x0
  400716:	02 00                	add    al,BYTE PTR [rax]
  400718:	02 00                	add    al,BYTE PTR [rax]
  40071a:	03 00                	add    eax,DWORD PTR [rax]
  40071c:	02 00                	add    al,BYTE PTR [rax]
  40071e:	03 00                	add    eax,DWORD PTR [rax]
  400720:	02 00                	add    al,BYTE PTR [rax]
  400722:	05 00 02 00 02       	add    eax,0x2000200
  400727:	00 02                	add    BYTE PTR [rdx],al
  400729:	00 02                	add    BYTE PTR [rdx],al
  40072b:	00 03                	add    BYTE PTR [rbx],al
	...

Disassembly of section .gnu.version_r:

0000000000400730 <.gnu.version_r>:
  400730:	01 00                	add    DWORD PTR [rax],eax
  400732:	01 00                	add    DWORD PTR [rax],eax
  400734:	8e 01                	mov    es,WORD PTR [rcx]
  400736:	00 00                	add    BYTE PTR [rax],al
  400738:	10 00                	adc    BYTE PTR [rax],al
  40073a:	00 00                	add    BYTE PTR [rax],al
  40073c:	20 00                	and    BYTE PTR [rax],al
  40073e:	00 00                	add    BYTE PTR [rax],al
  400740:	50                   	push   rax
  400741:	26 79 0b             	es jns 40074f <_init-0x261>
  400744:	00 00                	add    BYTE PTR [rax],al
  400746:	05 00 dc 01 00       	add    eax,0x1dc00
  40074b:	00 00                	add    BYTE PTR [rax],al
  40074d:	00 00                	add    BYTE PTR [rax],al
  40074f:	00 01                	add    BYTE PTR [rcx],al
  400751:	00 01                	add    BYTE PTR [rcx],al
  400753:	00 ab 01 00 00 10    	add    BYTE PTR [rbx+0x10000001],ch
  400759:	00 00                	add    BYTE PTR [rax],al
  40075b:	00 20                	add    BYTE PTR [rax],ah
  40075d:	00 00                	add    BYTE PTR [rax],al
  40075f:	00 75 1a             	add    BYTE PTR [rbp+0x1a],dh
  400762:	69 09 00 00 04 00    	imul   ecx,DWORD PTR [rcx],0x40000
  400768:	e4 01                	in     al,0x1
  40076a:	00 00                	add    BYTE PTR [rax],al
  40076c:	00 00                	add    BYTE PTR [rax],al
  40076e:	00 00                	add    BYTE PTR [rax],al
  400770:	01 00                	add    DWORD PTR [rax],eax
  400772:	02 00                	add    al,BYTE PTR [rax]
  400774:	01 00                	add    DWORD PTR [rax],eax
  400776:	00 00                	add    BYTE PTR [rax],al
  400778:	10 00                	adc    BYTE PTR [rax],al
  40077a:	00 00                	add    BYTE PTR [rax],al
  40077c:	00 00                	add    BYTE PTR [rax],al
  40077e:	00 00                	add    BYTE PTR [rax],al
  400780:	d3 af 6b 05 00 00    	shr    DWORD PTR [rdi+0x56b],cl
  400786:	03 00                	add    eax,DWORD PTR [rax]
  400788:	f0 01 00             	lock add DWORD PTR [rax],eax
  40078b:	00 10                	add    BYTE PTR [rax],dl
  40078d:	00 00                	add    BYTE PTR [rax],al
  40078f:	00 74 29 92          	add    BYTE PTR [rcx+rbp*1-0x6e],dh
  400793:	08 00                	or     BYTE PTR [rax],al
  400795:	00 02                	add    BYTE PTR [rdx],al
  400797:	00 fb                	add    bl,bh
  400799:	01 00                	add    DWORD PTR [rax],eax
  40079b:	00 00                	add    BYTE PTR [rax],al
  40079d:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .rela.dyn:

00000000004007a0 <.rela.dyn>:
  4007a0:	f8                   	clc    
  4007a1:	3f                   	(bad)  
  4007a2:	60                   	(bad)  
  4007a3:	00 00                	add    BYTE PTR [rax],al
  4007a5:	00 00                	add    BYTE PTR [rax],al
  4007a7:	00 06                	add    BYTE PTR [rsi],al
  4007a9:	00 00                	add    BYTE PTR [rax],al
  4007ab:	00 03                	add    BYTE PTR [rbx],al
	...
  4007b5:	00 00                	add    BYTE PTR [rax],al
  4007b7:	00 c0                	add    al,al
  4007b9:	40 60                	rex (bad) 
  4007bb:	00 00                	add    BYTE PTR [rax],al
  4007bd:	00 00                	add    BYTE PTR [rax],al
  4007bf:	00 05 00 00 00 12    	add    BYTE PTR [rip+0x12000000],al        # 124007c5 <_end+0x11dfc4cd>
	...
  4007cd:	00 00                	add    BYTE PTR [rax],al
  4007cf:	00 e0                	add    al,ah
  4007d1:	41 60                	rex.B (bad) 
  4007d3:	00 00                	add    BYTE PTR [rax],al
  4007d5:	00 00                	add    BYTE PTR [rax],al
  4007d7:	00 05 00 00 00 15    	add    BYTE PTR [rip+0x15000000],al        # 154007dd <_end+0x14dfc4e5>
	...

Disassembly of section .rela.plt:

00000000004007e8 <.rela.plt>:
  4007e8:	18 40 60             	sbb    BYTE PTR [rax+0x60],al
  4007eb:	00 00                	add    BYTE PTR [rax],al
  4007ed:	00 00                	add    BYTE PTR [rax],al
  4007ef:	00 07                	add    BYTE PTR [rdi],al
  4007f1:	00 00                	add    BYTE PTR [rax],al
  4007f3:	00 01                	add    BYTE PTR [rcx],al
	...
  4007fd:	00 00                	add    BYTE PTR [rax],al
  4007ff:	00 20                	add    BYTE PTR [rax],ah
  400801:	40 60                	rex (bad) 
  400803:	00 00                	add    BYTE PTR [rax],al
  400805:	00 00                	add    BYTE PTR [rax],al
  400807:	00 07                	add    BYTE PTR [rdi],al
  400809:	00 00                	add    BYTE PTR [rax],al
  40080b:	00 02                	add    BYTE PTR [rdx],al
	...
  400815:	00 00                	add    BYTE PTR [rax],al
  400817:	00 28                	add    BYTE PTR [rax],ch
  400819:	40 60                	rex (bad) 
  40081b:	00 00                	add    BYTE PTR [rax],al
  40081d:	00 00                	add    BYTE PTR [rax],al
  40081f:	00 07                	add    BYTE PTR [rdi],al
  400821:	00 00                	add    BYTE PTR [rax],al
  400823:	00 04 00             	add    BYTE PTR [rax+rax*1],al
	...
  40082e:	00 00                	add    BYTE PTR [rax],al
  400830:	30 40 60             	xor    BYTE PTR [rax+0x60],al
  400833:	00 00                	add    BYTE PTR [rax],al
  400835:	00 00                	add    BYTE PTR [rax],al
  400837:	00 07                	add    BYTE PTR [rdi],al
  400839:	00 00                	add    BYTE PTR [rax],al
  40083b:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 400841 <_init-0x16f>
  400841:	00 00                	add    BYTE PTR [rax],al
  400843:	00 00                	add    BYTE PTR [rax],al
  400845:	00 00                	add    BYTE PTR [rax],al
  400847:	00 38                	add    BYTE PTR [rax],bh
  400849:	40 60                	rex (bad) 
  40084b:	00 00                	add    BYTE PTR [rax],al
  40084d:	00 00                	add    BYTE PTR [rax],al
  40084f:	00 07                	add    BYTE PTR [rdi],al
  400851:	00 00                	add    BYTE PTR [rax],al
  400853:	00 06                	add    BYTE PTR [rsi],al
	...
  40085d:	00 00                	add    BYTE PTR [rax],al
  40085f:	00 40 40             	add    BYTE PTR [rax+0x40],al
  400862:	60                   	(bad)  
  400863:	00 00                	add    BYTE PTR [rax],al
  400865:	00 00                	add    BYTE PTR [rax],al
  400867:	00 07                	add    BYTE PTR [rdi],al
  400869:	00 00                	add    BYTE PTR [rax],al
  40086b:	00 07                	add    BYTE PTR [rdi],al
	...
  400875:	00 00                	add    BYTE PTR [rax],al
  400877:	00 48 40             	add    BYTE PTR [rax+0x40],cl
  40087a:	60                   	(bad)  
  40087b:	00 00                	add    BYTE PTR [rax],al
  40087d:	00 00                	add    BYTE PTR [rax],al
  40087f:	00 07                	add    BYTE PTR [rdi],al
  400881:	00 00                	add    BYTE PTR [rax],al
  400883:	00 08                	add    BYTE PTR [rax],cl
	...
  40088d:	00 00                	add    BYTE PTR [rax],al
  40088f:	00 50 40             	add    BYTE PTR [rax+0x40],dl
  400892:	60                   	(bad)  
  400893:	00 00                	add    BYTE PTR [rax],al
  400895:	00 00                	add    BYTE PTR [rax],al
  400897:	00 07                	add    BYTE PTR [rdi],al
  400899:	00 00                	add    BYTE PTR [rax],al
  40089b:	00 14 00             	add    BYTE PTR [rax+rax*1],dl
	...
  4008a6:	00 00                	add    BYTE PTR [rax],al
  4008a8:	58                   	pop    rax
  4008a9:	40 60                	rex (bad) 
  4008ab:	00 00                	add    BYTE PTR [rax],al
  4008ad:	00 00                	add    BYTE PTR [rax],al
  4008af:	00 07                	add    BYTE PTR [rdi],al
  4008b1:	00 00                	add    BYTE PTR [rax],al
  4008b3:	00 09                	add    BYTE PTR [rcx],cl
	...
  4008bd:	00 00                	add    BYTE PTR [rax],al
  4008bf:	00 60 40             	add    BYTE PTR [rax+0x40],ah
  4008c2:	60                   	(bad)  
  4008c3:	00 00                	add    BYTE PTR [rax],al
  4008c5:	00 00                	add    BYTE PTR [rax],al
  4008c7:	00 07                	add    BYTE PTR [rdi],al
  4008c9:	00 00                	add    BYTE PTR [rax],al
  4008cb:	00 0a                	add    BYTE PTR [rdx],cl
	...
  4008d5:	00 00                	add    BYTE PTR [rax],al
  4008d7:	00 68 40             	add    BYTE PTR [rax+0x40],ch
  4008da:	60                   	(bad)  
  4008db:	00 00                	add    BYTE PTR [rax],al
  4008dd:	00 00                	add    BYTE PTR [rax],al
  4008df:	00 07                	add    BYTE PTR [rdi],al
  4008e1:	00 00                	add    BYTE PTR [rax],al
  4008e3:	00 0b                	add    BYTE PTR [rbx],cl
	...
  4008ed:	00 00                	add    BYTE PTR [rax],al
  4008ef:	00 70 40             	add    BYTE PTR [rax+0x40],dh
  4008f2:	60                   	(bad)  
  4008f3:	00 00                	add    BYTE PTR [rax],al
  4008f5:	00 00                	add    BYTE PTR [rax],al
  4008f7:	00 07                	add    BYTE PTR [rdi],al
  4008f9:	00 00                	add    BYTE PTR [rax],al
  4008fb:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
	...
  400906:	00 00                	add    BYTE PTR [rax],al
  400908:	78 40                	js     40094a <_init-0x66>
  40090a:	60                   	(bad)  
  40090b:	00 00                	add    BYTE PTR [rax],al
  40090d:	00 00                	add    BYTE PTR [rax],al
  40090f:	00 07                	add    BYTE PTR [rdi],al
  400911:	00 00                	add    BYTE PTR [rax],al
  400913:	00 0d 00 00 00 00    	add    BYTE PTR [rip+0x0],cl        # 400919 <_init-0x97>
  400919:	00 00                	add    BYTE PTR [rax],al
  40091b:	00 00                	add    BYTE PTR [rax],al
  40091d:	00 00                	add    BYTE PTR [rax],al
  40091f:	00 80 40 60 00 00    	add    BYTE PTR [rax+0x6040],al
  400925:	00 00                	add    BYTE PTR [rax],al
  400927:	00 07                	add    BYTE PTR [rdi],al
  400929:	00 00                	add    BYTE PTR [rax],al
  40092b:	00 0e                	add    BYTE PTR [rsi],cl
	...
  400935:	00 00                	add    BYTE PTR [rax],al
  400937:	00 88 40 60 00 00    	add    BYTE PTR [rax+0x6040],cl
  40093d:	00 00                	add    BYTE PTR [rax],al
  40093f:	00 07                	add    BYTE PTR [rdi],al
  400941:	00 00                	add    BYTE PTR [rax],al
  400943:	00 13                	add    BYTE PTR [rbx],dl
	...
  40094d:	00 00                	add    BYTE PTR [rax],al
  40094f:	00 90 40 60 00 00    	add    BYTE PTR [rax+0x6040],dl
  400955:	00 00                	add    BYTE PTR [rax],al
  400957:	00 07                	add    BYTE PTR [rdi],al
  400959:	00 00                	add    BYTE PTR [rax],al
  40095b:	00 0f                	add    BYTE PTR [rdi],cl
	...
  400965:	00 00                	add    BYTE PTR [rax],al
  400967:	00 98 40 60 00 00    	add    BYTE PTR [rax+0x6040],bl
  40096d:	00 00                	add    BYTE PTR [rax],al
  40096f:	00 07                	add    BYTE PTR [rdi],al
  400971:	00 00                	add    BYTE PTR [rax],al
  400973:	00 16                	add    BYTE PTR [rsi],dl
	...
  40097d:	00 00                	add    BYTE PTR [rax],al
  40097f:	00 a0 40 60 00 00    	add    BYTE PTR [rax+0x6040],ah
  400985:	00 00                	add    BYTE PTR [rax],al
  400987:	00 07                	add    BYTE PTR [rdi],al
  400989:	00 00                	add    BYTE PTR [rax],al
  40098b:	00 10                	add    BYTE PTR [rax],dl
	...
  400995:	00 00                	add    BYTE PTR [rax],al
  400997:	00 a8 40 60 00 00    	add    BYTE PTR [rax+0x6040],ch
  40099d:	00 00                	add    BYTE PTR [rax],al
  40099f:	00 07                	add    BYTE PTR [rdi],al
  4009a1:	00 00                	add    BYTE PTR [rax],al
  4009a3:	00 11                	add    BYTE PTR [rcx],dl
	...

Disassembly of section .init:

00000000004009b0 <_init>:
  4009b0:	48 83 ec 08          	sub    rsp,0x8
  4009b4:	48 8b 05 3d 36 20 00 	mov    rax,QWORD PTR [rip+0x20363d]        # 603ff8 <_DYNAMIC+0x200>
  4009bb:	48 85 c0             	test   rax,rax
  4009be:	74 05                	je     4009c5 <_init+0x15>
  4009c0:	e8 4b 01 00 00       	call   400b10 <_Unwind_Resume@plt+0x10>
  4009c5:	48 83 c4 08          	add    rsp,0x8
  4009c9:	c3                   	ret    

Disassembly of section .plt:

00000000004009d0 <_ZSt20__throw_length_errorPKc@plt-0x10>:
  4009d0:	ff 35 32 36 20 00    	push   QWORD PTR [rip+0x203632]        # 604008 <_GLOBAL_OFFSET_TABLE_+0x8>
  4009d6:	ff 25 34 36 20 00    	jmp    QWORD PTR [rip+0x203634]        # 604010 <_GLOBAL_OFFSET_TABLE_+0x10>
  4009dc:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

00000000004009e0 <_ZSt20__throw_length_errorPKc@plt>:
  4009e0:	ff 25 32 36 20 00    	jmp    QWORD PTR [rip+0x203632]        # 604018 <_GLOBAL_OFFSET_TABLE_+0x18>
  4009e6:	68 00 00 00 00       	push   0x0
  4009eb:	e9 e0 ff ff ff       	jmp    4009d0 <_init+0x20>

00000000004009f0 <_ZNSolsEi@plt>:
  4009f0:	ff 25 2a 36 20 00    	jmp    QWORD PTR [rip+0x20362a]        # 604020 <_GLOBAL_OFFSET_TABLE_+0x20>
  4009f6:	68 01 00 00 00       	push   0x1
  4009fb:	e9 d0 ff ff ff       	jmp    4009d0 <_init+0x20>

0000000000400a00 <_ZdlPv@plt>:
  400a00:	ff 25 22 36 20 00    	jmp    QWORD PTR [rip+0x203622]        # 604028 <_GLOBAL_OFFSET_TABLE_+0x28>
  400a06:	68 02 00 00 00       	push   0x2
  400a0b:	e9 c0 ff ff ff       	jmp    4009d0 <_init+0x20>

0000000000400a10 <__cxa_rethrow@plt>:
  400a10:	ff 25 1a 36 20 00    	jmp    QWORD PTR [rip+0x20361a]        # 604030 <_GLOBAL_OFFSET_TABLE_+0x30>
  400a16:	68 03 00 00 00       	push   0x3
  400a1b:	e9 b0 ff ff ff       	jmp    4009d0 <_init+0x20>

0000000000400a20 <_ZNSt8ios_base4InitC1Ev@plt>:
  400a20:	ff 25 12 36 20 00    	jmp    QWORD PTR [rip+0x203612]        # 604038 <_GLOBAL_OFFSET_TABLE_+0x38>
  400a26:	68 04 00 00 00       	push   0x4
  400a2b:	e9 a0 ff ff ff       	jmp    4009d0 <_init+0x20>

0000000000400a30 <__libc_start_main@plt>:
  400a30:	ff 25 0a 36 20 00    	jmp    QWORD PTR [rip+0x20360a]        # 604040 <_GLOBAL_OFFSET_TABLE_+0x40>
  400a36:	68 05 00 00 00       	push   0x5
  400a3b:	e9 90 ff ff ff       	jmp    4009d0 <_init+0x20>

0000000000400a40 <__cxa_atexit@plt>:
  400a40:	ff 25 02 36 20 00    	jmp    QWORD PTR [rip+0x203602]        # 604048 <_GLOBAL_OFFSET_TABLE_+0x48>
  400a46:	68 06 00 00 00       	push   0x6
  400a4b:	e9 80 ff ff ff       	jmp    4009d0 <_init+0x20>

0000000000400a50 <_ZNSt8ios_base4InitD1Ev@plt>:
  400a50:	ff 25 fa 35 20 00    	jmp    QWORD PTR [rip+0x2035fa]        # 604050 <_GLOBAL_OFFSET_TABLE_+0x50>
  400a56:	68 07 00 00 00       	push   0x7
  400a5b:	e9 70 ff ff ff       	jmp    4009d0 <_init+0x20>

0000000000400a60 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>:
  400a60:	ff 25 f2 35 20 00    	jmp    QWORD PTR [rip+0x2035f2]        # 604058 <_GLOBAL_OFFSET_TABLE_+0x58>
  400a66:	68 08 00 00 00       	push   0x8
  400a6b:	e9 60 ff ff ff       	jmp    4009d0 <_init+0x20>

0000000000400a70 <memmove@plt>:
  400a70:	ff 25 ea 35 20 00    	jmp    QWORD PTR [rip+0x2035ea]        # 604060 <_GLOBAL_OFFSET_TABLE_+0x60>
  400a76:	68 09 00 00 00       	push   0x9
  400a7b:	e9 50 ff ff ff       	jmp    4009d0 <_init+0x20>

0000000000400a80 <_ZNSirsERi@plt>:
  400a80:	ff 25 e2 35 20 00    	jmp    QWORD PTR [rip+0x2035e2]        # 604068 <_GLOBAL_OFFSET_TABLE_+0x68>
  400a86:	68 0a 00 00 00       	push   0xa
  400a8b:	e9 40 ff ff ff       	jmp    4009d0 <_init+0x20>

0000000000400a90 <_ZNSolsEPFRSoS_E@plt>:
  400a90:	ff 25 da 35 20 00    	jmp    QWORD PTR [rip+0x2035da]        # 604070 <_GLOBAL_OFFSET_TABLE_+0x70>
  400a96:	68 0b 00 00 00       	push   0xb
  400a9b:	e9 30 ff ff ff       	jmp    4009d0 <_init+0x20>

0000000000400aa0 <__cxa_end_catch@plt>:
  400aa0:	ff 25 d2 35 20 00    	jmp    QWORD PTR [rip+0x2035d2]        # 604078 <_GLOBAL_OFFSET_TABLE_+0x78>
  400aa6:	68 0c 00 00 00       	push   0xc
  400aab:	e9 20 ff ff ff       	jmp    4009d0 <_init+0x20>

0000000000400ab0 <_ZSt17__throw_bad_allocv@plt>:
  400ab0:	ff 25 ca 35 20 00    	jmp    QWORD PTR [rip+0x2035ca]        # 604080 <_GLOBAL_OFFSET_TABLE_+0x80>
  400ab6:	68 0d 00 00 00       	push   0xd
  400abb:	e9 10 ff ff ff       	jmp    4009d0 <_init+0x20>

0000000000400ac0 <_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@plt>:
  400ac0:	ff 25 c2 35 20 00    	jmp    QWORD PTR [rip+0x2035c2]        # 604088 <_GLOBAL_OFFSET_TABLE_+0x88>
  400ac6:	68 0e 00 00 00       	push   0xe
  400acb:	e9 00 ff ff ff       	jmp    4009d0 <_init+0x20>

0000000000400ad0 <__cxa_begin_catch@plt>:
  400ad0:	ff 25 ba 35 20 00    	jmp    QWORD PTR [rip+0x2035ba]        # 604090 <_GLOBAL_OFFSET_TABLE_+0x90>
  400ad6:	68 0f 00 00 00       	push   0xf
  400adb:	e9 f0 fe ff ff       	jmp    4009d0 <_init+0x20>

0000000000400ae0 <__gxx_personality_v0@plt>:
  400ae0:	ff 25 b2 35 20 00    	jmp    QWORD PTR [rip+0x2035b2]        # 604098 <_GLOBAL_OFFSET_TABLE_+0x98>
  400ae6:	68 10 00 00 00       	push   0x10
  400aeb:	e9 e0 fe ff ff       	jmp    4009d0 <_init+0x20>

0000000000400af0 <_Znwm@plt>:
  400af0:	ff 25 aa 35 20 00    	jmp    QWORD PTR [rip+0x2035aa]        # 6040a0 <_GLOBAL_OFFSET_TABLE_+0xa0>
  400af6:	68 11 00 00 00       	push   0x11
  400afb:	e9 d0 fe ff ff       	jmp    4009d0 <_init+0x20>

0000000000400b00 <_Unwind_Resume@plt>:
  400b00:	ff 25 a2 35 20 00    	jmp    QWORD PTR [rip+0x2035a2]        # 6040a8 <_GLOBAL_OFFSET_TABLE_+0xa8>
  400b06:	68 12 00 00 00       	push   0x12
  400b0b:	e9 c0 fe ff ff       	jmp    4009d0 <_init+0x20>

Disassembly of section .plt.got:

0000000000400b10 <.plt.got>:
  400b10:	ff 25 e2 34 20 00    	jmp    QWORD PTR [rip+0x2034e2]        # 603ff8 <_DYNAMIC+0x200>
  400b16:	66 90                	xchg   ax,ax

Disassembly of section .text:

0000000000400b20 <_start>:
  400b20:	31 ed                	xor    ebp,ebp
  400b22:	49 89 d1             	mov    r9,rdx
  400b25:	5e                   	pop    rsi
  400b26:	48 89 e2             	mov    rdx,rsp
  400b29:	48 83 e4 f0          	and    rsp,0xfffffffffffffff0
  400b2d:	50                   	push   rax
  400b2e:	54                   	push   rsp
  400b2f:	49 c7 c0 60 21 40 00 	mov    r8,0x402160
  400b36:	48 c7 c1 f0 20 40 00 	mov    rcx,0x4020f0
  400b3d:	48 c7 c7 16 0c 40 00 	mov    rdi,0x400c16
  400b44:	e8 e7 fe ff ff       	call   400a30 <__libc_start_main@plt>
  400b49:	f4                   	hlt    
  400b4a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000400b50 <deregister_tm_clones>:
  400b50:	b8 c7 40 60 00       	mov    eax,0x6040c7
  400b55:	55                   	push   rbp
  400b56:	48 2d c0 40 60 00    	sub    rax,0x6040c0
  400b5c:	48 83 f8 0e          	cmp    rax,0xe
  400b60:	48 89 e5             	mov    rbp,rsp
  400b63:	76 1b                	jbe    400b80 <deregister_tm_clones+0x30>
  400b65:	b8 00 00 00 00       	mov    eax,0x0
  400b6a:	48 85 c0             	test   rax,rax
  400b6d:	74 11                	je     400b80 <deregister_tm_clones+0x30>
  400b6f:	5d                   	pop    rbp
  400b70:	bf c0 40 60 00       	mov    edi,0x6040c0
  400b75:	ff e0                	jmp    rax
  400b77:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
  400b7e:	00 00 
  400b80:	5d                   	pop    rbp
  400b81:	c3                   	ret    
  400b82:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
  400b86:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  400b8d:	00 00 00 

0000000000400b90 <register_tm_clones>:
  400b90:	be c0 40 60 00       	mov    esi,0x6040c0
  400b95:	55                   	push   rbp
  400b96:	48 81 ee c0 40 60 00 	sub    rsi,0x6040c0
  400b9d:	48 c1 fe 03          	sar    rsi,0x3
  400ba1:	48 89 e5             	mov    rbp,rsp
  400ba4:	48 89 f0             	mov    rax,rsi
  400ba7:	48 c1 e8 3f          	shr    rax,0x3f
  400bab:	48 01 c6             	add    rsi,rax
  400bae:	48 d1 fe             	sar    rsi,1
  400bb1:	74 15                	je     400bc8 <register_tm_clones+0x38>
  400bb3:	b8 00 00 00 00       	mov    eax,0x0
  400bb8:	48 85 c0             	test   rax,rax
  400bbb:	74 0b                	je     400bc8 <register_tm_clones+0x38>
  400bbd:	5d                   	pop    rbp
  400bbe:	bf c0 40 60 00       	mov    edi,0x6040c0
  400bc3:	ff e0                	jmp    rax
  400bc5:	0f 1f 00             	nop    DWORD PTR [rax]
  400bc8:	5d                   	pop    rbp
  400bc9:	c3                   	ret    
  400bca:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000400bd0 <__do_global_dtors_aux>:
  400bd0:	80 3d 19 37 20 00 00 	cmp    BYTE PTR [rip+0x203719],0x0        # 6042f0 <completed.6979>
  400bd7:	75 11                	jne    400bea <__do_global_dtors_aux+0x1a>
  400bd9:	55                   	push   rbp
  400bda:	48 89 e5             	mov    rbp,rsp
  400bdd:	e8 6e ff ff ff       	call   400b50 <deregister_tm_clones>
  400be2:	5d                   	pop    rbp
  400be3:	c6 05 06 37 20 00 01 	mov    BYTE PTR [rip+0x203706],0x1        # 6042f0 <completed.6979>
  400bea:	f3 c3                	repz ret 
  400bec:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000400bf0 <frame_dummy>:
  400bf0:	bf f0 3d 60 00       	mov    edi,0x603df0
  400bf5:	48 83 3f 00          	cmp    QWORD PTR [rdi],0x0
  400bf9:	75 05                	jne    400c00 <frame_dummy+0x10>
  400bfb:	eb 93                	jmp    400b90 <register_tm_clones>
  400bfd:	0f 1f 00             	nop    DWORD PTR [rax]
  400c00:	b8 00 00 00 00       	mov    eax,0x0
  400c05:	48 85 c0             	test   rax,rax
  400c08:	74 f1                	je     400bfb <frame_dummy+0xb>
  400c0a:	55                   	push   rbp
  400c0b:	48 89 e5             	mov    rbp,rsp
  400c0e:	ff d0                	call   rax
  400c10:	5d                   	pop    rbp
  400c11:	e9 7a ff ff ff       	jmp    400b90 <register_tm_clones>

0000000000400c16 <main>:
  400c16:	55                   	push   rbp
  400c17:	48 89 e5             	mov    rbp,rsp
  400c1a:	41 55                	push   r13
  400c1c:	41 54                	push   r12
  400c1e:	53                   	push   rbx
  400c1f:	48 81 ec 98 00 00 00 	sub    rsp,0x98
  400c26:	48 8d 85 60 ff ff ff 	lea    rax,[rbp-0xa0]
  400c2d:	48 89 c7             	mov    rdi,rax
  400c30:	e8 b3 03 00 00       	call   400fe8 <_ZNSt6vectorIiSaIiEEC1Ev>
  400c35:	be 75 21 40 00       	mov    esi,0x402175
  400c3a:	bf e0 41 60 00       	mov    edi,0x6041e0
  400c3f:	e8 1c fe ff ff       	call   400a60 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
  400c44:	48 8d 85 5c ff ff ff 	lea    rax,[rbp-0xa4]
  400c4b:	48 89 c6             	mov    rsi,rax
  400c4e:	bf c0 40 60 00       	mov    edi,0x6040c0
  400c53:	e8 28 fe ff ff       	call   400a80 <_ZNSirsERi@plt>
  400c58:	48 89 c2             	mov    rdx,rax
  400c5b:	48 8d 85 58 ff ff ff 	lea    rax,[rbp-0xa8]
  400c62:	48 89 c6             	mov    rsi,rax
  400c65:	48 89 d7             	mov    rdi,rdx
  400c68:	e8 13 fe ff ff       	call   400a80 <_ZNSirsERi@plt>
  400c6d:	be 81 21 40 00       	mov    esi,0x402181
  400c72:	bf e0 41 60 00       	mov    edi,0x6041e0
  400c77:	e8 e4 fd ff ff       	call   400a60 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
  400c7c:	be c0 0a 40 00       	mov    esi,0x400ac0
  400c81:	48 89 c7             	mov    rdi,rax
  400c84:	e8 07 fe ff ff       	call   400a90 <_ZNSolsEPFRSoS_E@plt>
  400c89:	c7 45 dc 00 00 00 00 	mov    DWORD PTR [rbp-0x24],0x0
  400c90:	8b 95 5c ff ff ff    	mov    edx,DWORD PTR [rbp-0xa4]
  400c96:	8b 85 58 ff ff ff    	mov    eax,DWORD PTR [rbp-0xa8]
  400c9c:	0f af c2             	imul   eax,edx
  400c9f:	3b 45 dc             	cmp    eax,DWORD PTR [rbp-0x24]
  400ca2:	7e 33                	jle    400cd7 <main+0xc1>
  400ca4:	48 8d 85 54 ff ff ff 	lea    rax,[rbp-0xac]
  400cab:	48 89 c6             	mov    rsi,rax
  400cae:	bf c0 40 60 00       	mov    edi,0x6040c0
  400cb3:	e8 c8 fd ff ff       	call   400a80 <_ZNSirsERi@plt>
  400cb8:	48 8d 95 54 ff ff ff 	lea    rdx,[rbp-0xac]
  400cbf:	48 8d 85 60 ff ff ff 	lea    rax,[rbp-0xa0]
  400cc6:	48 89 d6             	mov    rsi,rdx
  400cc9:	48 89 c7             	mov    rdi,rax
  400ccc:	e8 77 03 00 00       	call   401048 <_ZNSt6vectorIiSaIiEE9push_backERKi>
  400cd1:	83 45 dc 01          	add    DWORD PTR [rbp-0x24],0x1
  400cd5:	eb b9                	jmp    400c90 <main+0x7a>
  400cd7:	8b 9d 58 ff ff ff    	mov    ebx,DWORD PTR [rbp-0xa8]
  400cdd:	48 8d 95 60 ff ff ff 	lea    rdx,[rbp-0xa0]
  400ce4:	48 8d 45 80          	lea    rax,[rbp-0x80]
  400ce8:	48 89 d6             	mov    rsi,rdx
  400ceb:	48 89 c7             	mov    rdi,rax
  400cee:	e8 c1 03 00 00       	call   4010b4 <_ZNSt6vectorIiSaIiEEC1ERKS1_>
  400cf3:	48 8d 45 80          	lea    rax,[rbp-0x80]
  400cf7:	89 de                	mov    esi,ebx
  400cf9:	48 89 c7             	mov    rdi,rax
  400cfc:	e8 e8 00 00 00       	call   400de9 <_Z11show_matrixSt6vectorIiSaIiEEi>
  400d01:	48 8d 45 80          	lea    rax,[rbp-0x80]
  400d05:	48 89 c7             	mov    rdi,rax
  400d08:	e8 f7 02 00 00       	call   401004 <_ZNSt6vectorIiSaIiEED1Ev>
  400d0d:	8b 9d 5c ff ff ff    	mov    ebx,DWORD PTR [rbp-0xa4]
  400d13:	44 8b ad 58 ff ff ff 	mov    r13d,DWORD PTR [rbp-0xa8]
  400d1a:	44 8b a5 5c ff ff ff 	mov    r12d,DWORD PTR [rbp-0xa4]
  400d21:	48 8d 95 60 ff ff ff 	lea    rdx,[rbp-0xa0]
  400d28:	48 8d 45 c0          	lea    rax,[rbp-0x40]
  400d2c:	48 89 d6             	mov    rsi,rdx
  400d2f:	48 89 c7             	mov    rdi,rax
  400d32:	e8 7d 03 00 00       	call   4010b4 <_ZNSt6vectorIiSaIiEEC1ERKS1_>
  400d37:	48 8d 45 a0          	lea    rax,[rbp-0x60]
  400d3b:	48 8d 75 c0          	lea    rsi,[rbp-0x40]
  400d3f:	44 89 e9             	mov    ecx,r13d
  400d42:	44 89 e2             	mov    edx,r12d
  400d45:	48 89 c7             	mov    rdi,rax
  400d48:	e8 48 01 00 00       	call   400e95 <_Z12matrix_clockSt6vectorIiSaIiEEii>
  400d4d:	48 8d 45 a0          	lea    rax,[rbp-0x60]
  400d51:	89 de                	mov    esi,ebx
  400d53:	48 89 c7             	mov    rdi,rax
  400d56:	e8 8e 00 00 00       	call   400de9 <_Z11show_matrixSt6vectorIiSaIiEEi>
  400d5b:	48 8d 45 a0          	lea    rax,[rbp-0x60]
  400d5f:	48 89 c7             	mov    rdi,rax
  400d62:	e8 9d 02 00 00       	call   401004 <_ZNSt6vectorIiSaIiEED1Ev>
  400d67:	48 8d 45 c0          	lea    rax,[rbp-0x40]
  400d6b:	48 89 c7             	mov    rdi,rax
  400d6e:	e8 91 02 00 00       	call   401004 <_ZNSt6vectorIiSaIiEED1Ev>
  400d73:	bb 00 00 00 00       	mov    ebx,0x0
  400d78:	48 8d 85 60 ff ff ff 	lea    rax,[rbp-0xa0]
  400d7f:	48 89 c7             	mov    rdi,rax
  400d82:	e8 7d 02 00 00       	call   401004 <_ZNSt6vectorIiSaIiEED1Ev>
  400d87:	89 d8                	mov    eax,ebx
  400d89:	eb 50                	jmp    400ddb <main+0x1c5>
  400d8b:	48 89 c3             	mov    rbx,rax
  400d8e:	48 8d 45 80          	lea    rax,[rbp-0x80]
  400d92:	48 89 c7             	mov    rdi,rax
  400d95:	e8 6a 02 00 00       	call   401004 <_ZNSt6vectorIiSaIiEED1Ev>
  400d9a:	eb 25                	jmp    400dc1 <main+0x1ab>
  400d9c:	48 89 c3             	mov    rbx,rax
  400d9f:	48 8d 45 a0          	lea    rax,[rbp-0x60]
  400da3:	48 89 c7             	mov    rdi,rax
  400da6:	e8 59 02 00 00       	call   401004 <_ZNSt6vectorIiSaIiEED1Ev>
  400dab:	eb 03                	jmp    400db0 <main+0x19a>
  400dad:	48 89 c3             	mov    rbx,rax
  400db0:	48 8d 45 c0          	lea    rax,[rbp-0x40]
  400db4:	48 89 c7             	mov    rdi,rax
  400db7:	e8 48 02 00 00       	call   401004 <_ZNSt6vectorIiSaIiEED1Ev>
  400dbc:	eb 03                	jmp    400dc1 <main+0x1ab>
  400dbe:	48 89 c3             	mov    rbx,rax
  400dc1:	48 8d 85 60 ff ff ff 	lea    rax,[rbp-0xa0]
  400dc8:	48 89 c7             	mov    rdi,rax
  400dcb:	e8 34 02 00 00       	call   401004 <_ZNSt6vectorIiSaIiEED1Ev>
  400dd0:	48 89 d8             	mov    rax,rbx
  400dd3:	48 89 c7             	mov    rdi,rax
  400dd6:	e8 25 fd ff ff       	call   400b00 <_Unwind_Resume@plt>
  400ddb:	48 81 c4 98 00 00 00 	add    rsp,0x98
  400de2:	5b                   	pop    rbx
  400de3:	41 5c                	pop    r12
  400de5:	41 5d                	pop    r13
  400de7:	5d                   	pop    rbp
  400de8:	c3                   	ret    

0000000000400de9 <_Z11show_matrixSt6vectorIiSaIiEEi>:
  400de9:	55                   	push   rbp
  400dea:	48 89 e5             	mov    rbp,rsp
  400ded:	53                   	push   rbx
  400dee:	48 83 ec 28          	sub    rsp,0x28
  400df2:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
  400df6:	89 75 d4             	mov    DWORD PTR [rbp-0x2c],esi
  400df9:	be 96 21 40 00       	mov    esi,0x402196
  400dfe:	bf e0 41 60 00       	mov    edi,0x6041e0
  400e03:	e8 58 fc ff ff       	call   400a60 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
  400e08:	be c0 0a 40 00       	mov    esi,0x400ac0
  400e0d:	48 89 c7             	mov    rdi,rax
  400e10:	e8 7b fc ff ff       	call   400a90 <_ZNSolsEPFRSoS_E@plt>
  400e15:	c7 45 ec 00 00 00 00 	mov    DWORD PTR [rbp-0x14],0x0
  400e1c:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
  400e1f:	48 63 d8             	movsxd rbx,eax
  400e22:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
  400e26:	48 89 c7             	mov    rdi,rax
  400e29:	e8 76 03 00 00       	call   4011a4 <_ZNKSt6vectorIiSaIiEE4sizeEv>
  400e2e:	48 39 c3             	cmp    rbx,rax
  400e31:	0f 92 c0             	setb   al
  400e34:	84 c0                	test   al,al
  400e36:	74 55                	je     400e8d <_Z11show_matrixSt6vectorIiSaIiEEi+0xa4>
  400e38:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
  400e3b:	48 63 d0             	movsxd rdx,eax
  400e3e:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
  400e42:	48 89 d6             	mov    rsi,rdx
  400e45:	48 89 c7             	mov    rdi,rax
  400e48:	e8 7d 03 00 00       	call   4011ca <_ZNSt6vectorIiSaIiEEixEm>
  400e4d:	8b 00                	mov    eax,DWORD PTR [rax]
  400e4f:	89 c6                	mov    esi,eax
  400e51:	bf e0 41 60 00       	mov    edi,0x6041e0
  400e56:	e8 95 fb ff ff       	call   4009f0 <_ZNSolsEi@plt>
  400e5b:	be a1 21 40 00       	mov    esi,0x4021a1
  400e60:	48 89 c7             	mov    rdi,rax
  400e63:	e8 f8 fb ff ff       	call   400a60 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
  400e68:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
  400e6b:	83 c0 01             	add    eax,0x1
  400e6e:	99                   	cdq    
  400e6f:	f7 7d d4             	idiv   DWORD PTR [rbp-0x2c]
  400e72:	89 d0                	mov    eax,edx
  400e74:	85 c0                	test   eax,eax
  400e76:	75 0f                	jne    400e87 <_Z11show_matrixSt6vectorIiSaIiEEi+0x9e>
  400e78:	be c0 0a 40 00       	mov    esi,0x400ac0
  400e7d:	bf e0 41 60 00       	mov    edi,0x6041e0
  400e82:	e8 09 fc ff ff       	call   400a90 <_ZNSolsEPFRSoS_E@plt>
  400e87:	83 45 ec 01          	add    DWORD PTR [rbp-0x14],0x1
  400e8b:	eb 8f                	jmp    400e1c <_Z11show_matrixSt6vectorIiSaIiEEi+0x33>
  400e8d:	90                   	nop
  400e8e:	48 83 c4 28          	add    rsp,0x28
  400e92:	5b                   	pop    rbx
  400e93:	5d                   	pop    rbp
  400e94:	c3                   	ret    

0000000000400e95 <_Z12matrix_clockSt6vectorIiSaIiEEii>:
  400e95:	55                   	push   rbp
  400e96:	48 89 e5             	mov    rbp,rsp
  400e99:	53                   	push   rbx
  400e9a:	48 83 ec 38          	sub    rsp,0x38
  400e9e:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
  400ea2:	48 89 75 d0          	mov    QWORD PTR [rbp-0x30],rsi
  400ea6:	89 55 cc             	mov    DWORD PTR [rbp-0x34],edx
  400ea9:	89 4d c8             	mov    DWORD PTR [rbp-0x38],ecx
  400eac:	48 8d 45 eb          	lea    rax,[rbp-0x15]
  400eb0:	48 89 c7             	mov    rdi,rax
  400eb3:	e8 32 03 00 00       	call   4011ea <_ZNSaIiEC1Ev>
  400eb8:	8b 45 cc             	mov    eax,DWORD PTR [rbp-0x34]
  400ebb:	0f af 45 c8          	imul   eax,DWORD PTR [rbp-0x38]
  400ebf:	48 63 c8             	movsxd rcx,eax
  400ec2:	48 8d 55 eb          	lea    rdx,[rbp-0x15]
  400ec6:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
  400eca:	48 89 ce             	mov    rsi,rcx
  400ecd:	48 89 c7             	mov    rdi,rax
  400ed0:	e8 4d 03 00 00       	call   401222 <_ZNSt6vectorIiSaIiEEC1EmRKS0_>
  400ed5:	48 8d 45 eb          	lea    rax,[rbp-0x15]
  400ed9:	48 89 c7             	mov    rdi,rax
  400edc:	e8 25 03 00 00       	call   401206 <_ZNSaIiED1Ev>
  400ee1:	c7 45 ec 00 00 00 00 	mov    DWORD PTR [rbp-0x14],0x0
  400ee8:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
  400eeb:	48 63 d8             	movsxd rbx,eax
  400eee:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
  400ef2:	48 89 c7             	mov    rdi,rax
  400ef5:	e8 aa 02 00 00       	call   4011a4 <_ZNKSt6vectorIiSaIiEE4sizeEv>
  400efa:	48 39 c3             	cmp    rbx,rax
  400efd:	0f 92 c0             	setb   al
  400f00:	84 c0                	test   al,al
  400f02:	74 73                	je     400f77 <_Z12matrix_clockSt6vectorIiSaIiEEii+0xe2>
  400f04:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
  400f07:	0f af 45 c8          	imul   eax,DWORD PTR [rbp-0x38]
  400f0b:	8b 55 cc             	mov    edx,DWORD PTR [rbp-0x34]
  400f0e:	89 d1                	mov    ecx,edx
  400f10:	0f af 4d c8          	imul   ecx,DWORD PTR [rbp-0x38]
  400f14:	99                   	cdq    
  400f15:	f7 f9                	idiv   ecx
  400f17:	89 d0                	mov    eax,edx
  400f19:	48 63 d0             	movsxd rdx,eax
  400f1c:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
  400f20:	48 89 d6             	mov    rsi,rdx
  400f23:	48 89 c7             	mov    rdi,rax
  400f26:	e8 9f 02 00 00       	call   4011ca <_ZNSt6vectorIiSaIiEEixEm>
  400f2b:	48 89 c2             	mov    rdx,rax
  400f2e:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
  400f32:	48 89 d6             	mov    rsi,rdx
  400f35:	48 89 c7             	mov    rdi,rax
  400f38:	e8 0b 01 00 00       	call   401048 <_ZNSt6vectorIiSaIiEE9push_backERKi>
  400f3d:	83 45 ec 01          	add    DWORD PTR [rbp-0x14],0x1
  400f41:	eb a5                	jmp    400ee8 <_Z12matrix_clockSt6vectorIiSaIiEEii+0x53>
  400f43:	48 89 c3             	mov    rbx,rax
  400f46:	48 8d 45 eb          	lea    rax,[rbp-0x15]
  400f4a:	48 89 c7             	mov    rdi,rax
  400f4d:	e8 b4 02 00 00       	call   401206 <_ZNSaIiED1Ev>
  400f52:	48 89 d8             	mov    rax,rbx
  400f55:	48 89 c7             	mov    rdi,rax
  400f58:	e8 a3 fb ff ff       	call   400b00 <_Unwind_Resume@plt>
  400f5d:	48 89 c3             	mov    rbx,rax
  400f60:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
  400f64:	48 89 c7             	mov    rdi,rax
  400f67:	e8 98 00 00 00       	call   401004 <_ZNSt6vectorIiSaIiEED1Ev>
  400f6c:	48 89 d8             	mov    rax,rbx
  400f6f:	48 89 c7             	mov    rdi,rax
  400f72:	e8 89 fb ff ff       	call   400b00 <_Unwind_Resume@plt>
  400f77:	90                   	nop
  400f78:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
  400f7c:	48 83 c4 38          	add    rsp,0x38
  400f80:	5b                   	pop    rbx
  400f81:	5d                   	pop    rbp
  400f82:	c3                   	ret    

0000000000400f83 <_Z41__static_initialization_and_destruction_0ii>:
  400f83:	55                   	push   rbp
  400f84:	48 89 e5             	mov    rbp,rsp
  400f87:	48 83 ec 10          	sub    rsp,0x10
  400f8b:	89 7d fc             	mov    DWORD PTR [rbp-0x4],edi
  400f8e:	89 75 f8             	mov    DWORD PTR [rbp-0x8],esi
  400f91:	83 7d fc 01          	cmp    DWORD PTR [rbp-0x4],0x1
  400f95:	75 27                	jne    400fbe <_Z41__static_initialization_and_destruction_0ii+0x3b>
  400f97:	81 7d f8 ff ff 00 00 	cmp    DWORD PTR [rbp-0x8],0xffff
  400f9e:	75 1e                	jne    400fbe <_Z41__static_initialization_and_destruction_0ii+0x3b>
  400fa0:	bf f1 42 60 00       	mov    edi,0x6042f1
  400fa5:	e8 76 fa ff ff       	call   400a20 <_ZNSt8ios_base4InitC1Ev@plt>
  400faa:	ba b8 40 60 00       	mov    edx,0x6040b8
  400faf:	be f1 42 60 00       	mov    esi,0x6042f1
  400fb4:	bf 50 0a 40 00       	mov    edi,0x400a50
  400fb9:	e8 82 fa ff ff       	call   400a40 <__cxa_atexit@plt>
  400fbe:	90                   	nop
  400fbf:	c9                   	leave  
  400fc0:	c3                   	ret    

0000000000400fc1 <_GLOBAL__sub_I_main>:
  400fc1:	55                   	push   rbp
  400fc2:	48 89 e5             	mov    rbp,rsp
  400fc5:	be ff ff 00 00       	mov    esi,0xffff
  400fca:	bf 01 00 00 00       	mov    edi,0x1
  400fcf:	e8 af ff ff ff       	call   400f83 <_Z41__static_initialization_and_destruction_0ii>
  400fd4:	5d                   	pop    rbp
  400fd5:	c3                   	ret    

0000000000400fd6 <_ZnwmPv>:
  400fd6:	55                   	push   rbp
  400fd7:	48 89 e5             	mov    rbp,rsp
  400fda:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
  400fde:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
  400fe2:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
  400fe6:	5d                   	pop    rbp
  400fe7:	c3                   	ret    

0000000000400fe8 <_ZNSt6vectorIiSaIiEEC1Ev>:
  400fe8:	55                   	push   rbp
  400fe9:	48 89 e5             	mov    rbp,rsp
  400fec:	48 83 ec 10          	sub    rsp,0x10
  400ff0:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
  400ff4:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  400ff8:	48 89 c7             	mov    rdi,rax
  400ffb:	e8 a0 02 00 00       	call   4012a0 <_ZNSt12_Vector_baseIiSaIiEEC1Ev>
  401000:	90                   	nop
  401001:	c9                   	leave  
  401002:	c3                   	ret    
  401003:	90                   	nop

0000000000401004 <_ZNSt6vectorIiSaIiEED1Ev>:
  401004:	55                   	push   rbp
  401005:	48 89 e5             	mov    rbp,rsp
  401008:	48 83 ec 10          	sub    rsp,0x10
  40100c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
  401010:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  401014:	48 89 c7             	mov    rdi,rax
  401017:	e8 f0 02 00 00       	call   40130c <_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv>
  40101c:	48 89 c2             	mov    rdx,rax
  40101f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  401023:	48 8b 48 08          	mov    rcx,QWORD PTR [rax+0x8]
  401027:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  40102b:	48 8b 00             	mov    rax,QWORD PTR [rax]
  40102e:	48 89 ce             	mov    rsi,rcx
  401031:	48 89 c7             	mov    rdi,rax
  401034:	e8 e1 02 00 00       	call   40131a <_ZSt8_DestroyIPiiEvT_S1_RSaIT0_E>
  401039:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  40103d:	48 89 c7             	mov    rdi,rax
  401040:	e8 77 02 00 00       	call   4012bc <_ZNSt12_Vector_baseIiSaIiEED1Ev>
  401045:	90                   	nop
  401046:	c9                   	leave  
  401047:	c3                   	ret    

0000000000401048 <_ZNSt6vectorIiSaIiEE9push_backERKi>:
  401048:	55                   	push   rbp
  401049:	48 89 e5             	mov    rbp,rsp
  40104c:	48 83 ec 10          	sub    rsp,0x10
  401050:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
  401054:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
  401058:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  40105c:	48 8b 50 08          	mov    rdx,QWORD PTR [rax+0x8]
  401060:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  401064:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
  401068:	48 39 c2             	cmp    rdx,rax
  40106b:	74 31                	je     40109e <_ZNSt6vectorIiSaIiEE9push_backERKi+0x56>
  40106d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  401071:	48 8b 48 08          	mov    rcx,QWORD PTR [rax+0x8]
  401075:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  401079:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
  40107d:	48 89 ce             	mov    rsi,rcx
  401080:	48 89 c7             	mov    rdi,rax
  401083:	e8 ca 02 00 00       	call   401352 <_ZNSt16allocator_traitsISaIiEE9constructIiJRKiEEEvRS0_PT_DpOT0_>
  401088:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  40108c:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
  401090:	48 8d 50 04          	lea    rdx,[rax+0x4]
  401094:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  401098:	48 89 50 08          	mov    QWORD PTR [rax+0x8],rdx
  40109c:	eb 13                	jmp    4010b1 <_ZNSt6vectorIiSaIiEE9push_backERKi+0x69>
  40109e:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
  4010a2:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  4010a6:	48 89 d6             	mov    rsi,rdx
  4010a9:	48 89 c7             	mov    rdi,rax
  4010ac:	e8 db 02 00 00       	call   40138c <_ZNSt6vectorIiSaIiEE19_M_emplace_back_auxIJRKiEEEvDpOT_>
  4010b1:	90                   	nop
  4010b2:	c9                   	leave  
  4010b3:	c3                   	ret    

00000000004010b4 <_ZNSt6vectorIiSaIiEEC1ERKS1_>:
  4010b4:	55                   	push   rbp
  4010b5:	48 89 e5             	mov    rbp,rsp
  4010b8:	41 55                	push   r13
  4010ba:	41 54                	push   r12
  4010bc:	53                   	push   rbx
  4010bd:	48 83 ec 28          	sub    rsp,0x28
  4010c1:	48 89 7d c8          	mov    QWORD PTR [rbp-0x38],rdi
  4010c5:	48 89 75 c0          	mov    QWORD PTR [rbp-0x40],rsi
  4010c9:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
  4010cd:	48 89 c7             	mov    rdi,rax
  4010d0:	e8 cb 04 00 00       	call   4015a0 <_ZNKSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv>
  4010d5:	48 89 c2             	mov    rdx,rax
  4010d8:	48 8d 45 df          	lea    rax,[rbp-0x21]
  4010dc:	48 89 d6             	mov    rsi,rdx
  4010df:	48 89 c7             	mov    rdi,rax
  4010e2:	e8 8f 04 00 00       	call   401576 <_ZN9__gnu_cxx14__alloc_traitsISaIiEE17_S_select_on_copyERKS1_>
  4010e7:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
  4010eb:	48 89 c7             	mov    rdi,rax
  4010ee:	e8 b1 00 00 00       	call   4011a4 <_ZNKSt6vectorIiSaIiEE4sizeEv>
  4010f3:	48 89 c1             	mov    rcx,rax
  4010f6:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
  4010fa:	48 8d 55 df          	lea    rdx,[rbp-0x21]
  4010fe:	48 89 ce             	mov    rsi,rcx
  401101:	48 89 c7             	mov    rdi,rax
  401104:	e8 a5 04 00 00       	call   4015ae <_ZNSt12_Vector_baseIiSaIiEEC1EmRKS0_>
  401109:	48 8d 45 df          	lea    rax,[rbp-0x21]
  40110d:	48 89 c7             	mov    rdi,rax
  401110:	e8 f1 00 00 00       	call   401206 <_ZNSaIiED1Ev>
  401115:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
  401119:	48 89 c7             	mov    rdi,rax
  40111c:	e8 eb 01 00 00       	call   40130c <_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv>
  401121:	49 89 c5             	mov    r13,rax
  401124:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
  401128:	48 8b 18             	mov    rbx,QWORD PTR [rax]
  40112b:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
  40112f:	48 89 c7             	mov    rdi,rax
  401132:	e8 05 05 00 00       	call   40163c <_ZNKSt6vectorIiSaIiEE3endEv>
  401137:	49 89 c4             	mov    r12,rax
  40113a:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
  40113e:	48 89 c7             	mov    rdi,rax
  401141:	e8 c6 04 00 00       	call   40160c <_ZNKSt6vectorIiSaIiEE5beginEv>
  401146:	4c 89 e9             	mov    rcx,r13
  401149:	48 89 da             	mov    rdx,rbx
  40114c:	4c 89 e6             	mov    rsi,r12
  40114f:	48 89 c7             	mov    rdi,rax
  401152:	e8 16 05 00 00       	call   40166d <_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiiET0_T_SA_S9_RSaIT1_E>
  401157:	48 89 c2             	mov    rdx,rax
  40115a:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
  40115e:	48 89 50 08          	mov    QWORD PTR [rax+0x8],rdx
  401162:	eb 34                	jmp    401198 <_ZNSt6vectorIiSaIiEEC1ERKS1_+0xe4>
  401164:	48 89 c3             	mov    rbx,rax
  401167:	48 8d 45 df          	lea    rax,[rbp-0x21]
  40116b:	48 89 c7             	mov    rdi,rax
  40116e:	e8 93 00 00 00       	call   401206 <_ZNSaIiED1Ev>
  401173:	48 89 d8             	mov    rax,rbx
  401176:	48 89 c7             	mov    rdi,rax
  401179:	e8 82 f9 ff ff       	call   400b00 <_Unwind_Resume@plt>
  40117e:	48 89 c3             	mov    rbx,rax
  401181:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
  401185:	48 89 c7             	mov    rdi,rax
  401188:	e8 2f 01 00 00       	call   4012bc <_ZNSt12_Vector_baseIiSaIiEED1Ev>
  40118d:	48 89 d8             	mov    rax,rbx
  401190:	48 89 c7             	mov    rdi,rax
  401193:	e8 68 f9 ff ff       	call   400b00 <_Unwind_Resume@plt>
  401198:	48 83 c4 28          	add    rsp,0x28
  40119c:	5b                   	pop    rbx
  40119d:	41 5c                	pop    r12
  40119f:	41 5d                	pop    r13
  4011a1:	5d                   	pop    rbp
  4011a2:	c3                   	ret    
  4011a3:	90                   	nop

00000000004011a4 <_ZNKSt6vectorIiSaIiEE4sizeEv>:
  4011a4:	55                   	push   rbp
  4011a5:	48 89 e5             	mov    rbp,rsp
  4011a8:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
  4011ac:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  4011b0:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
  4011b4:	48 89 c2             	mov    rdx,rax
  4011b7:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  4011bb:	48 8b 00             	mov    rax,QWORD PTR [rax]
  4011be:	48 29 c2             	sub    rdx,rax
  4011c1:	48 89 d0             	mov    rax,rdx
  4011c4:	48 c1 f8 02          	sar    rax,0x2
  4011c8:	5d                   	pop    rbp
  4011c9:	c3                   	ret    

00000000004011ca <_ZNSt6vectorIiSaIiEEixEm>:
  4011ca:	55                   	push   rbp
  4011cb:	48 89 e5             	mov    rbp,rsp
  4011ce:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
  4011d2:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
  4011d6:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  4011da:	48 8b 00             	mov    rax,QWORD PTR [rax]
  4011dd:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
  4011e1:	48 c1 e2 02          	shl    rdx,0x2
  4011e5:	48 01 d0             	add    rax,rdx
  4011e8:	5d                   	pop    rbp
  4011e9:	c3                   	ret    

00000000004011ea <_ZNSaIiEC1Ev>:
  4011ea:	55                   	push   rbp
  4011eb:	48 89 e5             	mov    rbp,rsp
  4011ee:	48 83 ec 10          	sub    rsp,0x10
  4011f2:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
  4011f6:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  4011fa:	48 89 c7             	mov    rdi,rax
  4011fd:	e8 9c 04 00 00       	call   40169e <_ZN9__gnu_cxx13new_allocatorIiEC1Ev>
  401202:	90                   	nop
  401203:	c9                   	leave  
  401204:	c3                   	ret    
  401205:	90                   	nop

0000000000401206 <_ZNSaIiED1Ev>:
  401206:	55                   	push   rbp
  401207:	48 89 e5             	mov    rbp,rsp
  40120a:	48 83 ec 10          	sub    rsp,0x10
  40120e:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
  401212:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  401216:	48 89 c7             	mov    rdi,rax
  401219:	e8 8c 04 00 00       	call   4016aa <_ZN9__gnu_cxx13new_allocatorIiED1Ev>
  40121e:	90                   	nop
  40121f:	c9                   	leave  
  401220:	c3                   	ret    
  401221:	90                   	nop

0000000000401222 <_ZNSt6vectorIiSaIiEEC1EmRKS0_>:
  401222:	55                   	push   rbp
  401223:	48 89 e5             	mov    rbp,rsp
  401226:	53                   	push   rbx
  401227:	48 83 ec 28          	sub    rsp,0x28
  40122b:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
  40122f:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
  401233:	48 89 55 d8          	mov    QWORD PTR [rbp-0x28],rdx
  401237:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  40123b:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
  40123f:	48 8b 4d e0          	mov    rcx,QWORD PTR [rbp-0x20]
  401243:	48 89 ce             	mov    rsi,rcx
  401246:	48 89 c7             	mov    rdi,rax
  401249:	e8 60 03 00 00       	call   4015ae <_ZNSt12_Vector_baseIiSaIiEEC1EmRKS0_>
  40124e:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
  401252:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  401256:	48 89 d6             	mov    rsi,rdx
  401259:	48 89 c7             	mov    rdi,rax
  40125c:	e8 55 04 00 00       	call   4016b6 <_ZNSt6vectorIiSaIiEE21_M_default_initializeEm>
  401261:	eb 1a                	jmp    40127d <_ZNSt6vectorIiSaIiEEC1EmRKS0_+0x5b>
  401263:	48 89 c3             	mov    rbx,rax
  401266:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  40126a:	48 89 c7             	mov    rdi,rax
  40126d:	e8 4a 00 00 00       	call   4012bc <_ZNSt12_Vector_baseIiSaIiEED1Ev>
  401272:	48 89 d8             	mov    rax,rbx
  401275:	48 89 c7             	mov    rdi,rax
  401278:	e8 83 f8 ff ff       	call   400b00 <_Unwind_Resume@plt>
  40127d:	48 83 c4 28          	add    rsp,0x28
  401281:	5b                   	pop    rbx
  401282:	5d                   	pop    rbp
  401283:	c3                   	ret    

0000000000401284 <_ZNSt12_Vector_baseIiSaIiEE12_Vector_implD1Ev>:
  401284:	55                   	push   rbp
  401285:	48 89 e5             	mov    rbp,rsp
  401288:	48 83 ec 10          	sub    rsp,0x10
  40128c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
  401290:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  401294:	48 89 c7             	mov    rdi,rax
  401297:	e8 6a ff ff ff       	call   401206 <_ZNSaIiED1Ev>
  40129c:	90                   	nop
  40129d:	c9                   	leave  
  40129e:	c3                   	ret    
  40129f:	90                   	nop

00000000004012a0 <_ZNSt12_Vector_baseIiSaIiEEC1Ev>:
  4012a0:	55                   	push   rbp
  4012a1:	48 89 e5             	mov    rbp,rsp
  4012a4:	48 83 ec 10          	sub    rsp,0x10
  4012a8:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
  4012ac:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  4012b0:	48 89 c7             	mov    rdi,rax
  4012b3:	e8 42 04 00 00       	call   4016fa <_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC1Ev>
  4012b8:	90                   	nop
  4012b9:	c9                   	leave  
  4012ba:	c3                   	ret    
  4012bb:	90                   	nop

00000000004012bc <_ZNSt12_Vector_baseIiSaIiEED1Ev>:
  4012bc:	55                   	push   rbp
  4012bd:	48 89 e5             	mov    rbp,rsp
  4012c0:	48 83 ec 10          	sub    rsp,0x10
  4012c4:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
  4012c8:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  4012cc:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
  4012d0:	48 89 c2             	mov    rdx,rax
  4012d3:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  4012d7:	48 8b 00             	mov    rax,QWORD PTR [rax]
  4012da:	48 29 c2             	sub    rdx,rax
  4012dd:	48 89 d0             	mov    rax,rdx
  4012e0:	48 c1 f8 02          	sar    rax,0x2
  4012e4:	48 89 c2             	mov    rdx,rax
  4012e7:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  4012eb:	48 8b 08             	mov    rcx,QWORD PTR [rax]
  4012ee:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  4012f2:	48 89 ce             	mov    rsi,rcx
  4012f5:	48 89 c7             	mov    rdi,rax
  4012f8:	e8 3b 04 00 00       	call   401738 <_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim>
  4012fd:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  401301:	48 89 c7             	mov    rdi,rax
  401304:	e8 7b ff ff ff       	call   401284 <_ZNSt12_Vector_baseIiSaIiEE12_Vector_implD1Ev>
  401309:	90                   	nop
  40130a:	c9                   	leave  
  40130b:	c3                   	ret    

000000000040130c <_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv>:
  40130c:	55                   	push   rbp
  40130d:	48 89 e5             	mov    rbp,rsp
  401310:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
  401314:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  401318:	5d                   	pop    rbp
  401319:	c3                   	ret    

000000000040131a <_ZSt8_DestroyIPiiEvT_S1_RSaIT0_E>:
  40131a:	55                   	push   rbp
  40131b:	48 89 e5             	mov    rbp,rsp
  40131e:	48 83 ec 20          	sub    rsp,0x20
  401322:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
  401326:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
  40132a:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
  40132e:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
  401332:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  401336:	48 89 d6             	mov    rsi,rdx
  401339:	48 89 c7             	mov    rdi,rax
  40133c:	e8 2c 04 00 00       	call   40176d <_ZSt8_DestroyIPiEvT_S1_>
  401341:	90                   	nop
  401342:	c9                   	leave  
  401343:	c3                   	ret    

0000000000401344 <_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE>:
  401344:	55                   	push   rbp
  401345:	48 89 e5             	mov    rbp,rsp
  401348:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
  40134c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  401350:	5d                   	pop    rbp
  401351:	c3                   	ret    

0000000000401352 <_ZNSt16allocator_traitsISaIiEE9constructIiJRKiEEEvRS0_PT_DpOT0_>:
  401352:	55                   	push   rbp
  401353:	48 89 e5             	mov    rbp,rsp
  401356:	48 83 ec 20          	sub    rsp,0x20
  40135a:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
  40135e:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
  401362:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
  401366:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  40136a:	48 89 c7             	mov    rdi,rax
  40136d:	e8 d2 ff ff ff       	call   401344 <_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE>
  401372:	48 89 c2             	mov    rdx,rax
  401375:	48 8b 4d f0          	mov    rcx,QWORD PTR [rbp-0x10]
  401379:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  40137d:	48 89 ce             	mov    rsi,rcx
  401380:	48 89 c7             	mov    rdi,rax
  401383:	e8 0c 04 00 00       	call   401794 <_ZN9__gnu_cxx13new_allocatorIiE9constructIiJRKiEEEvPT_DpOT0_>
  401388:	90                   	nop
  401389:	c9                   	leave  
  40138a:	c3                   	ret    
  40138b:	90                   	nop

000000000040138c <_ZNSt6vectorIiSaIiEE19_M_emplace_back_auxIJRKiEEEvDpOT_>:
  40138c:	55                   	push   rbp
  40138d:	48 89 e5             	mov    rbp,rsp
  401390:	53                   	push   rbx
  401391:	48 83 ec 38          	sub    rsp,0x38
  401395:	48 89 7d c8          	mov    QWORD PTR [rbp-0x38],rdi
  401399:	48 89 75 c0          	mov    QWORD PTR [rbp-0x40],rsi
  40139d:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
  4013a1:	ba a3 21 40 00       	mov    edx,0x4021a3
  4013a6:	be 01 00 00 00       	mov    esi,0x1
  4013ab:	48 89 c7             	mov    rdi,rax
  4013ae:	e8 25 04 00 00       	call   4017d8 <_ZNKSt6vectorIiSaIiEE12_M_check_lenEmPKc>
  4013b3:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
  4013b7:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
  4013bb:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
  4013bf:	48 89 d6             	mov    rsi,rdx
  4013c2:	48 89 c7             	mov    rdi,rax
  4013c5:	e8 d8 04 00 00       	call   4018a2 <_ZNSt12_Vector_baseIiSaIiEE11_M_allocateEm>
  4013ca:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
  4013ce:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
  4013d2:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
  4013d6:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
  4013da:	48 89 c7             	mov    rdi,rax
  4013dd:	e8 62 ff ff ff       	call   401344 <_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE>
  4013e2:	48 89 c3             	mov    rbx,rax
  4013e5:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
  4013e9:	48 89 c7             	mov    rdi,rax
  4013ec:	e8 b3 fd ff ff       	call   4011a4 <_ZNKSt6vectorIiSaIiEE4sizeEv>
  4013f1:	48 8d 14 85 00 00 00 	lea    rdx,[rax*4+0x0]
  4013f8:	00 
  4013f9:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
  4013fd:	48 8d 0c 02          	lea    rcx,[rdx+rax*1]
  401401:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
  401405:	48 89 da             	mov    rdx,rbx
  401408:	48 89 ce             	mov    rsi,rcx
  40140b:	48 89 c7             	mov    rdi,rax
  40140e:	e8 3f ff ff ff       	call   401352 <_ZNSt16allocator_traitsISaIiEE9constructIiJRKiEEEvRS0_PT_DpOT0_>
  401413:	48 c7 45 e8 00 00 00 	mov    QWORD PTR [rbp-0x18],0x0
  40141a:	00 
  40141b:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
  40141f:	48 89 c7             	mov    rdi,rax
  401422:	e8 e5 fe ff ff       	call   40130c <_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv>
  401427:	48 89 c1             	mov    rcx,rax
  40142a:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
  40142e:	48 8b 70 08          	mov    rsi,QWORD PTR [rax+0x8]
  401432:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
  401436:	48 8b 00             	mov    rax,QWORD PTR [rax]
  401439:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
  40143d:	48 89 c7             	mov    rdi,rax
  401440:	e8 90 04 00 00       	call   4018d5 <_ZSt34__uninitialized_move_if_noexcept_aIPiS0_SaIiEET0_T_S3_S2_RT1_>
  401445:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
  401449:	48 83 45 e8 04       	add    QWORD PTR [rbp-0x18],0x4
  40144e:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
  401452:	48 89 c7             	mov    rdi,rax
  401455:	e8 b2 fe ff ff       	call   40130c <_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv>
  40145a:	48 89 c2             	mov    rdx,rax
  40145d:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
  401461:	48 8b 48 08          	mov    rcx,QWORD PTR [rax+0x8]
  401465:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
  401469:	48 8b 00             	mov    rax,QWORD PTR [rax]
  40146c:	48 89 ce             	mov    rsi,rcx
  40146f:	48 89 c7             	mov    rdi,rax
  401472:	e8 a3 fe ff ff       	call   40131a <_ZSt8_DestroyIPiiEvT_S1_RSaIT0_E>
  401477:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
  40147b:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
  40147f:	48 89 c2             	mov    rdx,rax
  401482:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
  401486:	48 8b 00             	mov    rax,QWORD PTR [rax]
  401489:	48 29 c2             	sub    rdx,rax
  40148c:	48 89 d0             	mov    rax,rdx
  40148f:	48 c1 f8 02          	sar    rax,0x2
  401493:	48 89 c2             	mov    rdx,rax
  401496:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
  40149a:	48 8b 08             	mov    rcx,QWORD PTR [rax]
  40149d:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
  4014a1:	48 89 ce             	mov    rsi,rcx
  4014a4:	48 89 c7             	mov    rdi,rax
  4014a7:	e8 8c 02 00 00       	call   401738 <_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim>
  4014ac:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
  4014b0:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
  4014b4:	48 89 10             	mov    QWORD PTR [rax],rdx
  4014b7:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
  4014bb:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
  4014bf:	48 89 50 08          	mov    QWORD PTR [rax+0x8],rdx
  4014c3:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
  4014c7:	48 8d 14 85 00 00 00 	lea    rdx,[rax*4+0x0]
  4014ce:	00 
  4014cf:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
  4014d3:	48 01 c2             	add    rdx,rax
  4014d6:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
  4014da:	48 89 50 10          	mov    QWORD PTR [rax+0x10],rdx
  4014de:	e9 8c 00 00 00       	jmp    40156f <_ZNSt6vectorIiSaIiEE19_M_emplace_back_auxIJRKiEEEvDpOT_+0x1e3>
  4014e3:	48 89 c7             	mov    rdi,rax
  4014e6:	e8 e5 f5 ff ff       	call   400ad0 <__cxa_begin_catch@plt>
  4014eb:	48 83 7d e8 00       	cmp    QWORD PTR [rbp-0x18],0x0
  4014f0:	75 2c                	jne    40151e <_ZNSt6vectorIiSaIiEE19_M_emplace_back_auxIJRKiEEEvDpOT_+0x192>
  4014f2:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
  4014f6:	48 89 c7             	mov    rdi,rax
  4014f9:	e8 a6 fc ff ff       	call   4011a4 <_ZNKSt6vectorIiSaIiEE4sizeEv>
  4014fe:	48 8d 14 85 00 00 00 	lea    rdx,[rax*4+0x0]
  401505:	00 
  401506:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
  40150a:	48 01 c2             	add    rdx,rax
  40150d:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
  401511:	48 89 d6             	mov    rsi,rdx
  401514:	48 89 c7             	mov    rdi,rax
  401517:	e8 0d 04 00 00       	call   401929 <_ZNSt16allocator_traitsISaIiEE7destroyIiEEvRS0_PT_>
  40151c:	eb 22                	jmp    401540 <_ZNSt6vectorIiSaIiEE19_M_emplace_back_auxIJRKiEEEvDpOT_+0x1b4>
  40151e:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
  401522:	48 89 c7             	mov    rdi,rax
  401525:	e8 e2 fd ff ff       	call   40130c <_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv>
  40152a:	48 89 c2             	mov    rdx,rax
  40152d:	48 8b 4d e8          	mov    rcx,QWORD PTR [rbp-0x18]
  401531:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
  401535:	48 89 ce             	mov    rsi,rcx
  401538:	48 89 c7             	mov    rdi,rax
  40153b:	e8 da fd ff ff       	call   40131a <_ZSt8_DestroyIPiiEvT_S1_RSaIT0_E>
  401540:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
  401544:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
  401548:	48 8b 4d d8          	mov    rcx,QWORD PTR [rbp-0x28]
  40154c:	48 89 ce             	mov    rsi,rcx
  40154f:	48 89 c7             	mov    rdi,rax
  401552:	e8 e1 01 00 00       	call   401738 <_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim>
  401557:	e8 b4 f4 ff ff       	call   400a10 <__cxa_rethrow@plt>
  40155c:	48 89 c3             	mov    rbx,rax
  40155f:	e8 3c f5 ff ff       	call   400aa0 <__cxa_end_catch@plt>
  401564:	48 89 d8             	mov    rax,rbx
  401567:	48 89 c7             	mov    rdi,rax
  40156a:	e8 91 f5 ff ff       	call   400b00 <_Unwind_Resume@plt>
  40156f:	48 83 c4 38          	add    rsp,0x38
  401573:	5b                   	pop    rbx
  401574:	5d                   	pop    rbp
  401575:	c3                   	ret    

0000000000401576 <_ZN9__gnu_cxx14__alloc_traitsISaIiEE17_S_select_on_copyERKS1_>:
  401576:	55                   	push   rbp
  401577:	48 89 e5             	mov    rbp,rsp
  40157a:	48 83 ec 10          	sub    rsp,0x10
  40157e:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
  401582:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
  401586:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  40158a:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
  40158e:	48 89 d6             	mov    rsi,rdx
  401591:	48 89 c7             	mov    rdi,rax
  401594:	e8 b6 03 00 00       	call   40194f <_ZNSt16allocator_traitsISaIiEE37select_on_container_copy_constructionERKS0_>
  401599:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  40159d:	c9                   	leave  
  40159e:	c3                   	ret    
  40159f:	90                   	nop

00000000004015a0 <_ZNKSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv>:
  4015a0:	55                   	push   rbp
  4015a1:	48 89 e5             	mov    rbp,rsp
  4015a4:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
  4015a8:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  4015ac:	5d                   	pop    rbp
  4015ad:	c3                   	ret    

00000000004015ae <_ZNSt12_Vector_baseIiSaIiEEC1EmRKS0_>:
  4015ae:	55                   	push   rbp
  4015af:	48 89 e5             	mov    rbp,rsp
  4015b2:	53                   	push   rbx
  4015b3:	48 83 ec 28          	sub    rsp,0x28
  4015b7:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
  4015bb:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
  4015bf:	48 89 55 d8          	mov    QWORD PTR [rbp-0x28],rdx
  4015c3:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  4015c7:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
  4015cb:	48 89 d6             	mov    rsi,rdx
  4015ce:	48 89 c7             	mov    rdi,rax
  4015d1:	e8 c8 03 00 00       	call   40199e <_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC1ERKS0_>
  4015d6:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
  4015da:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  4015de:	48 89 d6             	mov    rsi,rdx
  4015e1:	48 89 c7             	mov    rdi,rax
  4015e4:	e8 ff 03 00 00       	call   4019e8 <_ZNSt12_Vector_baseIiSaIiEE17_M_create_storageEm>
  4015e9:	eb 1a                	jmp    401605 <_ZNSt12_Vector_baseIiSaIiEEC1EmRKS0_+0x57>
  4015eb:	48 89 c3             	mov    rbx,rax
  4015ee:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  4015f2:	48 89 c7             	mov    rdi,rax
  4015f5:	e8 8a fc ff ff       	call   401284 <_ZNSt12_Vector_baseIiSaIiEE12_Vector_implD1Ev>
  4015fa:	48 89 d8             	mov    rax,rbx
  4015fd:	48 89 c7             	mov    rdi,rax
  401600:	e8 fb f4 ff ff       	call   400b00 <_Unwind_Resume@plt>
  401605:	48 83 c4 28          	add    rsp,0x28
  401609:	5b                   	pop    rbx
  40160a:	5d                   	pop    rbp
  40160b:	c3                   	ret    

000000000040160c <_ZNKSt6vectorIiSaIiEE5beginEv>:
  40160c:	55                   	push   rbp
  40160d:	48 89 e5             	mov    rbp,rsp
  401610:	48 83 ec 20          	sub    rsp,0x20
  401614:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
  401618:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  40161c:	48 8b 00             	mov    rax,QWORD PTR [rax]
  40161f:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
  401623:	48 8d 55 f8          	lea    rdx,[rbp-0x8]
  401627:	48 8d 45 f0          	lea    rax,[rbp-0x10]
  40162b:	48 89 d6             	mov    rsi,rdx
  40162e:	48 89 c7             	mov    rdi,rax
  401631:	e8 0c 04 00 00       	call   401a42 <_ZN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEC1ERKS2_>
  401636:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
  40163a:	c9                   	leave  
  40163b:	c3                   	ret    

000000000040163c <_ZNKSt6vectorIiSaIiEE3endEv>:
  40163c:	55                   	push   rbp
  40163d:	48 89 e5             	mov    rbp,rsp
  401640:	48 83 ec 20          	sub    rsp,0x20
  401644:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
  401648:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  40164c:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
  401650:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
  401654:	48 8d 55 f8          	lea    rdx,[rbp-0x8]
  401658:	48 8d 45 f0          	lea    rax,[rbp-0x10]
  40165c:	48 89 d6             	mov    rsi,rdx
  40165f:	48 89 c7             	mov    rdi,rax
  401662:	e8 db 03 00 00       	call   401a42 <_ZN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEC1ERKS2_>
  401667:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
  40166b:	c9                   	leave  
  40166c:	c3                   	ret    

000000000040166d <_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiiET0_T_SA_S9_RSaIT1_E>:
  40166d:	55                   	push   rbp
  40166e:	48 89 e5             	mov    rbp,rsp
  401671:	48 83 ec 20          	sub    rsp,0x20
  401675:	48 89 7d f0          	mov    QWORD PTR [rbp-0x10],rdi
  401679:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
  40167d:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
  401681:	48 89 4d f8          	mov    QWORD PTR [rbp-0x8],rcx
  401685:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
  401689:	48 8b 4d e0          	mov    rcx,QWORD PTR [rbp-0x20]
  40168d:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
  401691:	48 89 ce             	mov    rsi,rcx
  401694:	48 89 c7             	mov    rdi,rax
  401697:	e8 c3 03 00 00       	call   401a5f <_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiET0_T_SA_S9_>
  40169c:	c9                   	leave  
  40169d:	c3                   	ret    

000000000040169e <_ZN9__gnu_cxx13new_allocatorIiEC1Ev>:
  40169e:	55                   	push   rbp
  40169f:	48 89 e5             	mov    rbp,rsp
  4016a2:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
  4016a6:	90                   	nop
  4016a7:	5d                   	pop    rbp
  4016a8:	c3                   	ret    
  4016a9:	90                   	nop

00000000004016aa <_ZN9__gnu_cxx13new_allocatorIiED1Ev>:
  4016aa:	55                   	push   rbp
  4016ab:	48 89 e5             	mov    rbp,rsp
  4016ae:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
  4016b2:	90                   	nop
  4016b3:	5d                   	pop    rbp
  4016b4:	c3                   	ret    
  4016b5:	90                   	nop

00000000004016b6 <_ZNSt6vectorIiSaIiEE21_M_default_initializeEm>:
  4016b6:	55                   	push   rbp
  4016b7:	48 89 e5             	mov    rbp,rsp
  4016ba:	48 83 ec 10          	sub    rsp,0x10
  4016be:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
  4016c2:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
  4016c6:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  4016ca:	48 89 c7             	mov    rdi,rax
  4016cd:	e8 3a fc ff ff       	call   40130c <_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv>
  4016d2:	48 89 c2             	mov    rdx,rax
  4016d5:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  4016d9:	48 8b 00             	mov    rax,QWORD PTR [rax]
  4016dc:	48 8b 4d f0          	mov    rcx,QWORD PTR [rbp-0x10]
  4016e0:	48 89 ce             	mov    rsi,rcx
  4016e3:	48 89 c7             	mov    rdi,rax
  4016e6:	e8 a5 03 00 00       	call   401a90 <_ZSt27__uninitialized_default_n_aIPimiET_S1_T0_RSaIT1_E>
  4016eb:	48 89 c2             	mov    rdx,rax
  4016ee:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  4016f2:	48 89 50 08          	mov    QWORD PTR [rax+0x8],rdx
  4016f6:	90                   	nop
  4016f7:	c9                   	leave  
  4016f8:	c3                   	ret    
  4016f9:	90                   	nop

00000000004016fa <_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC1Ev>:
  4016fa:	55                   	push   rbp
  4016fb:	48 89 e5             	mov    rbp,rsp
  4016fe:	48 83 ec 10          	sub    rsp,0x10
  401702:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
  401706:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  40170a:	48 89 c7             	mov    rdi,rax
  40170d:	e8 d8 fa ff ff       	call   4011ea <_ZNSaIiEC1Ev>
  401712:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  401716:	48 c7 00 00 00 00 00 	mov    QWORD PTR [rax],0x0
  40171d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  401721:	48 c7 40 08 00 00 00 	mov    QWORD PTR [rax+0x8],0x0
  401728:	00 
  401729:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  40172d:	48 c7 40 10 00 00 00 	mov    QWORD PTR [rax+0x10],0x0
  401734:	00 
  401735:	90                   	nop
  401736:	c9                   	leave  
  401737:	c3                   	ret    

0000000000401738 <_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim>:
  401738:	55                   	push   rbp
  401739:	48 89 e5             	mov    rbp,rsp
  40173c:	48 83 ec 20          	sub    rsp,0x20
  401740:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
  401744:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
  401748:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
  40174c:	48 83 7d f0 00       	cmp    QWORD PTR [rbp-0x10],0x0
  401751:	74 17                	je     40176a <_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim+0x32>
  401753:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  401757:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
  40175b:	48 8b 4d f0          	mov    rcx,QWORD PTR [rbp-0x10]
  40175f:	48 89 ce             	mov    rsi,rcx
  401762:	48 89 c7             	mov    rdi,rax
  401765:	e8 4f 03 00 00       	call   401ab9 <_ZNSt16allocator_traitsISaIiEE10deallocateERS0_Pim>
  40176a:	90                   	nop
  40176b:	c9                   	leave  
  40176c:	c3                   	ret    

000000000040176d <_ZSt8_DestroyIPiEvT_S1_>:
  40176d:	55                   	push   rbp
  40176e:	48 89 e5             	mov    rbp,rsp
  401771:	48 83 ec 10          	sub    rsp,0x10
  401775:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
  401779:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
  40177d:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
  401781:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  401785:	48 89 d6             	mov    rsi,rdx
  401788:	48 89 c7             	mov    rdi,rax
  40178b:	e8 57 03 00 00       	call   401ae7 <_ZNSt12_Destroy_auxILb1EE9__destroyIPiEEvT_S3_>
  401790:	90                   	nop
  401791:	c9                   	leave  
  401792:	c3                   	ret    
  401793:	90                   	nop

0000000000401794 <_ZN9__gnu_cxx13new_allocatorIiE9constructIiJRKiEEEvPT_DpOT0_>:
  401794:	55                   	push   rbp
  401795:	48 89 e5             	mov    rbp,rsp
  401798:	53                   	push   rbx
  401799:	48 83 ec 28          	sub    rsp,0x28
  40179d:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
  4017a1:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
  4017a5:	48 89 55 d8          	mov    QWORD PTR [rbp-0x28],rdx
  4017a9:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
  4017ad:	48 89 c7             	mov    rdi,rax
  4017b0:	e8 8f fb ff ff       	call   401344 <_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE>
  4017b5:	8b 18                	mov    ebx,DWORD PTR [rax]
  4017b7:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
  4017bb:	48 89 c6             	mov    rsi,rax
  4017be:	bf 04 00 00 00       	mov    edi,0x4
  4017c3:	e8 0e f8 ff ff       	call   400fd6 <_ZnwmPv>
  4017c8:	48 85 c0             	test   rax,rax
  4017cb:	74 02                	je     4017cf <_ZN9__gnu_cxx13new_allocatorIiE9constructIiJRKiEEEvPT_DpOT0_+0x3b>
  4017cd:	89 18                	mov    DWORD PTR [rax],ebx
  4017cf:	90                   	nop
  4017d0:	48 83 c4 28          	add    rsp,0x28
  4017d4:	5b                   	pop    rbx
  4017d5:	5d                   	pop    rbp
  4017d6:	c3                   	ret    
  4017d7:	90                   	nop

00000000004017d8 <_ZNKSt6vectorIiSaIiEE12_M_check_lenEmPKc>:
  4017d8:	55                   	push   rbp
  4017d9:	48 89 e5             	mov    rbp,rsp
  4017dc:	53                   	push   rbx
  4017dd:	48 83 ec 38          	sub    rsp,0x38
  4017e1:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
  4017e5:	48 89 75 d0          	mov    QWORD PTR [rbp-0x30],rsi
  4017e9:	48 89 55 c8          	mov    QWORD PTR [rbp-0x38],rdx
  4017ed:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
  4017f1:	48 89 c7             	mov    rdi,rax
  4017f4:	e8 fd 02 00 00       	call   401af6 <_ZNKSt6vectorIiSaIiEE8max_sizeEv>
  4017f9:	48 89 c3             	mov    rbx,rax
  4017fc:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
  401800:	48 89 c7             	mov    rdi,rax
  401803:	e8 9c f9 ff ff       	call   4011a4 <_ZNKSt6vectorIiSaIiEE4sizeEv>
  401808:	48 29 c3             	sub    rbx,rax
  40180b:	48 89 da             	mov    rdx,rbx
  40180e:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
  401812:	48 39 c2             	cmp    rdx,rax
  401815:	0f 92 c0             	setb   al
  401818:	84 c0                	test   al,al
  40181a:	74 0c                	je     401828 <_ZNKSt6vectorIiSaIiEE12_M_check_lenEmPKc+0x50>
  40181c:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
  401820:	48 89 c7             	mov    rdi,rax
  401823:	e8 b8 f1 ff ff       	call   4009e0 <_ZSt20__throw_length_errorPKc@plt>
  401828:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
  40182c:	48 89 c7             	mov    rdi,rax
  40182f:	e8 70 f9 ff ff       	call   4011a4 <_ZNKSt6vectorIiSaIiEE4sizeEv>
  401834:	48 89 c3             	mov    rbx,rax
  401837:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
  40183b:	48 89 c7             	mov    rdi,rax
  40183e:	e8 61 f9 ff ff       	call   4011a4 <_ZNKSt6vectorIiSaIiEE4sizeEv>
  401843:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
  401847:	48 8d 55 d0          	lea    rdx,[rbp-0x30]
  40184b:	48 8d 45 e0          	lea    rax,[rbp-0x20]
  40184f:	48 89 d6             	mov    rsi,rdx
  401852:	48 89 c7             	mov    rdi,rax
  401855:	e8 be 02 00 00       	call   401b18 <_ZSt3maxImERKT_S2_S2_>
  40185a:	48 8b 00             	mov    rax,QWORD PTR [rax]
  40185d:	48 01 d8             	add    rax,rbx
  401860:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
  401864:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
  401868:	48 89 c7             	mov    rdi,rax
  40186b:	e8 34 f9 ff ff       	call   4011a4 <_ZNKSt6vectorIiSaIiEE4sizeEv>
  401870:	48 3b 45 e8          	cmp    rax,QWORD PTR [rbp-0x18]
  401874:	77 12                	ja     401888 <_ZNKSt6vectorIiSaIiEE12_M_check_lenEmPKc+0xb0>
  401876:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
  40187a:	48 89 c7             	mov    rdi,rax
  40187d:	e8 74 02 00 00       	call   401af6 <_ZNKSt6vectorIiSaIiEE8max_sizeEv>
  401882:	48 3b 45 e8          	cmp    rax,QWORD PTR [rbp-0x18]
  401886:	73 0e                	jae    401896 <_ZNKSt6vectorIiSaIiEE12_M_check_lenEmPKc+0xbe>
  401888:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
  40188c:	48 89 c7             	mov    rdi,rax
  40188f:	e8 62 02 00 00       	call   401af6 <_ZNKSt6vectorIiSaIiEE8max_sizeEv>
  401894:	eb 04                	jmp    40189a <_ZNKSt6vectorIiSaIiEE12_M_check_lenEmPKc+0xc2>
  401896:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  40189a:	48 83 c4 38          	add    rsp,0x38
  40189e:	5b                   	pop    rbx
  40189f:	5d                   	pop    rbp
  4018a0:	c3                   	ret    
  4018a1:	90                   	nop

00000000004018a2 <_ZNSt12_Vector_baseIiSaIiEE11_M_allocateEm>:
  4018a2:	55                   	push   rbp
  4018a3:	48 89 e5             	mov    rbp,rsp
  4018a6:	48 83 ec 10          	sub    rsp,0x10
  4018aa:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
  4018ae:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
  4018b2:	48 83 7d f0 00       	cmp    QWORD PTR [rbp-0x10],0x0
  4018b7:	74 15                	je     4018ce <_ZNSt12_Vector_baseIiSaIiEE11_M_allocateEm+0x2c>
  4018b9:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  4018bd:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
  4018c1:	48 89 d6             	mov    rsi,rdx
  4018c4:	48 89 c7             	mov    rdi,rax
  4018c7:	e8 77 02 00 00       	call   401b43 <_ZNSt16allocator_traitsISaIiEE8allocateERS0_m>
  4018cc:	eb 05                	jmp    4018d3 <_ZNSt12_Vector_baseIiSaIiEE11_M_allocateEm+0x31>
  4018ce:	b8 00 00 00 00       	mov    eax,0x0
  4018d3:	c9                   	leave  
  4018d4:	c3                   	ret    

00000000004018d5 <_ZSt34__uninitialized_move_if_noexcept_aIPiS0_SaIiEET0_T_S3_S2_RT1_>:
  4018d5:	55                   	push   rbp
  4018d6:	48 89 e5             	mov    rbp,rsp
  4018d9:	53                   	push   rbx
  4018da:	48 83 ec 28          	sub    rsp,0x28
  4018de:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
  4018e2:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
  4018e6:	48 89 55 d8          	mov    QWORD PTR [rbp-0x28],rdx
  4018ea:	48 89 4d d0          	mov    QWORD PTR [rbp-0x30],rcx
  4018ee:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
  4018f2:	48 89 c7             	mov    rdi,rax
  4018f5:	e8 73 02 00 00       	call   401b6d <_ZSt32__make_move_if_noexcept_iteratorIiSt13move_iteratorIPiEET0_PT_>
  4018fa:	48 89 c3             	mov    rbx,rax
  4018fd:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  401901:	48 89 c7             	mov    rdi,rax
  401904:	e8 64 02 00 00       	call   401b6d <_ZSt32__make_move_if_noexcept_iteratorIiSt13move_iteratorIPiEET0_PT_>
  401909:	48 89 c7             	mov    rdi,rax
  40190c:	48 8b 55 d0          	mov    rdx,QWORD PTR [rbp-0x30]
  401910:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
  401914:	48 89 d1             	mov    rcx,rdx
  401917:	48 89 c2             	mov    rdx,rax
  40191a:	48 89 de             	mov    rsi,rbx
  40191d:	e8 70 02 00 00       	call   401b92 <_ZSt22__uninitialized_copy_aISt13move_iteratorIPiES1_iET0_T_S4_S3_RSaIT1_E>
  401922:	48 83 c4 28          	add    rsp,0x28
  401926:	5b                   	pop    rbx
  401927:	5d                   	pop    rbp
  401928:	c3                   	ret    

0000000000401929 <_ZNSt16allocator_traitsISaIiEE7destroyIiEEvRS0_PT_>:
  401929:	55                   	push   rbp
  40192a:	48 89 e5             	mov    rbp,rsp
  40192d:	48 83 ec 10          	sub    rsp,0x10
  401931:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
  401935:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
  401939:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
  40193d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  401941:	48 89 d6             	mov    rsi,rdx
  401944:	48 89 c7             	mov    rdi,rax
  401947:	e8 78 02 00 00       	call   401bc4 <_ZN9__gnu_cxx13new_allocatorIiE7destroyIiEEvPT_>
  40194c:	90                   	nop
  40194d:	c9                   	leave  
  40194e:	c3                   	ret    

000000000040194f <_ZNSt16allocator_traitsISaIiEE37select_on_container_copy_constructionERKS0_>:
  40194f:	55                   	push   rbp
  401950:	48 89 e5             	mov    rbp,rsp
  401953:	48 83 ec 10          	sub    rsp,0x10
  401957:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
  40195b:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
  40195f:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
  401963:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  401967:	48 89 d6             	mov    rsi,rdx
  40196a:	48 89 c7             	mov    rdi,rax
  40196d:	e8 06 00 00 00       	call   401978 <_ZNSaIiEC1ERKS_>
  401972:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  401976:	c9                   	leave  
  401977:	c3                   	ret    

0000000000401978 <_ZNSaIiEC1ERKS_>:
  401978:	55                   	push   rbp
  401979:	48 89 e5             	mov    rbp,rsp
  40197c:	48 83 ec 10          	sub    rsp,0x10
  401980:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
  401984:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
  401988:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
  40198c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  401990:	48 89 d6             	mov    rsi,rdx
  401993:	48 89 c7             	mov    rdi,rax
  401996:	e8 39 02 00 00       	call   401bd4 <_ZN9__gnu_cxx13new_allocatorIiEC1ERKS1_>
  40199b:	90                   	nop
  40199c:	c9                   	leave  
  40199d:	c3                   	ret    

000000000040199e <_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC1ERKS0_>:
  40199e:	55                   	push   rbp
  40199f:	48 89 e5             	mov    rbp,rsp
  4019a2:	48 83 ec 10          	sub    rsp,0x10
  4019a6:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
  4019aa:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
  4019ae:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
  4019b2:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  4019b6:	48 89 d6             	mov    rsi,rdx
  4019b9:	48 89 c7             	mov    rdi,rax
  4019bc:	e8 b7 ff ff ff       	call   401978 <_ZNSaIiEC1ERKS_>
  4019c1:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  4019c5:	48 c7 00 00 00 00 00 	mov    QWORD PTR [rax],0x0
  4019cc:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  4019d0:	48 c7 40 08 00 00 00 	mov    QWORD PTR [rax+0x8],0x0
  4019d7:	00 
  4019d8:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  4019dc:	48 c7 40 10 00 00 00 	mov    QWORD PTR [rax+0x10],0x0
  4019e3:	00 
  4019e4:	90                   	nop
  4019e5:	c9                   	leave  
  4019e6:	c3                   	ret    
  4019e7:	90                   	nop

00000000004019e8 <_ZNSt12_Vector_baseIiSaIiEE17_M_create_storageEm>:
  4019e8:	55                   	push   rbp
  4019e9:	48 89 e5             	mov    rbp,rsp
  4019ec:	48 83 ec 10          	sub    rsp,0x10
  4019f0:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
  4019f4:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
  4019f8:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
  4019fc:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  401a00:	48 89 d6             	mov    rsi,rdx
  401a03:	48 89 c7             	mov    rdi,rax
  401a06:	e8 97 fe ff ff       	call   4018a2 <_ZNSt12_Vector_baseIiSaIiEE11_M_allocateEm>
  401a0b:	48 89 c2             	mov    rdx,rax
  401a0e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  401a12:	48 89 10             	mov    QWORD PTR [rax],rdx
  401a15:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  401a19:	48 8b 10             	mov    rdx,QWORD PTR [rax]
  401a1c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  401a20:	48 89 50 08          	mov    QWORD PTR [rax+0x8],rdx
  401a24:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  401a28:	48 8b 00             	mov    rax,QWORD PTR [rax]
  401a2b:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
  401a2f:	48 c1 e2 02          	shl    rdx,0x2
  401a33:	48 01 c2             	add    rdx,rax
  401a36:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  401a3a:	48 89 50 10          	mov    QWORD PTR [rax+0x10],rdx
  401a3e:	90                   	nop
  401a3f:	c9                   	leave  
  401a40:	c3                   	ret    
  401a41:	90                   	nop

0000000000401a42 <_ZN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEC1ERKS2_>:
  401a42:	55                   	push   rbp
  401a43:	48 89 e5             	mov    rbp,rsp
  401a46:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
  401a4a:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
  401a4e:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
  401a52:	48 8b 10             	mov    rdx,QWORD PTR [rax]
  401a55:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  401a59:	48 89 10             	mov    QWORD PTR [rax],rdx
  401a5c:	90                   	nop
  401a5d:	5d                   	pop    rbp
  401a5e:	c3                   	ret    

0000000000401a5f <_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiET0_T_SA_S9_>:
  401a5f:	55                   	push   rbp
  401a60:	48 89 e5             	mov    rbp,rsp
  401a63:	48 83 ec 30          	sub    rsp,0x30
  401a67:	48 89 7d e0          	mov    QWORD PTR [rbp-0x20],rdi
  401a6b:	48 89 75 d0          	mov    QWORD PTR [rbp-0x30],rsi
  401a6f:	48 89 55 d8          	mov    QWORD PTR [rbp-0x28],rdx
  401a73:	c6 45 ff 01          	mov    BYTE PTR [rbp-0x1],0x1
  401a77:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
  401a7b:	48 8b 4d d0          	mov    rcx,QWORD PTR [rbp-0x30]
  401a7f:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
  401a83:	48 89 ce             	mov    rsi,rcx
  401a86:	48 89 c7             	mov    rdi,rax
  401a89:	e8 55 01 00 00       	call   401be3 <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiEET0_T_SC_SB_>
  401a8e:	c9                   	leave  
  401a8f:	c3                   	ret    

0000000000401a90 <_ZSt27__uninitialized_default_n_aIPimiET_S1_T0_RSaIT1_E>:
  401a90:	55                   	push   rbp
  401a91:	48 89 e5             	mov    rbp,rsp
  401a94:	48 83 ec 20          	sub    rsp,0x20
  401a98:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
  401a9c:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
  401aa0:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
  401aa4:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
  401aa8:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  401aac:	48 89 d6             	mov    rsi,rdx
  401aaf:	48 89 c7             	mov    rdi,rax
  401ab2:	e8 59 01 00 00       	call   401c10 <_ZSt25__uninitialized_default_nIPimET_S1_T0_>
  401ab7:	c9                   	leave  
  401ab8:	c3                   	ret    

0000000000401ab9 <_ZNSt16allocator_traitsISaIiEE10deallocateERS0_Pim>:
  401ab9:	55                   	push   rbp
  401aba:	48 89 e5             	mov    rbp,rsp
  401abd:	48 83 ec 20          	sub    rsp,0x20
  401ac1:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
  401ac5:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
  401ac9:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
  401acd:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
  401ad1:	48 8b 4d f0          	mov    rcx,QWORD PTR [rbp-0x10]
  401ad5:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  401ad9:	48 89 ce             	mov    rsi,rcx
  401adc:	48 89 c7             	mov    rdi,rax
  401adf:	e8 56 01 00 00       	call   401c3a <_ZN9__gnu_cxx13new_allocatorIiE10deallocateEPim>
  401ae4:	90                   	nop
  401ae5:	c9                   	leave  
  401ae6:	c3                   	ret    

0000000000401ae7 <_ZNSt12_Destroy_auxILb1EE9__destroyIPiEEvT_S3_>:
  401ae7:	55                   	push   rbp
  401ae8:	48 89 e5             	mov    rbp,rsp
  401aeb:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
  401aef:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
  401af3:	90                   	nop
  401af4:	5d                   	pop    rbp
  401af5:	c3                   	ret    

0000000000401af6 <_ZNKSt6vectorIiSaIiEE8max_sizeEv>:
  401af6:	55                   	push   rbp
  401af7:	48 89 e5             	mov    rbp,rsp
  401afa:	48 83 ec 10          	sub    rsp,0x10
  401afe:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
  401b02:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  401b06:	48 89 c7             	mov    rdi,rax
  401b09:	e8 92 fa ff ff       	call   4015a0 <_ZNKSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv>
  401b0e:	48 89 c7             	mov    rdi,rax
  401b11:	e8 47 01 00 00       	call   401c5d <_ZNSt16allocator_traitsISaIiEE8max_sizeERKS0_>
  401b16:	c9                   	leave  
  401b17:	c3                   	ret    

0000000000401b18 <_ZSt3maxImERKT_S2_S2_>:
  401b18:	55                   	push   rbp
  401b19:	48 89 e5             	mov    rbp,rsp
  401b1c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
  401b20:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
  401b24:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  401b28:	48 8b 10             	mov    rdx,QWORD PTR [rax]
  401b2b:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
  401b2f:	48 8b 00             	mov    rax,QWORD PTR [rax]
  401b32:	48 39 c2             	cmp    rdx,rax
  401b35:	73 06                	jae    401b3d <_ZSt3maxImERKT_S2_S2_+0x25>
  401b37:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
  401b3b:	eb 04                	jmp    401b41 <_ZSt3maxImERKT_S2_S2_+0x29>
  401b3d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  401b41:	5d                   	pop    rbp
  401b42:	c3                   	ret    

0000000000401b43 <_ZNSt16allocator_traitsISaIiEE8allocateERS0_m>:
  401b43:	55                   	push   rbp
  401b44:	48 89 e5             	mov    rbp,rsp
  401b47:	48 83 ec 10          	sub    rsp,0x10
  401b4b:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
  401b4f:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
  401b53:	48 8b 4d f0          	mov    rcx,QWORD PTR [rbp-0x10]
  401b57:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  401b5b:	ba 00 00 00 00       	mov    edx,0x0
  401b60:	48 89 ce             	mov    rsi,rcx
  401b63:	48 89 c7             	mov    rdi,rax
  401b66:	e8 0d 01 00 00       	call   401c78 <_ZN9__gnu_cxx13new_allocatorIiE8allocateEmPKv>
  401b6b:	c9                   	leave  
  401b6c:	c3                   	ret    

0000000000401b6d <_ZSt32__make_move_if_noexcept_iteratorIiSt13move_iteratorIPiEET0_PT_>:
  401b6d:	55                   	push   rbp
  401b6e:	48 89 e5             	mov    rbp,rsp
  401b71:	48 83 ec 20          	sub    rsp,0x20
  401b75:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
  401b79:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
  401b7d:	48 8d 45 f0          	lea    rax,[rbp-0x10]
  401b81:	48 89 d6             	mov    rsi,rdx
  401b84:	48 89 c7             	mov    rdi,rax
  401b87:	e8 2e 01 00 00       	call   401cba <_ZNSt13move_iteratorIPiEC1ES0_>
  401b8c:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
  401b90:	c9                   	leave  
  401b91:	c3                   	ret    

0000000000401b92 <_ZSt22__uninitialized_copy_aISt13move_iteratorIPiES1_iET0_T_S4_S3_RSaIT1_E>:
  401b92:	55                   	push   rbp
  401b93:	48 89 e5             	mov    rbp,rsp
  401b96:	48 83 ec 20          	sub    rsp,0x20
  401b9a:	48 89 7d f0          	mov    QWORD PTR [rbp-0x10],rdi
  401b9e:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
  401ba2:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
  401ba6:	48 89 4d f8          	mov    QWORD PTR [rbp-0x8],rcx
  401baa:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
  401bae:	48 8b 4d e0          	mov    rcx,QWORD PTR [rbp-0x20]
  401bb2:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
  401bb6:	48 89 ce             	mov    rsi,rcx
  401bb9:	48 89 c7             	mov    rdi,rax
  401bbc:	e8 13 01 00 00       	call   401cd4 <_ZSt18uninitialized_copyISt13move_iteratorIPiES1_ET0_T_S4_S3_>
  401bc1:	c9                   	leave  
  401bc2:	c3                   	ret    
  401bc3:	90                   	nop

0000000000401bc4 <_ZN9__gnu_cxx13new_allocatorIiE7destroyIiEEvPT_>:
  401bc4:	55                   	push   rbp
  401bc5:	48 89 e5             	mov    rbp,rsp
  401bc8:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
  401bcc:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
  401bd0:	90                   	nop
  401bd1:	5d                   	pop    rbp
  401bd2:	c3                   	ret    
  401bd3:	90                   	nop

0000000000401bd4 <_ZN9__gnu_cxx13new_allocatorIiEC1ERKS1_>:
  401bd4:	55                   	push   rbp
  401bd5:	48 89 e5             	mov    rbp,rsp
  401bd8:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
  401bdc:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
  401be0:	90                   	nop
  401be1:	5d                   	pop    rbp
  401be2:	c3                   	ret    

0000000000401be3 <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiEET0_T_SC_SB_>:
  401be3:	55                   	push   rbp
  401be4:	48 89 e5             	mov    rbp,rsp
  401be7:	48 83 ec 20          	sub    rsp,0x20
  401beb:	48 89 7d f0          	mov    QWORD PTR [rbp-0x10],rdi
  401bef:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
  401bf3:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
  401bf7:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
  401bfb:	48 8b 4d e0          	mov    rcx,QWORD PTR [rbp-0x20]
  401bff:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
  401c03:	48 89 ce             	mov    rsi,rcx
  401c06:	48 89 c7             	mov    rdi,rax
  401c09:	e8 f7 00 00 00       	call   401d05 <_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiET0_T_SA_S9_>
  401c0e:	c9                   	leave  
  401c0f:	c3                   	ret    

0000000000401c10 <_ZSt25__uninitialized_default_nIPimET_S1_T0_>:
  401c10:	55                   	push   rbp
  401c11:	48 89 e5             	mov    rbp,rsp
  401c14:	48 83 ec 20          	sub    rsp,0x20
  401c18:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
  401c1c:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
  401c20:	c6 45 ff 01          	mov    BYTE PTR [rbp-0x1],0x1
  401c24:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
  401c28:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  401c2c:	48 89 d6             	mov    rsi,rdx
  401c2f:	48 89 c7             	mov    rdi,rax
  401c32:	e8 1a 01 00 00       	call   401d51 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPimEET_S3_T0_>
  401c37:	c9                   	leave  
  401c38:	c3                   	ret    
  401c39:	90                   	nop

0000000000401c3a <_ZN9__gnu_cxx13new_allocatorIiE10deallocateEPim>:
  401c3a:	55                   	push   rbp
  401c3b:	48 89 e5             	mov    rbp,rsp
  401c3e:	48 83 ec 20          	sub    rsp,0x20
  401c42:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
  401c46:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
  401c4a:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
  401c4e:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
  401c52:	48 89 c7             	mov    rdi,rax
  401c55:	e8 a6 ed ff ff       	call   400a00 <_ZdlPv@plt>
  401c5a:	90                   	nop
  401c5b:	c9                   	leave  
  401c5c:	c3                   	ret    

0000000000401c5d <_ZNSt16allocator_traitsISaIiEE8max_sizeERKS0_>:
  401c5d:	55                   	push   rbp
  401c5e:	48 89 e5             	mov    rbp,rsp
  401c61:	48 83 ec 10          	sub    rsp,0x10
  401c65:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
  401c69:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  401c6d:	48 89 c7             	mov    rdi,rax
  401c70:	e8 0d 01 00 00       	call   401d82 <_ZNK9__gnu_cxx13new_allocatorIiE8max_sizeEv>
  401c75:	c9                   	leave  
  401c76:	c3                   	ret    
  401c77:	90                   	nop

0000000000401c78 <_ZN9__gnu_cxx13new_allocatorIiE8allocateEmPKv>:
  401c78:	55                   	push   rbp
  401c79:	48 89 e5             	mov    rbp,rsp
  401c7c:	48 83 ec 20          	sub    rsp,0x20
  401c80:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
  401c84:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
  401c88:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
  401c8c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  401c90:	48 89 c7             	mov    rdi,rax
  401c93:	e8 ea 00 00 00       	call   401d82 <_ZNK9__gnu_cxx13new_allocatorIiE8max_sizeEv>
  401c98:	48 3b 45 f0          	cmp    rax,QWORD PTR [rbp-0x10]
  401c9c:	0f 92 c0             	setb   al
  401c9f:	84 c0                	test   al,al
  401ca1:	74 05                	je     401ca8 <_ZN9__gnu_cxx13new_allocatorIiE8allocateEmPKv+0x30>
  401ca3:	e8 08 ee ff ff       	call   400ab0 <_ZSt17__throw_bad_allocv@plt>
  401ca8:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
  401cac:	48 c1 e0 02          	shl    rax,0x2
  401cb0:	48 89 c7             	mov    rdi,rax
  401cb3:	e8 38 ee ff ff       	call   400af0 <_Znwm@plt>
  401cb8:	c9                   	leave  
  401cb9:	c3                   	ret    

0000000000401cba <_ZNSt13move_iteratorIPiEC1ES0_>:
  401cba:	55                   	push   rbp
  401cbb:	48 89 e5             	mov    rbp,rsp
  401cbe:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
  401cc2:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
  401cc6:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  401cca:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
  401cce:	48 89 10             	mov    QWORD PTR [rax],rdx
  401cd1:	90                   	nop
  401cd2:	5d                   	pop    rbp
  401cd3:	c3                   	ret    

0000000000401cd4 <_ZSt18uninitialized_copyISt13move_iteratorIPiES1_ET0_T_S4_S3_>:
  401cd4:	55                   	push   rbp
  401cd5:	48 89 e5             	mov    rbp,rsp
  401cd8:	48 83 ec 30          	sub    rsp,0x30
  401cdc:	48 89 7d e0          	mov    QWORD PTR [rbp-0x20],rdi
  401ce0:	48 89 75 d0          	mov    QWORD PTR [rbp-0x30],rsi
  401ce4:	48 89 55 d8          	mov    QWORD PTR [rbp-0x28],rdx
  401ce8:	c6 45 ff 01          	mov    BYTE PTR [rbp-0x1],0x1
  401cec:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
  401cf0:	48 8b 4d d0          	mov    rcx,QWORD PTR [rbp-0x30]
  401cf4:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
  401cf8:	48 89 ce             	mov    rsi,rcx
  401cfb:	48 89 c7             	mov    rdi,rax
  401cfe:	e8 93 00 00 00       	call   401d96 <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt13move_iteratorIPiES3_EET0_T_S6_S5_>
  401d03:	c9                   	leave  
  401d04:	c3                   	ret    

0000000000401d05 <_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiET0_T_SA_S9_>:
  401d05:	55                   	push   rbp
  401d06:	48 89 e5             	mov    rbp,rsp
  401d09:	53                   	push   rbx
  401d0a:	48 83 ec 28          	sub    rsp,0x28
  401d0e:	48 89 7d e0          	mov    QWORD PTR [rbp-0x20],rdi
  401d12:	48 89 75 d0          	mov    QWORD PTR [rbp-0x30],rsi
  401d16:	48 89 55 d8          	mov    QWORD PTR [rbp-0x28],rdx
  401d1a:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
  401d1e:	48 89 c7             	mov    rdi,rax
  401d21:	e8 9d 00 00 00       	call   401dc3 <_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEET_S8_>
  401d26:	48 89 c3             	mov    rbx,rax
  401d29:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
  401d2d:	48 89 c7             	mov    rdi,rax
  401d30:	e8 8e 00 00 00       	call   401dc3 <_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEET_S8_>
  401d35:	48 89 c1             	mov    rcx,rax
  401d38:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
  401d3c:	48 89 c2             	mov    rdx,rax
  401d3f:	48 89 de             	mov    rsi,rbx
  401d42:	48 89 cf             	mov    rdi,rcx
  401d45:	e8 87 00 00 00       	call   401dd1 <_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiET1_T0_SA_S9_>
  401d4a:	48 83 c4 28          	add    rsp,0x28
  401d4e:	5b                   	pop    rbx
  401d4f:	5d                   	pop    rbp
  401d50:	c3                   	ret    

0000000000401d51 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPimEET_S3_T0_>:
  401d51:	55                   	push   rbp
  401d52:	48 89 e5             	mov    rbp,rsp
  401d55:	48 83 ec 20          	sub    rsp,0x20
  401d59:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
  401d5d:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
  401d61:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
  401d68:	48 8d 55 fc          	lea    rdx,[rbp-0x4]
  401d6c:	48 8b 4d e0          	mov    rcx,QWORD PTR [rbp-0x20]
  401d70:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  401d74:	48 89 ce             	mov    rsi,rcx
  401d77:	48 89 c7             	mov    rdi,rax
  401d7a:	e8 aa 00 00 00       	call   401e29 <_ZSt6fill_nIPimiET_S1_T0_RKT1_>
  401d7f:	c9                   	leave  
  401d80:	c3                   	ret    
  401d81:	90                   	nop

0000000000401d82 <_ZNK9__gnu_cxx13new_allocatorIiE8max_sizeEv>:
  401d82:	55                   	push   rbp
  401d83:	48 89 e5             	mov    rbp,rsp
  401d86:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
  401d8a:	48 b8 ff ff ff ff ff 	movabs rax,0x3fffffffffffffff
  401d91:	ff ff 3f 
  401d94:	5d                   	pop    rbp
  401d95:	c3                   	ret    

0000000000401d96 <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt13move_iteratorIPiES3_EET0_T_S6_S5_>:
  401d96:	55                   	push   rbp
  401d97:	48 89 e5             	mov    rbp,rsp
  401d9a:	48 83 ec 20          	sub    rsp,0x20
  401d9e:	48 89 7d f0          	mov    QWORD PTR [rbp-0x10],rdi
  401da2:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
  401da6:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
  401daa:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
  401dae:	48 8b 4d e0          	mov    rcx,QWORD PTR [rbp-0x20]
  401db2:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
  401db6:	48 89 ce             	mov    rsi,rcx
  401db9:	48 89 c7             	mov    rdi,rax
  401dbc:	e8 a0 00 00 00       	call   401e61 <_ZSt4copyISt13move_iteratorIPiES1_ET0_T_S4_S3_>
  401dc1:	c9                   	leave  
  401dc2:	c3                   	ret    

0000000000401dc3 <_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEET_S8_>:
  401dc3:	55                   	push   rbp
  401dc4:	48 89 e5             	mov    rbp,rsp
  401dc7:	48 89 7d f0          	mov    QWORD PTR [rbp-0x10],rdi
  401dcb:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
  401dcf:	5d                   	pop    rbp
  401dd0:	c3                   	ret    

0000000000401dd1 <_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiET1_T0_SA_S9_>:
  401dd1:	55                   	push   rbp
  401dd2:	48 89 e5             	mov    rbp,rsp
  401dd5:	41 54                	push   r12
  401dd7:	53                   	push   rbx
  401dd8:	48 83 ec 20          	sub    rsp,0x20
  401ddc:	48 89 7d e0          	mov    QWORD PTR [rbp-0x20],rdi
  401de0:	48 89 75 d0          	mov    QWORD PTR [rbp-0x30],rsi
  401de4:	48 89 55 d8          	mov    QWORD PTR [rbp-0x28],rdx
  401de8:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
  401dec:	48 89 c7             	mov    rdi,rax
  401def:	e8 d6 00 00 00       	call   401eca <_ZSt12__niter_baseIPiET_S1_>
  401df4:	49 89 c4             	mov    r12,rax
  401df7:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
  401dfb:	48 89 c7             	mov    rdi,rax
  401dfe:	e8 aa 00 00 00       	call   401ead <_ZSt12__niter_baseIPKiSt6vectorIiSaIiEEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE>
  401e03:	48 89 c3             	mov    rbx,rax
  401e06:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
  401e0a:	48 89 c7             	mov    rdi,rax
  401e0d:	e8 9b 00 00 00       	call   401ead <_ZSt12__niter_baseIPKiSt6vectorIiSaIiEEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE>
  401e12:	4c 89 e2             	mov    rdx,r12
  401e15:	48 89 de             	mov    rsi,rbx
  401e18:	48 89 c7             	mov    rdi,rax
  401e1b:	e8 b8 00 00 00       	call   401ed8 <_ZSt13__copy_move_aILb0EPKiPiET1_T0_S4_S3_>
  401e20:	48 83 c4 20          	add    rsp,0x20
  401e24:	5b                   	pop    rbx
  401e25:	41 5c                	pop    r12
  401e27:	5d                   	pop    rbp
  401e28:	c3                   	ret    

0000000000401e29 <_ZSt6fill_nIPimiET_S1_T0_RKT1_>:
  401e29:	55                   	push   rbp
  401e2a:	48 89 e5             	mov    rbp,rsp
  401e2d:	48 83 ec 20          	sub    rsp,0x20
  401e31:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
  401e35:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
  401e39:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
  401e3d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  401e41:	48 89 c7             	mov    rdi,rax
  401e44:	e8 81 00 00 00       	call   401eca <_ZSt12__niter_baseIPiET_S1_>
  401e49:	48 89 c1             	mov    rcx,rax
  401e4c:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
  401e50:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
  401e54:	48 89 c6             	mov    rsi,rax
  401e57:	48 89 cf             	mov    rdi,rcx
  401e5a:	e8 aa 00 00 00       	call   401f09 <_ZSt10__fill_n_aIPimiEN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT1_E7__valueET_E6__typeES6_T0_RKS4_>
  401e5f:	c9                   	leave  
  401e60:	c3                   	ret    

0000000000401e61 <_ZSt4copyISt13move_iteratorIPiES1_ET0_T_S4_S3_>:
  401e61:	55                   	push   rbp
  401e62:	48 89 e5             	mov    rbp,rsp
  401e65:	53                   	push   rbx
  401e66:	48 83 ec 28          	sub    rsp,0x28
  401e6a:	48 89 7d e0          	mov    QWORD PTR [rbp-0x20],rdi
  401e6e:	48 89 75 d0          	mov    QWORD PTR [rbp-0x30],rsi
  401e72:	48 89 55 d8          	mov    QWORD PTR [rbp-0x28],rdx
  401e76:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
  401e7a:	48 89 c7             	mov    rdi,rax
  401e7d:	e8 ca 00 00 00       	call   401f4c <_ZSt12__miter_baseIPiEDTcl12__miter_basecldtfp_4baseEEESt13move_iteratorIT_E>
  401e82:	48 89 c3             	mov    rbx,rax
  401e85:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
  401e89:	48 89 c7             	mov    rdi,rax
  401e8c:	e8 bb 00 00 00       	call   401f4c <_ZSt12__miter_baseIPiEDTcl12__miter_basecldtfp_4baseEEESt13move_iteratorIT_E>
  401e91:	48 89 c1             	mov    rcx,rax
  401e94:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
  401e98:	48 89 c2             	mov    rdx,rax
  401e9b:	48 89 de             	mov    rsi,rbx
  401e9e:	48 89 cf             	mov    rdi,rcx
  401ea1:	e8 c8 00 00 00       	call   401f6e <_ZSt14__copy_move_a2ILb1EPiS0_ET1_T0_S2_S1_>
  401ea6:	48 83 c4 28          	add    rsp,0x28
  401eaa:	5b                   	pop    rbx
  401eab:	5d                   	pop    rbp
  401eac:	c3                   	ret    

0000000000401ead <_ZSt12__niter_baseIPKiSt6vectorIiSaIiEEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE>:
  401ead:	55                   	push   rbp
  401eae:	48 89 e5             	mov    rbp,rsp
  401eb1:	48 83 ec 10          	sub    rsp,0x10
  401eb5:	48 89 7d f0          	mov    QWORD PTR [rbp-0x10],rdi
  401eb9:	48 8d 45 f0          	lea    rax,[rbp-0x10]
  401ebd:	48 89 c7             	mov    rdi,rax
  401ec0:	e8 01 01 00 00       	call   401fc6 <_ZNK9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEE4baseEv>
  401ec5:	48 8b 00             	mov    rax,QWORD PTR [rax]
  401ec8:	c9                   	leave  
  401ec9:	c3                   	ret    

0000000000401eca <_ZSt12__niter_baseIPiET_S1_>:
  401eca:	55                   	push   rbp
  401ecb:	48 89 e5             	mov    rbp,rsp
  401ece:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
  401ed2:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  401ed6:	5d                   	pop    rbp
  401ed7:	c3                   	ret    

0000000000401ed8 <_ZSt13__copy_move_aILb0EPKiPiET1_T0_S4_S3_>:
  401ed8:	55                   	push   rbp
  401ed9:	48 89 e5             	mov    rbp,rsp
  401edc:	48 83 ec 30          	sub    rsp,0x30
  401ee0:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
  401ee4:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
  401ee8:	48 89 55 d8          	mov    QWORD PTR [rbp-0x28],rdx
  401eec:	c6 45 ff 01          	mov    BYTE PTR [rbp-0x1],0x1
  401ef0:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
  401ef4:	48 8b 4d e0          	mov    rcx,QWORD PTR [rbp-0x20]
  401ef8:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  401efc:	48 89 ce             	mov    rsi,rcx
  401eff:	48 89 c7             	mov    rdi,rax
  401f02:	e8 cd 00 00 00       	call   401fd4 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIiEEPT_PKS3_S6_S4_>
  401f07:	c9                   	leave  
  401f08:	c3                   	ret    

0000000000401f09 <_ZSt10__fill_n_aIPimiEN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT1_E7__valueET_E6__typeES6_T0_RKS4_>:
  401f09:	55                   	push   rbp
  401f0a:	48 89 e5             	mov    rbp,rsp
  401f0d:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
  401f11:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
  401f15:	48 89 55 d8          	mov    QWORD PTR [rbp-0x28],rdx
  401f19:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
  401f1d:	8b 00                	mov    eax,DWORD PTR [rax]
  401f1f:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
  401f22:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
  401f26:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
  401f2a:	48 83 7d f8 00       	cmp    QWORD PTR [rbp-0x8],0x0
  401f2f:	74 15                	je     401f46 <_ZSt10__fill_n_aIPimiEN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT1_E7__valueET_E6__typeES6_T0_RKS4_+0x3d>
  401f31:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  401f35:	8b 55 f4             	mov    edx,DWORD PTR [rbp-0xc]
  401f38:	89 10                	mov    DWORD PTR [rax],edx
  401f3a:	48 83 6d f8 01       	sub    QWORD PTR [rbp-0x8],0x1
  401f3f:	48 83 45 e8 04       	add    QWORD PTR [rbp-0x18],0x4
  401f44:	eb e4                	jmp    401f2a <_ZSt10__fill_n_aIPimiEN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT1_E7__valueET_E6__typeES6_T0_RKS4_+0x21>
  401f46:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  401f4a:	5d                   	pop    rbp
  401f4b:	c3                   	ret    

0000000000401f4c <_ZSt12__miter_baseIPiEDTcl12__miter_basecldtfp_4baseEEESt13move_iteratorIT_E>:
  401f4c:	55                   	push   rbp
  401f4d:	48 89 e5             	mov    rbp,rsp
  401f50:	48 83 ec 10          	sub    rsp,0x10
  401f54:	48 89 7d f0          	mov    QWORD PTR [rbp-0x10],rdi
  401f58:	48 8d 45 f0          	lea    rax,[rbp-0x10]
  401f5c:	48 89 c7             	mov    rdi,rax
  401f5f:	e8 d6 00 00 00       	call   40203a <_ZNKSt13move_iteratorIPiE4baseEv>
  401f64:	48 89 c7             	mov    rdi,rax
  401f67:	e8 df 00 00 00       	call   40204b <_ZSt12__miter_baseIPiET_S1_>
  401f6c:	c9                   	leave  
  401f6d:	c3                   	ret    

0000000000401f6e <_ZSt14__copy_move_a2ILb1EPiS0_ET1_T0_S2_S1_>:
  401f6e:	55                   	push   rbp
  401f6f:	48 89 e5             	mov    rbp,rsp
  401f72:	41 54                	push   r12
  401f74:	53                   	push   rbx
  401f75:	48 83 ec 20          	sub    rsp,0x20
  401f79:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
  401f7d:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
  401f81:	48 89 55 d8          	mov    QWORD PTR [rbp-0x28],rdx
  401f85:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
  401f89:	48 89 c7             	mov    rdi,rax
  401f8c:	e8 39 ff ff ff       	call   401eca <_ZSt12__niter_baseIPiET_S1_>
  401f91:	49 89 c4             	mov    r12,rax
  401f94:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
  401f98:	48 89 c7             	mov    rdi,rax
  401f9b:	e8 2a ff ff ff       	call   401eca <_ZSt12__niter_baseIPiET_S1_>
  401fa0:	48 89 c3             	mov    rbx,rax
  401fa3:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  401fa7:	48 89 c7             	mov    rdi,rax
  401faa:	e8 1b ff ff ff       	call   401eca <_ZSt12__niter_baseIPiET_S1_>
  401faf:	4c 89 e2             	mov    rdx,r12
  401fb2:	48 89 de             	mov    rsi,rbx
  401fb5:	48 89 c7             	mov    rdi,rax
  401fb8:	e8 9c 00 00 00       	call   402059 <_ZSt13__copy_move_aILb1EPiS0_ET1_T0_S2_S1_>
  401fbd:	48 83 c4 20          	add    rsp,0x20
  401fc1:	5b                   	pop    rbx
  401fc2:	41 5c                	pop    r12
  401fc4:	5d                   	pop    rbp
  401fc5:	c3                   	ret    

0000000000401fc6 <_ZNK9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEE4baseEv>:
  401fc6:	55                   	push   rbp
  401fc7:	48 89 e5             	mov    rbp,rsp
  401fca:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
  401fce:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  401fd2:	5d                   	pop    rbp
  401fd3:	c3                   	ret    

0000000000401fd4 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIiEEPT_PKS3_S6_S4_>:
  401fd4:	55                   	push   rbp
  401fd5:	48 89 e5             	mov    rbp,rsp
  401fd8:	48 83 ec 30          	sub    rsp,0x30
  401fdc:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
  401fe0:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
  401fe4:	48 89 55 d8          	mov    QWORD PTR [rbp-0x28],rdx
  401fe8:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
  401fec:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  401ff0:	48 29 c2             	sub    rdx,rax
  401ff3:	48 89 d0             	mov    rax,rdx
  401ff6:	48 c1 f8 02          	sar    rax,0x2
  401ffa:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
  401ffe:	48 83 7d f8 00       	cmp    QWORD PTR [rbp-0x8],0x0
  402003:	74 1f                	je     402024 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIiEEPT_PKS3_S6_S4_+0x50>
  402005:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  402009:	48 8d 14 85 00 00 00 	lea    rdx,[rax*4+0x0]
  402010:	00 
  402011:	48 8b 4d e8          	mov    rcx,QWORD PTR [rbp-0x18]
  402015:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
  402019:	48 89 ce             	mov    rsi,rcx
  40201c:	48 89 c7             	mov    rdi,rax
  40201f:	e8 4c ea ff ff       	call   400a70 <memmove@plt>
  402024:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  402028:	48 8d 14 85 00 00 00 	lea    rdx,[rax*4+0x0]
  40202f:	00 
  402030:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
  402034:	48 01 d0             	add    rax,rdx
  402037:	c9                   	leave  
  402038:	c3                   	ret    
  402039:	90                   	nop

000000000040203a <_ZNKSt13move_iteratorIPiE4baseEv>:
  40203a:	55                   	push   rbp
  40203b:	48 89 e5             	mov    rbp,rsp
  40203e:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
  402042:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  402046:	48 8b 00             	mov    rax,QWORD PTR [rax]
  402049:	5d                   	pop    rbp
  40204a:	c3                   	ret    

000000000040204b <_ZSt12__miter_baseIPiET_S1_>:
  40204b:	55                   	push   rbp
  40204c:	48 89 e5             	mov    rbp,rsp
  40204f:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
  402053:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  402057:	5d                   	pop    rbp
  402058:	c3                   	ret    

0000000000402059 <_ZSt13__copy_move_aILb1EPiS0_ET1_T0_S2_S1_>:
  402059:	55                   	push   rbp
  40205a:	48 89 e5             	mov    rbp,rsp
  40205d:	48 83 ec 30          	sub    rsp,0x30
  402061:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
  402065:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
  402069:	48 89 55 d8          	mov    QWORD PTR [rbp-0x28],rdx
  40206d:	c6 45 ff 01          	mov    BYTE PTR [rbp-0x1],0x1
  402071:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
  402075:	48 8b 4d e0          	mov    rcx,QWORD PTR [rbp-0x20]
  402079:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  40207d:	48 89 ce             	mov    rsi,rcx
  402080:	48 89 c7             	mov    rdi,rax
  402083:	e8 02 00 00 00       	call   40208a <_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIiEEPT_PKS3_S6_S4_>
  402088:	c9                   	leave  
  402089:	c3                   	ret    

000000000040208a <_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIiEEPT_PKS3_S6_S4_>:
  40208a:	55                   	push   rbp
  40208b:	48 89 e5             	mov    rbp,rsp
  40208e:	48 83 ec 30          	sub    rsp,0x30
  402092:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
  402096:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
  40209a:	48 89 55 d8          	mov    QWORD PTR [rbp-0x28],rdx
  40209e:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
  4020a2:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  4020a6:	48 29 c2             	sub    rdx,rax
  4020a9:	48 89 d0             	mov    rax,rdx
  4020ac:	48 c1 f8 02          	sar    rax,0x2
  4020b0:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
  4020b4:	48 83 7d f8 00       	cmp    QWORD PTR [rbp-0x8],0x0
  4020b9:	74 1f                	je     4020da <_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIiEEPT_PKS3_S6_S4_+0x50>
  4020bb:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  4020bf:	48 8d 14 85 00 00 00 	lea    rdx,[rax*4+0x0]
  4020c6:	00 
  4020c7:	48 8b 4d e8          	mov    rcx,QWORD PTR [rbp-0x18]
  4020cb:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
  4020cf:	48 89 ce             	mov    rsi,rcx
  4020d2:	48 89 c7             	mov    rdi,rax
  4020d5:	e8 96 e9 ff ff       	call   400a70 <memmove@plt>
  4020da:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  4020de:	48 8d 14 85 00 00 00 	lea    rdx,[rax*4+0x0]
  4020e5:	00 
  4020e6:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
  4020ea:	48 01 d0             	add    rax,rdx
  4020ed:	c9                   	leave  
  4020ee:	c3                   	ret    
  4020ef:	90                   	nop

00000000004020f0 <__libc_csu_init>:
  4020f0:	41 57                	push   r15
  4020f2:	41 56                	push   r14
  4020f4:	41 89 ff             	mov    r15d,edi
  4020f7:	41 55                	push   r13
  4020f9:	41 54                	push   r12
  4020fb:	4c 8d 25 d6 1c 20 00 	lea    r12,[rip+0x201cd6]        # 603dd8 <__frame_dummy_init_array_entry>
  402102:	55                   	push   rbp
  402103:	48 8d 2d de 1c 20 00 	lea    rbp,[rip+0x201cde]        # 603de8 <__init_array_end>
  40210a:	53                   	push   rbx
  40210b:	49 89 f6             	mov    r14,rsi
  40210e:	49 89 d5             	mov    r13,rdx
  402111:	4c 29 e5             	sub    rbp,r12
  402114:	48 83 ec 08          	sub    rsp,0x8
  402118:	48 c1 fd 03          	sar    rbp,0x3
  40211c:	e8 8f e8 ff ff       	call   4009b0 <_init>
  402121:	48 85 ed             	test   rbp,rbp
  402124:	74 20                	je     402146 <__libc_csu_init+0x56>
  402126:	31 db                	xor    ebx,ebx
  402128:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
  40212f:	00 
  402130:	4c 89 ea             	mov    rdx,r13
  402133:	4c 89 f6             	mov    rsi,r14
  402136:	44 89 ff             	mov    edi,r15d
  402139:	41 ff 14 dc          	call   QWORD PTR [r12+rbx*8]
  40213d:	48 83 c3 01          	add    rbx,0x1
  402141:	48 39 eb             	cmp    rbx,rbp
  402144:	75 ea                	jne    402130 <__libc_csu_init+0x40>
  402146:	48 83 c4 08          	add    rsp,0x8
  40214a:	5b                   	pop    rbx
  40214b:	5d                   	pop    rbp
  40214c:	41 5c                	pop    r12
  40214e:	41 5d                	pop    r13
  402150:	41 5e                	pop    r14
  402152:	41 5f                	pop    r15
  402154:	c3                   	ret    
  402155:	90                   	nop
  402156:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  40215d:	00 00 00 

0000000000402160 <__libc_csu_fini>:
  402160:	f3 c3                	repz ret 

Disassembly of section .fini:

0000000000402164 <_fini>:
  402164:	48 83 ec 08          	sub    rsp,0x8
  402168:	48 83 c4 08          	add    rsp,0x8
  40216c:	c3                   	ret    

Disassembly of section .rodata:

0000000000402170 <_IO_stdin_used>:
  402170:	01 00                	add    DWORD PTR [rax],eax
  402172:	02 00                	add    al,BYTE PTR [rax]

0000000000402174 <_ZStL19piecewise_construct>:
  402174:	00 44 69 6d          	add    BYTE PTR [rcx+rbp*2+0x6d],al
  402178:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
  40217a:	73 69                	jae    4021e5 <__GNU_EH_FRAME_HDR+0x25>
  40217c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  40217d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  40217e:	3a 20                	cmp    ah,BYTE PTR [rax]
  402180:	00 0a                	add    BYTE PTR [rdx],cl
  402182:	45 6e                	rex.RB outs dx,BYTE PTR ds:[rsi]
  402184:	74 65                	je     4021eb <__GNU_EH_FRAME_HDR+0x2b>
  402186:	72 20                	jb     4021a8 <_ZStL19piecewise_construct+0x34>
  402188:	4d 61                	rex.WRB (bad) 
  40218a:	74 72                	je     4021fe <__GNU_EH_FRAME_HDR+0x3e>
  40218c:	69 78 20 44 61 74 61 	imul   edi,DWORD PTR [rax+0x20],0x61746144
  402193:	3a 20                	cmp    ah,BYTE PTR [rax]
  402195:	00 0a                	add    BYTE PTR [rdx],cl
  402197:	0a 4d 61             	or     cl,BYTE PTR [rbp+0x61]
  40219a:	74 72                	je     40220e <__GNU_EH_FRAME_HDR+0x4e>
  40219c:	69 78 3a 20 00 20 00 	imul   edi,DWORD PTR [rax+0x3a],0x200020
  4021a3:	76 65                	jbe    40220a <__GNU_EH_FRAME_HDR+0x4a>
  4021a5:	63 74 6f 72          	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
  4021a9:	3a 3a                	cmp    bh,BYTE PTR [rdx]
  4021ab:	5f                   	pop    rdi
  4021ac:	4d 5f                	rex.WRB pop r15
  4021ae:	65 6d                	gs ins DWORD PTR es:[rdi],dx
  4021b0:	70 6c                	jo     40221e <__GNU_EH_FRAME_HDR+0x5e>
  4021b2:	61                   	(bad)  
  4021b3:	63 65 5f             	movsxd esp,DWORD PTR [rbp+0x5f]
  4021b6:	62 61                	(bad)  {k7}
  4021b8:	63 6b 5f             	movsxd ebp,DWORD PTR [rbx+0x5f]
  4021bb:	61                   	(bad)  
  4021bc:	75 78                	jne    402236 <__GNU_EH_FRAME_HDR+0x76>
	...

Disassembly of section .eh_frame_hdr:

00000000004021c0 <__GNU_EH_FRAME_HDR>:
  4021c0:	01 1b                	add    DWORD PTR [rbx],ebx
  4021c2:	03 3b                	add    edi,DWORD PTR [rbx]
  4021c4:	c4 02 00 00          	(bad)  
  4021c8:	57                   	push   rdi
  4021c9:	00 00                	add    BYTE PTR [rax],al
  4021cb:	00 10                	add    BYTE PTR [rax],dl
  4021cd:	e8 ff ff 10 03       	call   35121d1 <_end+0x2f0ded9>
  4021d2:	00 00                	add    BYTE PTR [rax],al
  4021d4:	60                   	(bad)  
  4021d5:	e9 ff ff e0 02       	jmp    32121d9 <_end+0x2c0dee1>
  4021da:	00 00                	add    BYTE PTR [rax],al
  4021dc:	56                   	push   rsi
  4021dd:	ea                   	(bad)  
  4021de:	ff                   	(bad)  
  4021df:	ff                   	(bad)  
  4021e0:	78 03                	js     4021e5 <__GNU_EH_FRAME_HDR+0x25>
  4021e2:	00 00                	add    BYTE PTR [rax],al
  4021e4:	29 ec                	sub    esp,ebp
  4021e6:	ff                   	(bad)  
  4021e7:	ff a8 03 00 00 d5    	jmp    FWORD PTR [rax-0x2afffffd]
  4021ed:	ec                   	in     al,dx
  4021ee:	ff                   	(bad)  
  4021ef:	ff d0                	call   rax
  4021f1:	03 00                	add    eax,DWORD PTR [rax]
  4021f3:	00 c3                	add    bl,al
  4021f5:	ed                   	in     eax,dx
  4021f6:	ff                   	(bad)  
  4021f7:	ff 08                	dec    DWORD PTR [rax]
  4021f9:	0e                   	(bad)  
  4021fa:	00 00                	add    BYTE PTR [rax],al
  4021fc:	01 ee                	add    esi,ebp
  4021fe:	ff                   	(bad)  
  4021ff:	ff 28                	jmp    FWORD PTR [rax]
  402201:	0e                   	(bad)  
  402202:	00 00                	add    BYTE PTR [rax],al
  402204:	16                   	(bad)  
  402205:	ee                   	out    dx,al
  402206:	ff                   	(bad)  
  402207:	ff                   	(bad)  
  402208:	38 03                	cmp    BYTE PTR [rbx],al
  40220a:	00 00                	add    BYTE PTR [rax],al
  40220c:	28 ee                	sub    dh,ch
  40220e:	ff                   	(bad)  
  40220f:	ff                   	(bad)  
  402210:	f8                   	clc    
  402211:	03 00                	add    eax,DWORD PTR [rax]
  402213:	00 44 ee ff          	add    BYTE PTR [rsi+rbp*8-0x1],al
  402217:	ff 20                	jmp    QWORD PTR [rax]
  402219:	04 00                	add    al,0x0
  40221b:	00 88 ee ff ff 48    	add    BYTE PTR [rax+0x48ffffee],cl
  402221:	04 00                	add    al,0x0
  402223:	00 f4                	add    ah,dh
  402225:	ee                   	out    dx,al
  402226:	ff                   	(bad)  
  402227:	ff 68 04             	jmp    FWORD PTR [rax+0x4]
  40222a:	00 00                	add    BYTE PTR [rax],al
  40222c:	e4 ef                	in     al,0xef
  40222e:	ff                   	(bad)  
  40222f:	ff 98 04 00 00 0a    	call   FWORD PTR [rax+0xa000004]
  402235:	f0 ff                	lock (bad) 
  402237:	ff                   	(bad)  
  402238:	b8 04 00 00 2a       	mov    eax,0x2a000004
  40223d:	f0 ff                	lock (bad) 
  40223f:	ff                   	(bad)  
  402240:	d8 04 00             	fadd   DWORD PTR [rax+rax*1]
  402243:	00 46 f0             	add    BYTE PTR [rsi-0x10],al
  402246:	ff                   	(bad)  
  402247:	ff                   	(bad)  
  402248:	f8                   	clc    
  402249:	04 00                	add    al,0x0
  40224b:	00 62 f0             	add    BYTE PTR [rdx-0x10],ah
  40224e:	ff                   	(bad)  
  40224f:	ff 18                	call   FWORD PTR [rax]
  402251:	05 00 00 c4 f0       	add    eax,0xf0c40000
  402256:	ff                   	(bad)  
  402257:	ff 40 05             	inc    DWORD PTR [rax+0x5]
  40225a:	00 00                	add    BYTE PTR [rax],al
  40225c:	e0 f0                	loopne 40224e <__GNU_EH_FRAME_HDR+0x8e>
  40225e:	ff                   	(bad)  
  40225f:	ff 60 05             	jmp    QWORD PTR [rax+0x5]
  402262:	00 00                	add    BYTE PTR [rax],al
  402264:	fc                   	cld    
  402265:	f0 ff                	lock (bad) 
  402267:	ff 80 05 00 00 4c    	inc    DWORD PTR [rax+0x4c000005]
  40226d:	f1                   	icebp  
  40226e:	ff                   	(bad)  
  40226f:	ff a8 05 00 00 5a    	jmp    FWORD PTR [rax+0x5a000005]
  402275:	f1                   	icebp  
  402276:	ff                   	(bad)  
  402277:	ff c8                	dec    eax
  402279:	05 00 00 84 f1       	add    eax,0xf1840000
  40227e:	ff                   	(bad)  
  40227f:	ff                   	(bad)  
  402280:	e8 05 00 00 92       	call   ffffffff9240228a <_end+0xffffffff91dfdf92>
  402285:	f1                   	icebp  
  402286:	ff                   	(bad)  
  402287:	ff 08                	dec    DWORD PTR [rax]
  402289:	06                   	(bad)  
  40228a:	00 00                	add    BYTE PTR [rax],al
  40228c:	cc                   	int3   
  40228d:	f1                   	icebp  
  40228e:	ff                   	(bad)  
  40228f:	ff 28                	jmp    FWORD PTR [rax]
  402291:	06                   	(bad)  
  402292:	00 00                	add    BYTE PTR [rax],al
  402294:	b6 f3                	mov    dh,0xf3
  402296:	ff                   	(bad)  
  402297:	ff 50 06             	call   QWORD PTR [rax+0x6]
  40229a:	00 00                	add    BYTE PTR [rax],al
  40229c:	e0 f3                	loopne 402291 <__GNU_EH_FRAME_HDR+0xd1>
  40229e:	ff                   	(bad)  
  40229f:	ff 70 06             	push   QWORD PTR [rax+0x6]
  4022a2:	00 00                	add    BYTE PTR [rax],al
  4022a4:	ee                   	out    dx,al
  4022a5:	f3 ff                	repz (bad) 
  4022a7:	ff 90 06 00 00 4c    	call   QWORD PTR [rax+0x4c000006]
  4022ad:	f4                   	hlt    
  4022ae:	ff                   	(bad)  
  4022af:	ff                   	(bad)  
  4022b0:	b8 06 00 00 7c       	mov    eax,0x7c000006
  4022b5:	f4                   	hlt    
  4022b6:	ff                   	(bad)  
  4022b7:	ff                   	(bad)  
  4022b8:	d8 06                	fadd   DWORD PTR [rsi]
  4022ba:	00 00                	add    BYTE PTR [rax],al
  4022bc:	ad                   	lods   eax,DWORD PTR ds:[rsi]
  4022bd:	f4                   	hlt    
  4022be:	ff                   	(bad)  
  4022bf:	ff                   	(bad)  
  4022c0:	f8                   	clc    
  4022c1:	06                   	(bad)  
  4022c2:	00 00                	add    BYTE PTR [rax],al
  4022c4:	de f4                	fdivp  st(4),st
  4022c6:	ff                   	(bad)  
  4022c7:	ff 18                	call   FWORD PTR [rax]
  4022c9:	07                   	(bad)  
  4022ca:	00 00                	add    BYTE PTR [rax],al
  4022cc:	ea                   	(bad)  
  4022cd:	f4                   	hlt    
  4022ce:	ff                   	(bad)  
  4022cf:	ff                   	(bad)  
  4022d0:	38 07                	cmp    BYTE PTR [rdi],al
  4022d2:	00 00                	add    BYTE PTR [rax],al
  4022d4:	f6 f4                	div    ah
  4022d6:	ff                   	(bad)  
  4022d7:	ff 58 07             	call   FWORD PTR [rax+0x7]
  4022da:	00 00                	add    BYTE PTR [rax],al
  4022dc:	3a f5                	cmp    dh,ch
  4022de:	ff                   	(bad)  
  4022df:	ff                   	(bad)  
  4022e0:	78 07                	js     4022e9 <__GNU_EH_FRAME_HDR+0x129>
  4022e2:	00 00                	add    BYTE PTR [rax],al
  4022e4:	78 f5                	js     4022db <__GNU_EH_FRAME_HDR+0x11b>
  4022e6:	ff                   	(bad)  
  4022e7:	ff 98 07 00 00 ad    	call   FWORD PTR [rax-0x52fffff9]
  4022ed:	f5                   	cmc    
  4022ee:	ff                   	(bad)  
  4022ef:	ff                   	(bad)  
  4022f0:	b8 07 00 00 d4       	mov    eax,0xd4000007
  4022f5:	f5                   	cmc    
  4022f6:	ff                   	(bad)  
  4022f7:	ff                   	(bad)  
  4022f8:	d8 07                	fadd   DWORD PTR [rdi]
  4022fa:	00 00                	add    BYTE PTR [rax],al
  4022fc:	18 f6                	sbb    dh,dh
  4022fe:	ff                   	(bad)  
  4022ff:	ff                   	(bad)  
  402300:	f8                   	clc    
  402301:	07                   	(bad)  
  402302:	00 00                	add    BYTE PTR [rax],al
  402304:	e2 f6                	loop   4022fc <__GNU_EH_FRAME_HDR+0x13c>
  402306:	ff                   	(bad)  
  402307:	ff 20                	jmp    QWORD PTR [rax]
  402309:	08 00                	or     BYTE PTR [rax],al
  40230b:	00 15 f7 ff ff 40    	add    BYTE PTR [rip+0x40fffff7],dl        # 41402308 <_end+0x40dfe010>
  402311:	08 00                	or     BYTE PTR [rax],al
  402313:	00 69 f7             	add    BYTE PTR [rcx-0x9],ch
  402316:	ff                   	(bad)  
  402317:	ff 68 08             	jmp    FWORD PTR [rax+0x8]
  40231a:	00 00                	add    BYTE PTR [rax],al
  40231c:	8f                   	(bad)  
  40231d:	f7 ff                	idiv   edi
  40231f:	ff 88 08 00 00 b8    	dec    DWORD PTR [rax-0x47fffff8]
  402325:	f7 ff                	idiv   edi
  402327:	ff a8 08 00 00 de    	jmp    FWORD PTR [rax-0x21fffff8]
  40232d:	f7 ff                	idiv   edi
  40232f:	ff c8                	dec    eax
  402331:	08 00                	or     BYTE PTR [rax],al
  402333:	00 28                	add    BYTE PTR [rax],ch
  402335:	f8                   	clc    
  402336:	ff                   	(bad)  
  402337:	ff                   	(bad)  
  402338:	e8 08 00 00 82       	call   ffffffff82402345 <_end+0xffffffff81dfe04d>
  40233d:	f8                   	clc    
  40233e:	ff                   	(bad)  
  40233f:	ff 08                	dec    DWORD PTR [rax]
  402341:	09 00                	or     DWORD PTR [rax],eax
  402343:	00 9f f8 ff ff 28    	add    BYTE PTR [rdi+0x28fffff8],bl
  402349:	09 00                	or     DWORD PTR [rax],eax
  40234b:	00 d0                	add    al,dl
  40234d:	f8                   	clc    
  40234e:	ff                   	(bad)  
  40234f:	ff 48 09             	dec    DWORD PTR [rax+0x9]
  402352:	00 00                	add    BYTE PTR [rax],al
  402354:	f9                   	stc    
  402355:	f8                   	clc    
  402356:	ff                   	(bad)  
  402357:	ff 68 09             	jmp    FWORD PTR [rax+0x9]
  40235a:	00 00                	add    BYTE PTR [rax],al
  40235c:	27                   	(bad)  
  40235d:	f9                   	stc    
  40235e:	ff                   	(bad)  
  40235f:	ff 88 09 00 00 36    	dec    DWORD PTR [rax+0x36000009]
  402365:	f9                   	stc    
  402366:	ff                   	(bad)  
  402367:	ff a8 09 00 00 58    	jmp    FWORD PTR [rax+0x58000009]
  40236d:	f9                   	stc    
  40236e:	ff                   	(bad)  
  40236f:	ff c8                	dec    eax
  402371:	09 00                	or     DWORD PTR [rax],eax
  402373:	00 83 f9 ff ff e8    	add    BYTE PTR [rbx-0x17000007],al
  402379:	09 00                	or     DWORD PTR [rax],eax
  40237b:	00 ad f9 ff ff 08    	add    BYTE PTR [rbp+0x8fffff9],ch
  402381:	0a 00                	or     al,BYTE PTR [rax]
  402383:	00 d2                	add    dl,dl
  402385:	f9                   	stc    
  402386:	ff                   	(bad)  
  402387:	ff 28                	jmp    FWORD PTR [rax]
  402389:	0a 00                	or     al,BYTE PTR [rax]
  40238b:	00 04 fa             	add    BYTE PTR [rdx+rdi*8],al
  40238e:	ff                   	(bad)  
  40238f:	ff 48 0a             	dec    DWORD PTR [rax+0xa]
  402392:	00 00                	add    BYTE PTR [rax],al
  402394:	14 fa                	adc    al,0xfa
  402396:	ff                   	(bad)  
  402397:	ff 68 0a             	jmp    FWORD PTR [rax+0xa]
  40239a:	00 00                	add    BYTE PTR [rax],al
  40239c:	23 fa                	and    edi,edx
  40239e:	ff                   	(bad)  
  40239f:	ff 88 0a 00 00 50    	dec    DWORD PTR [rax+0x5000000a]
  4023a5:	fa                   	cli    
  4023a6:	ff                   	(bad)  
  4023a7:	ff a8 0a 00 00 7a    	jmp    FWORD PTR [rax+0x7a00000a]
  4023ad:	fa                   	cli    
  4023ae:	ff                   	(bad)  
  4023af:	ff c8                	dec    eax
  4023b1:	0a 00                	or     al,BYTE PTR [rax]
  4023b3:	00 9d fa ff ff e8    	add    BYTE PTR [rbp-0x17000006],bl
  4023b9:	0a 00                	or     al,BYTE PTR [rax]
  4023bb:	00 b8 fa ff ff 08    	add    BYTE PTR [rax+0x8fffffa],bh
  4023c1:	0b 00                	or     eax,DWORD PTR [rax]
  4023c3:	00 fa                	add    dl,bh
  4023c5:	fa                   	cli    
  4023c6:	ff                   	(bad)  
  4023c7:	ff 28                	jmp    FWORD PTR [rax]
  4023c9:	0b 00                	or     eax,DWORD PTR [rax]
  4023cb:	00 14 fb             	add    BYTE PTR [rbx+rdi*8],dl
  4023ce:	ff                   	(bad)  
  4023cf:	ff 48 0b             	dec    DWORD PTR [rax+0xb]
  4023d2:	00 00                	add    BYTE PTR [rax],al
  4023d4:	45 fb                	rex.RB sti 
  4023d6:	ff                   	(bad)  
  4023d7:	ff 68 0b             	jmp    FWORD PTR [rax+0xb]
  4023da:	00 00                	add    BYTE PTR [rax],al
  4023dc:	91                   	xchg   ecx,eax
  4023dd:	fb                   	sti    
  4023de:	ff                   	(bad)  
  4023df:	ff 90 0b 00 00 c2    	call   QWORD PTR [rax-0x3dfffff5]
  4023e5:	fb                   	sti    
  4023e6:	ff                   	(bad)  
  4023e7:	ff b0 0b 00 00 d6    	push   QWORD PTR [rax-0x29fffff5]
  4023ed:	fb                   	sti    
  4023ee:	ff                   	(bad)  
  4023ef:	ff d0                	call   rax
  4023f1:	0b 00                	or     eax,DWORD PTR [rax]
  4023f3:	00 03                	add    BYTE PTR [rbx],al
  4023f5:	fc                   	cld    
  4023f6:	ff                   	(bad)  
  4023f7:	ff f0                	push   rax
  4023f9:	0b 00                	or     eax,DWORD PTR [rax]
  4023fb:	00 11                	add    BYTE PTR [rcx],dl
  4023fd:	fc                   	cld    
  4023fe:	ff                   	(bad)  
  4023ff:	ff 10                	call   QWORD PTR [rax]
  402401:	0c 00                	or     al,0x0
  402403:	00 69 fc             	add    BYTE PTR [rcx-0x4],ch
  402406:	ff                   	(bad)  
  402407:	ff                   	(bad)  
  402408:	38 0c 00             	cmp    BYTE PTR [rax+rax*1],cl
  40240b:	00 a1 fc ff ff 58    	add    BYTE PTR [rcx+0x58fffffc],ah
  402411:	0c 00                	or     al,0x0
  402413:	00 ed                	add    ch,ch
  402415:	fc                   	cld    
  402416:	ff                   	(bad)  
  402417:	ff 80 0c 00 00 0a    	inc    DWORD PTR [rax+0xa00000c]
  40241d:	fd                   	std    
  40241e:	ff                   	(bad)  
  40241f:	ff a0 0c 00 00 18    	jmp    QWORD PTR [rax+0x1800000c]
  402425:	fd                   	std    
  402426:	ff                   	(bad)  
  402427:	ff c0                	inc    eax
  402429:	0c 00                	or     al,0x0
  40242b:	00 49 fd             	add    BYTE PTR [rcx-0x3],cl
  40242e:	ff                   	(bad)  
  40242f:	ff e0                	jmp    rax
  402431:	0c 00                	or     al,0x0
  402433:	00 8c fd ff ff 00 0d 	add    BYTE PTR [rbp+rdi*8+0xd00ffff],cl
  40243a:	00 00                	add    BYTE PTR [rax],al
  40243c:	ae                   	scas   al,BYTE PTR es:[rdi]
  40243d:	fd                   	std    
  40243e:	ff                   	(bad)  
  40243f:	ff 20                	jmp    QWORD PTR [rax]
  402441:	0d 00 00 06 fe       	or     eax,0xfe060000
  402446:	ff                   	(bad)  
  402447:	ff 48 0d             	dec    DWORD PTR [rax+0xd]
  40244a:	00 00                	add    BYTE PTR [rax],al
  40244c:	14 fe                	adc    al,0xfe
  40244e:	ff                   	(bad)  
  40244f:	ff 68 0d             	jmp    FWORD PTR [rax+0xd]
  402452:	00 00                	add    BYTE PTR [rax],al
  402454:	7a fe                	jp     402454 <__GNU_EH_FRAME_HDR+0x294>
  402456:	ff                   	(bad)  
  402457:	ff 88 0d 00 00 8b    	dec    DWORD PTR [rax-0x74fffff3]
  40245d:	fe                   	(bad)  
  40245e:	ff                   	(bad)  
  40245f:	ff a8 0d 00 00 99    	jmp    FWORD PTR [rax-0x66fffff3]
  402465:	fe                   	(bad)  
  402466:	ff                   	(bad)  
  402467:	ff c8                	dec    eax
  402469:	0d 00 00 ca fe       	or     eax,0xfeca0000
  40246e:	ff                   	(bad)  
  40246f:	ff                   	(bad)  
  402470:	e8 0d 00 00 30       	call   30402482 <_end+0x2fdfe18a>
  402475:	ff                   	(bad)  
  402476:	ff                   	(bad)  
  402477:	ff 48 0e             	dec    DWORD PTR [rax+0xe]
  40247a:	00 00                	add    BYTE PTR [rax],al
  40247c:	a0                   	.byte 0xa0
  40247d:	ff                   	(bad)  
  40247e:	ff                   	(bad)  
  40247f:	ff                   	.byte 0xff
  402480:	90                   	nop
  402481:	0e                   	(bad)  
	...

Disassembly of section .eh_frame:

0000000000402488 <__FRAME_END__-0xbe0>:
  402488:	14 00                	adc    al,0x0
  40248a:	00 00                	add    BYTE PTR [rax],al
  40248c:	00 00                	add    BYTE PTR [rax],al
  40248e:	00 00                	add    BYTE PTR [rax],al
  402490:	01 7a 52             	add    DWORD PTR [rdx+0x52],edi
  402493:	00 01                	add    BYTE PTR [rcx],al
  402495:	78 10                	js     4024a7 <__GNU_EH_FRAME_HDR+0x2e7>
  402497:	01 1b                	add    DWORD PTR [rbx],ebx
  402499:	0c 07                	or     al,0x7
  40249b:	08 90 01 07 10 14    	or     BYTE PTR [rax+0x14100701],dl
  4024a1:	00 00                	add    BYTE PTR [rax],al
  4024a3:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  4024a6:	00 00                	add    BYTE PTR [rax],al
  4024a8:	78 e6                	js     402490 <__GNU_EH_FRAME_HDR+0x2d0>
  4024aa:	ff                   	(bad)  
  4024ab:	ff 2a                	jmp    FWORD PTR [rdx]
	...
  4024b5:	00 00                	add    BYTE PTR [rax],al
  4024b7:	00 14 00             	add    BYTE PTR [rax+rax*1],dl
  4024ba:	00 00                	add    BYTE PTR [rax],al
  4024bc:	00 00                	add    BYTE PTR [rax],al
  4024be:	00 00                	add    BYTE PTR [rax],al
  4024c0:	01 7a 52             	add    DWORD PTR [rdx+0x52],edi
  4024c3:	00 01                	add    BYTE PTR [rcx],al
  4024c5:	78 10                	js     4024d7 <__GNU_EH_FRAME_HDR+0x317>
  4024c7:	01 1b                	add    DWORD PTR [rbx],ebx
  4024c9:	0c 07                	or     al,0x7
  4024cb:	08 90 01 00 00 24    	or     BYTE PTR [rax+0x24000001],dl
  4024d1:	00 00                	add    BYTE PTR [rax],al
  4024d3:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  4024d6:	00 00                	add    BYTE PTR [rax],al
  4024d8:	f8                   	clc    
  4024d9:	e4 ff                	in     al,0xff
  4024db:	ff 40 01             	inc    DWORD PTR [rax+0x1]
  4024de:	00 00                	add    BYTE PTR [rax],al
  4024e0:	00 0e                	add    BYTE PTR [rsi],cl
  4024e2:	10 46 0e             	adc    BYTE PTR [rsi+0xe],al
  4024e5:	18 4a 0f             	sbb    BYTE PTR [rdx+0xf],cl
  4024e8:	0b 77 08             	or     esi,DWORD PTR [rdi+0x8]
  4024eb:	80 00 3f             	add    BYTE PTR [rax],0x3f
  4024ee:	1a 3b                	sbb    bh,BYTE PTR [rbx]
  4024f0:	2a 33                	sub    dh,BYTE PTR [rbx]
  4024f2:	24 22                	and    al,0x22
  4024f4:	00 00                	add    BYTE PTR [rax],al
  4024f6:	00 00                	add    BYTE PTR [rax],al
  4024f8:	1c 00                	sbb    al,0x0
  4024fa:	00 00                	add    BYTE PTR [rax],al
  4024fc:	44 00 00             	add    BYTE PTR [rax],r8b
  4024ff:	00 d6                	add    dh,dl
  402501:	ea                   	(bad)  
  402502:	ff                   	(bad)  
  402503:	ff 12                	call   QWORD PTR [rdx]
  402505:	00 00                	add    BYTE PTR [rax],al
  402507:	00 00                	add    BYTE PTR [rax],al
  402509:	41 0e                	rex.B (bad) 
  40250b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  402511:	4d 0c 07             	rex.WRB or al,0x7
  402514:	08 00                	or     BYTE PTR [rax],al
  402516:	00 00                	add    BYTE PTR [rax],al
  402518:	1c 00                	sbb    al,0x0
  40251a:	00 00                	add    BYTE PTR [rax],al
  40251c:	00 00                	add    BYTE PTR [rax],al
  40251e:	00 00                	add    BYTE PTR [rax],al
  402520:	01 7a 50             	add    DWORD PTR [rdx+0x50],edi
  402523:	4c 52                	rex.WR push rdx
  402525:	00 01                	add    BYTE PTR [rcx],al
  402527:	78 10                	js     402539 <__GNU_EH_FRAME_HDR+0x379>
  402529:	07                   	(bad)  
  40252a:	03 e0                	add    esp,eax
  40252c:	0a 40 00             	or     al,BYTE PTR [rax+0x0]
  40252f:	03 1b                	add    ebx,DWORD PTR [rbx]
  402531:	0c 07                	or     al,0x7
  402533:	08 90 01 00 00 2c    	or     BYTE PTR [rax+0x2c000001],dl
  402539:	00 00                	add    BYTE PTR [rax],al
  40253b:	00 24 00             	add    BYTE PTR [rax+rax*1],ah
  40253e:	00 00                	add    BYTE PTR [rax],al
  402540:	d6                   	(bad)  
  402541:	e6 ff                	out    0xff,al
  402543:	ff d3                	call   rbx
  402545:	01 00                	add    DWORD PTR [rax],eax
  402547:	00 04 6c             	add    BYTE PTR [rsp+rbp*2],al
  40254a:	30 40 00             	xor    BYTE PTR [rax+0x0],al
  40254d:	41 0e                	rex.B (bad) 
  40254f:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  402555:	4c 8d 03             	lea    r8,[rbx]
  402558:	8c 04 83             	mov    WORD PTR [rbx+rax*4],es
  40255b:	05 03 c2 01 0c       	add    eax,0xc01c203
  402560:	07                   	(bad)  
  402561:	08 00                	or     BYTE PTR [rax],al
  402563:	00 00                	add    BYTE PTR [rax],al
  402565:	00 00                	add    BYTE PTR [rax],al
  402567:	00 24 00             	add    BYTE PTR [rax+rax*1],ah
  40256a:	00 00                	add    BYTE PTR [rax],al
  40256c:	b4 00                	mov    ah,0x0
  40256e:	00 00                	add    BYTE PTR [rax],al
  402570:	79 e8                	jns    40255a <__GNU_EH_FRAME_HDR+0x39a>
  402572:	ff                   	(bad)  
  402573:	ff ac 00 00 00 00 41 	jmp    FWORD PTR [rax+rax*1+0x41000000]
  40257a:	0e                   	(bad)  
  40257b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  402581:	45 83 03 02          	rex.RB add DWORD PTR [r11],0x2
  402585:	a2 0c 07 08 00 00 00 	movabs ds:0x8070c,al
  40258c:	00 00 
  40258e:	00 00                	add    BYTE PTR [rax],al
  402590:	24 00                	and    al,0x0
  402592:	00 00                	add    BYTE PTR [rax],al
  402594:	7c 00                	jl     402596 <__GNU_EH_FRAME_HDR+0x3d6>
  402596:	00 00                	add    BYTE PTR [rax],al
  402598:	fd                   	std    
  402599:	e8 ff ff ee 00       	call   12f259d <_end+0xcee2a5>
  40259e:	00 00                	add    BYTE PTR [rax],al
  4025a0:	04 93                	add    al,0x93
  4025a2:	30 40 00             	xor    BYTE PTR [rax+0x0],al
  4025a5:	41 0e                	rex.B (bad) 
  4025a7:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  4025ad:	45 83 03 02          	rex.RB add DWORD PTR [r11],0x2
  4025b1:	e4 0c                	in     al,0xc
  4025b3:	07                   	(bad)  
  4025b4:	08 00                	or     BYTE PTR [rax],al
  4025b6:	00 00                	add    BYTE PTR [rax],al
  4025b8:	24 00                	and    al,0x0
  4025ba:	00 00                	add    BYTE PTR [rax],al
  4025bc:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  4025bd:	00 00                	add    BYTE PTR [rax],al
  4025bf:	00 28                	add    BYTE PTR [rax],ch
  4025c1:	ea                   	(bad)  
  4025c2:	ff                   	(bad)  
  4025c3:	ff 1b                	call   FWORD PTR [rbx]
  4025c5:	00 00                	add    BYTE PTR [rax],al
  4025c7:	00 04 a7             	add    BYTE PTR [rdi+riz*4],al
  4025ca:	30 40 00             	xor    BYTE PTR [rax+0x0],al
  4025cd:	41 0e                	rex.B (bad) 
  4025cf:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  4025d5:	56                   	push   rsi
  4025d6:	0c 07                	or     al,0x7
  4025d8:	08 00                	or     BYTE PTR [rax],al
  4025da:	00 00                	add    BYTE PTR [rax],al
  4025dc:	00 00                	add    BYTE PTR [rax],al
  4025de:	00 00                	add    BYTE PTR [rax],al
  4025e0:	24 00                	and    al,0x0
  4025e2:	00 00                	add    BYTE PTR [rax],al
  4025e4:	cc                   	int3   
  4025e5:	00 00                	add    BYTE PTR [rax],al
  4025e7:	00 1c ea             	add    BYTE PTR [rdx+rbp*8],bl
  4025ea:	ff                   	(bad)  
  4025eb:	ff 44 00 00          	inc    DWORD PTR [rax+rax*1+0x0]
  4025ef:	00 04 ab             	add    BYTE PTR [rbx+rbp*4],al
  4025f2:	30 40 00             	xor    BYTE PTR [rax+0x0],al
  4025f5:	41 0e                	rex.B (bad) 
  4025f7:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  4025fd:	7f 0c                	jg     40260b <__GNU_EH_FRAME_HDR+0x44b>
  4025ff:	07                   	(bad)  
  402600:	08 00                	or     BYTE PTR [rax],al
  402602:	00 00                	add    BYTE PTR [rax],al
  402604:	00 00                	add    BYTE PTR [rax],al
  402606:	00 00                	add    BYTE PTR [rax],al
  402608:	1c 00                	sbb    al,0x0
  40260a:	00 00                	add    BYTE PTR [rax],al
  40260c:	54                   	push   rsp
  40260d:	01 00                	add    DWORD PTR [rax],eax
  40260f:	00 38                	add    BYTE PTR [rax],bh
  402611:	ea                   	(bad)  
  402612:	ff                   	(bad)  
  402613:	ff 6c 00 00          	jmp    FWORD PTR [rax+rax*1+0x0]
  402617:	00 00                	add    BYTE PTR [rax],al
  402619:	41 0e                	rex.B (bad) 
  40261b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  402621:	02 67 0c             	add    ah,BYTE PTR [rdi+0xc]
  402624:	07                   	(bad)  
  402625:	08 00                	or     BYTE PTR [rax],al
  402627:	00 2c 00             	add    BYTE PTR [rax+rax*1],ch
  40262a:	00 00                	add    BYTE PTR [rax],al
  40262c:	14 01                	adc    al,0x1
  40262e:	00 00                	add    BYTE PTR [rax],al
  402630:	84 ea                	test   dl,ch
  402632:	ff                   	(bad)  
  402633:	ff                   	(bad)  
  402634:	ef                   	out    dx,eax
  402635:	00 00                	add    BYTE PTR [rax],al
  402637:	00 04 af             	add    BYTE PTR [rdi+rbp*4],al
  40263a:	30 40 00             	xor    BYTE PTR [rax+0x0],al
  40263d:	41 0e                	rex.B (bad) 
  40263f:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  402645:	49 8d 03             	lea    rax,[r11]
  402648:	8c 04 83             	mov    WORD PTR [rbx+rax*4],es
  40264b:	05 02 e1 0c 07       	add    eax,0x70ce102
  402650:	08 00                	or     BYTE PTR [rax],al
  402652:	00 00                	add    BYTE PTR [rax],al
  402654:	00 00                	add    BYTE PTR [rax],al
  402656:	00 00                	add    BYTE PTR [rax],al
  402658:	1c 00                	sbb    al,0x0
  40265a:	00 00                	add    BYTE PTR [rax],al
  40265c:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  40265d:	01 00                	add    DWORD PTR [rax],eax
  40265f:	00 44 eb ff          	add    BYTE PTR [rbx+rbp*8-0x1],al
  402663:	ff 26                	jmp    QWORD PTR [rsi]
  402665:	00 00                	add    BYTE PTR [rax],al
  402667:	00 00                	add    BYTE PTR [rax],al
  402669:	41 0e                	rex.B (bad) 
  40266b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  402671:	61                   	(bad)  
  402672:	0c 07                	or     al,0x7
  402674:	08 00                	or     BYTE PTR [rax],al
  402676:	00 00                	add    BYTE PTR [rax],al
  402678:	1c 00                	sbb    al,0x0
  40267a:	00 00                	add    BYTE PTR [rax],al
  40267c:	c4 01 00 00          	(bad)  
  402680:	4a eb ff             	rex.WX jmp 402682 <__GNU_EH_FRAME_HDR+0x4c2>
  402683:	ff 20                	jmp    QWORD PTR [rax]
  402685:	00 00                	add    BYTE PTR [rax],al
  402687:	00 00                	add    BYTE PTR [rax],al
  402689:	41 0e                	rex.B (bad) 
  40268b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  402691:	5b                   	pop    rbx
  402692:	0c 07                	or     al,0x7
  402694:	08 00                	or     BYTE PTR [rax],al
  402696:	00 00                	add    BYTE PTR [rax],al
  402698:	1c 00                	sbb    al,0x0
  40269a:	00 00                	add    BYTE PTR [rax],al
  40269c:	e4 01                	in     al,0x1
  40269e:	00 00                	add    BYTE PTR [rax],al
  4026a0:	4a eb ff             	rex.WX jmp 4026a2 <__GNU_EH_FRAME_HDR+0x4e2>
  4026a3:	ff 1b                	call   FWORD PTR [rbx]
  4026a5:	00 00                	add    BYTE PTR [rax],al
  4026a7:	00 00                	add    BYTE PTR [rax],al
  4026a9:	41 0e                	rex.B (bad) 
  4026ab:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  4026b1:	56                   	push   rsi
  4026b2:	0c 07                	or     al,0x7
  4026b4:	08 00                	or     BYTE PTR [rax],al
  4026b6:	00 00                	add    BYTE PTR [rax],al
  4026b8:	1c 00                	sbb    al,0x0
  4026ba:	00 00                	add    BYTE PTR [rax],al
  4026bc:	04 02                	add    al,0x2
  4026be:	00 00                	add    BYTE PTR [rax],al
  4026c0:	46 eb ff             	rex.RX jmp 4026c2 <__GNU_EH_FRAME_HDR+0x502>
  4026c3:	ff 1b                	call   FWORD PTR [rbx]
  4026c5:	00 00                	add    BYTE PTR [rax],al
  4026c7:	00 00                	add    BYTE PTR [rax],al
  4026c9:	41 0e                	rex.B (bad) 
  4026cb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  4026d1:	56                   	push   rsi
  4026d2:	0c 07                	or     al,0x7
  4026d4:	08 00                	or     BYTE PTR [rax],al
  4026d6:	00 00                	add    BYTE PTR [rax],al
  4026d8:	24 00                	and    al,0x0
  4026da:	00 00                	add    BYTE PTR [rax],al
  4026dc:	c4 01 00 00          	(bad)  
  4026e0:	42 eb ff             	rex.X jmp 4026e2 <__GNU_EH_FRAME_HDR+0x522>
  4026e3:	ff 62 00             	jmp    QWORD PTR [rdx+0x0]
  4026e6:	00 00                	add    BYTE PTR [rax],al
  4026e8:	04 c7                	add    al,0xc7
  4026ea:	30 40 00             	xor    BYTE PTR [rax+0x0],al
  4026ed:	41 0e                	rex.B (bad) 
  4026ef:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  4026f5:	45 83 03 02          	rex.RB add DWORD PTR [r11],0x2
  4026f9:	58                   	pop    rax
  4026fa:	0c 07                	or     al,0x7
  4026fc:	08 00                	or     BYTE PTR [rax],al
  4026fe:	00 00                	add    BYTE PTR [rax],al
  402700:	1c 00                	sbb    al,0x0
  402702:	00 00                	add    BYTE PTR [rax],al
  402704:	4c 02 00             	rex.WR add r8b,BYTE PTR [rax]
  402707:	00 7c eb ff          	add    BYTE PTR [rbx+rbp*8-0x1],bh
  40270b:	ff 1b                	call   FWORD PTR [rbx]
  40270d:	00 00                	add    BYTE PTR [rax],al
  40270f:	00 00                	add    BYTE PTR [rax],al
  402711:	41 0e                	rex.B (bad) 
  402713:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  402719:	56                   	push   rsi
  40271a:	0c 07                	or     al,0x7
  40271c:	08 00                	or     BYTE PTR [rax],al
  40271e:	00 00                	add    BYTE PTR [rax],al
  402720:	1c 00                	sbb    al,0x0
  402722:	00 00                	add    BYTE PTR [rax],al
  402724:	6c                   	ins    BYTE PTR es:[rdi],dx
  402725:	02 00                	add    al,BYTE PTR [rax]
  402727:	00 78 eb             	add    BYTE PTR [rax-0x15],bh
  40272a:	ff                   	(bad)  
  40272b:	ff 1b                	call   FWORD PTR [rbx]
  40272d:	00 00                	add    BYTE PTR [rax],al
  40272f:	00 00                	add    BYTE PTR [rax],al
  402731:	41 0e                	rex.B (bad) 
  402733:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  402739:	56                   	push   rsi
  40273a:	0c 07                	or     al,0x7
  40273c:	08 00                	or     BYTE PTR [rax],al
  40273e:	00 00                	add    BYTE PTR [rax],al
  402740:	24 00                	and    al,0x0
  402742:	00 00                	add    BYTE PTR [rax],al
  402744:	2c 02                	sub    al,0x2
  402746:	00 00                	add    BYTE PTR [rax],al
  402748:	74 eb                	je     402735 <__GNU_EH_FRAME_HDR+0x575>
  40274a:	ff                   	(bad)  
  40274b:	ff 50 00             	call   QWORD PTR [rax+0x0]
  40274e:	00 00                	add    BYTE PTR [rax],al
  402750:	04 d7                	add    al,0xd7
  402752:	30 40 00             	xor    BYTE PTR [rax+0x0],al
  402755:	41 0e                	rex.B (bad) 
  402757:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  40275d:	02 4b 0c             	add    cl,BYTE PTR [rbx+0xc]
  402760:	07                   	(bad)  
  402761:	08 00                	or     BYTE PTR [rax],al
  402763:	00 00                	add    BYTE PTR [rax],al
  402765:	00 00                	add    BYTE PTR [rax],al
  402767:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  40276a:	00 00                	add    BYTE PTR [rax],al
  40276c:	b4 02                	mov    ah,0x2
  40276e:	00 00                	add    BYTE PTR [rax],al
  402770:	9c                   	pushf  
  402771:	eb ff                	jmp    402772 <__GNU_EH_FRAME_HDR+0x5b2>
  402773:	ff 0e                	dec    DWORD PTR [rsi]
  402775:	00 00                	add    BYTE PTR [rax],al
  402777:	00 00                	add    BYTE PTR [rax],al
  402779:	41 0e                	rex.B (bad) 
  40277b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  402781:	49 0c 07             	rex.WB or al,0x7
  402784:	08 00                	or     BYTE PTR [rax],al
  402786:	00 00                	add    BYTE PTR [rax],al
  402788:	1c 00                	sbb    al,0x0
  40278a:	00 00                	add    BYTE PTR [rax],al
  40278c:	d4                   	(bad)  
  40278d:	02 00                	add    al,BYTE PTR [rax]
  40278f:	00 8a eb ff ff 2a    	add    BYTE PTR [rdx+0x2affffeb],cl
  402795:	00 00                	add    BYTE PTR [rax],al
  402797:	00 00                	add    BYTE PTR [rax],al
  402799:	41 0e                	rex.B (bad) 
  40279b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  4027a1:	65 0c 07             	gs or  al,0x7
  4027a4:	08 00                	or     BYTE PTR [rax],al
  4027a6:	00 00                	add    BYTE PTR [rax],al
  4027a8:	1c 00                	sbb    al,0x0
  4027aa:	00 00                	add    BYTE PTR [rax],al
  4027ac:	f4                   	hlt    
  4027ad:	02 00                	add    al,BYTE PTR [rax]
  4027af:	00 94 eb ff ff 0e 00 	add    BYTE PTR [rbx+rbp*8+0xeffff],dl
  4027b6:	00 00                	add    BYTE PTR [rax],al
  4027b8:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
  4027bb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  4027c1:	49 0c 07             	rex.WB or al,0x7
  4027c4:	08 00                	or     BYTE PTR [rax],al
  4027c6:	00 00                	add    BYTE PTR [rax],al
  4027c8:	1c 00                	sbb    al,0x0
  4027ca:	00 00                	add    BYTE PTR [rax],al
  4027cc:	14 03                	adc    al,0x3
  4027ce:	00 00                	add    BYTE PTR [rax],al
  4027d0:	82                   	(bad)  
  4027d1:	eb ff                	jmp    4027d2 <__GNU_EH_FRAME_HDR+0x612>
  4027d3:	ff                   	(bad)  
  4027d4:	39 00                	cmp    DWORD PTR [rax],eax
  4027d6:	00 00                	add    BYTE PTR [rax],al
  4027d8:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
  4027db:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  4027e1:	74 0c                	je     4027ef <__GNU_EH_FRAME_HDR+0x62f>
  4027e3:	07                   	(bad)  
  4027e4:	08 00                	or     BYTE PTR [rax],al
  4027e6:	00 00                	add    BYTE PTR [rax],al
  4027e8:	24 00                	and    al,0x0
  4027ea:	00 00                	add    BYTE PTR [rax],al
  4027ec:	d4                   	(bad)  
  4027ed:	02 00                	add    al,BYTE PTR [rax]
  4027ef:	00 9c eb ff ff ea 01 	add    BYTE PTR [rbx+rbp*8+0x1eaffff],bl
  4027f6:	00 00                	add    BYTE PTR [rax],al
  4027f8:	04 dc                	add    al,0xdc
  4027fa:	30 40 00             	xor    BYTE PTR [rax+0x0],al
  4027fd:	41 0e                	rex.B (bad) 
  4027ff:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  402805:	45 83 03 03          	rex.RB add DWORD PTR [r11],0x3
  402809:	e0 01                	loopne 40280c <__GNU_EH_FRAME_HDR+0x64c>
  40280b:	0c 07                	or     al,0x7
  40280d:	08 00                	or     BYTE PTR [rax],al
  40280f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  402812:	00 00                	add    BYTE PTR [rax],al
  402814:	5c                   	pop    rsp
  402815:	03 00                	add    eax,DWORD PTR [rax]
  402817:	00 5e ed             	add    BYTE PTR [rsi-0x13],bl
  40281a:	ff                   	(bad)  
  40281b:	ff 29                	jmp    FWORD PTR [rcx]
  40281d:	00 00                	add    BYTE PTR [rax],al
  40281f:	00 00                	add    BYTE PTR [rax],al
  402821:	41 0e                	rex.B (bad) 
  402823:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  402829:	64 0c 07             	fs or  al,0x7
  40282c:	08 00                	or     BYTE PTR [rax],al
  40282e:	00 00                	add    BYTE PTR [rax],al
  402830:	1c 00                	sbb    al,0x0
  402832:	00 00                	add    BYTE PTR [rax],al
  402834:	7c 03                	jl     402839 <__GNU_EH_FRAME_HDR+0x679>
  402836:	00 00                	add    BYTE PTR [rax],al
  402838:	68 ed ff ff 0e       	push   0xeffffed
  40283d:	00 00                	add    BYTE PTR [rax],al
  40283f:	00 00                	add    BYTE PTR [rax],al
  402841:	41 0e                	rex.B (bad) 
  402843:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  402849:	49 0c 07             	rex.WB or al,0x7
  40284c:	08 00                	or     BYTE PTR [rax],al
  40284e:	00 00                	add    BYTE PTR [rax],al
  402850:	24 00                	and    al,0x0
  402852:	00 00                	add    BYTE PTR [rax],al
  402854:	3c 03                	cmp    al,0x3
  402856:	00 00                	add    BYTE PTR [rax],al
  402858:	56                   	push   rsi
  402859:	ed                   	in     eax,dx
  40285a:	ff                   	(bad)  
  40285b:	ff 5e 00             	call   FWORD PTR [rsi+0x0]
  40285e:	00 00                	add    BYTE PTR [rax],al
  402860:	04 04                	add    al,0x4
  402862:	31 40 00             	xor    DWORD PTR [rax+0x0],eax
  402865:	41 0e                	rex.B (bad) 
  402867:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  40286d:	45 83 03 02          	rex.RB add DWORD PTR [r11],0x2
  402871:	54                   	push   rsp
  402872:	0c 07                	or     al,0x7
  402874:	08 00                	or     BYTE PTR [rax],al
  402876:	00 00                	add    BYTE PTR [rax],al
  402878:	1c 00                	sbb    al,0x0
  40287a:	00 00                	add    BYTE PTR [rax],al
  40287c:	c4 03 00 00          	(bad)  
  402880:	8c ed                	mov    ebp,gs
  402882:	ff                   	(bad)  
  402883:	ff 30                	push   QWORD PTR [rax]
  402885:	00 00                	add    BYTE PTR [rax],al
  402887:	00 00                	add    BYTE PTR [rax],al
  402889:	41 0e                	rex.B (bad) 
  40288b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  402891:	6b 0c 07 08          	imul   ecx,DWORD PTR [rdi+rax*1],0x8
  402895:	00 00                	add    BYTE PTR [rax],al
  402897:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  40289a:	00 00                	add    BYTE PTR [rax],al
  40289c:	e4 03                	in     al,0x3
  40289e:	00 00                	add    BYTE PTR [rax],al
  4028a0:	9c                   	pushf  
  4028a1:	ed                   	in     eax,dx
  4028a2:	ff                   	(bad)  
  4028a3:	ff 31                	push   QWORD PTR [rcx]
  4028a5:	00 00                	add    BYTE PTR [rax],al
  4028a7:	00 00                	add    BYTE PTR [rax],al
  4028a9:	41 0e                	rex.B (bad) 
  4028ab:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  4028b1:	6c                   	ins    BYTE PTR es:[rdi],dx
  4028b2:	0c 07                	or     al,0x7
  4028b4:	08 00                	or     BYTE PTR [rax],al
  4028b6:	00 00                	add    BYTE PTR [rax],al
  4028b8:	1c 00                	sbb    al,0x0
  4028ba:	00 00                	add    BYTE PTR [rax],al
  4028bc:	04 04                	add    al,0x4
  4028be:	00 00                	add    BYTE PTR [rax],al
  4028c0:	ad                   	lods   eax,DWORD PTR ds:[rsi]
  4028c1:	ed                   	in     eax,dx
  4028c2:	ff                   	(bad)  
  4028c3:	ff 31                	push   QWORD PTR [rcx]
  4028c5:	00 00                	add    BYTE PTR [rax],al
  4028c7:	00 00                	add    BYTE PTR [rax],al
  4028c9:	41 0e                	rex.B (bad) 
  4028cb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  4028d1:	6c                   	ins    BYTE PTR es:[rdi],dx
  4028d2:	0c 07                	or     al,0x7
  4028d4:	08 00                	or     BYTE PTR [rax],al
  4028d6:	00 00                	add    BYTE PTR [rax],al
  4028d8:	1c 00                	sbb    al,0x0
  4028da:	00 00                	add    BYTE PTR [rax],al
  4028dc:	24 04                	and    al,0x4
  4028de:	00 00                	add    BYTE PTR [rax],al
  4028e0:	be ed ff ff 0b       	mov    esi,0xbffffed
  4028e5:	00 00                	add    BYTE PTR [rax],al
  4028e7:	00 00                	add    BYTE PTR [rax],al
  4028e9:	41 0e                	rex.B (bad) 
  4028eb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  4028f1:	46 0c 07             	rex.RX or al,0x7
  4028f4:	08 00                	or     BYTE PTR [rax],al
  4028f6:	00 00                	add    BYTE PTR [rax],al
  4028f8:	1c 00                	sbb    al,0x0
  4028fa:	00 00                	add    BYTE PTR [rax],al
  4028fc:	44 04 00             	rex.R add al,0x0
  4028ff:	00 aa ed ff ff 0b    	add    BYTE PTR [rdx+0xbffffed],ch
  402905:	00 00                	add    BYTE PTR [rax],al
  402907:	00 00                	add    BYTE PTR [rax],al
  402909:	41 0e                	rex.B (bad) 
  40290b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  402911:	46 0c 07             	rex.RX or al,0x7
  402914:	08 00                	or     BYTE PTR [rax],al
  402916:	00 00                	add    BYTE PTR [rax],al
  402918:	1c 00                	sbb    al,0x0
  40291a:	00 00                	add    BYTE PTR [rax],al
  40291c:	64 04 00             	fs add al,0x0
  40291f:	00 96 ed ff ff 43    	add    BYTE PTR [rsi+0x43ffffed],dl
  402925:	00 00                	add    BYTE PTR [rax],al
  402927:	00 00                	add    BYTE PTR [rax],al
  402929:	41 0e                	rex.B (bad) 
  40292b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  402931:	7e 0c                	jle    40293f <__GNU_EH_FRAME_HDR+0x77f>
  402933:	07                   	(bad)  
  402934:	08 00                	or     BYTE PTR [rax],al
  402936:	00 00                	add    BYTE PTR [rax],al
  402938:	1c 00                	sbb    al,0x0
  40293a:	00 00                	add    BYTE PTR [rax],al
  40293c:	84 04 00             	test   BYTE PTR [rax+rax*1],al
  40293f:	00 ba ed ff ff 3e    	add    BYTE PTR [rdx+0x3effffed],bh
  402945:	00 00                	add    BYTE PTR [rax],al
  402947:	00 00                	add    BYTE PTR [rax],al
  402949:	41 0e                	rex.B (bad) 
  40294b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  402951:	79 0c                	jns    40295f <__GNU_EH_FRAME_HDR+0x79f>
  402953:	07                   	(bad)  
  402954:	08 00                	or     BYTE PTR [rax],al
  402956:	00 00                	add    BYTE PTR [rax],al
  402958:	1c 00                	sbb    al,0x0
  40295a:	00 00                	add    BYTE PTR [rax],al
  40295c:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  40295d:	04 00                	add    al,0x0
  40295f:	00 d8                	add    al,bl
  402961:	ed                   	in     eax,dx
  402962:	ff                   	(bad)  
  402963:	ff 35 00 00 00 00    	push   QWORD PTR [rip+0x0]        # 402969 <__GNU_EH_FRAME_HDR+0x7a9>
  402969:	41 0e                	rex.B (bad) 
  40296b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  402971:	70 0c                	jo     40297f <__GNU_EH_FRAME_HDR+0x7bf>
  402973:	07                   	(bad)  
  402974:	08 00                	or     BYTE PTR [rax],al
  402976:	00 00                	add    BYTE PTR [rax],al
  402978:	1c 00                	sbb    al,0x0
  40297a:	00 00                	add    BYTE PTR [rax],al
  40297c:	c4                   	(bad)  
  40297d:	04 00                	add    al,0x0
  40297f:	00 ed                	add    ch,ch
  402981:	ed                   	in     eax,dx
  402982:	ff                   	(bad)  
  402983:	ff 26                	jmp    QWORD PTR [rsi]
  402985:	00 00                	add    BYTE PTR [rax],al
  402987:	00 00                	add    BYTE PTR [rax],al
  402989:	41 0e                	rex.B (bad) 
  40298b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  402991:	61                   	(bad)  
  402992:	0c 07                	or     al,0x7
  402994:	08 00                	or     BYTE PTR [rax],al
  402996:	00 00                	add    BYTE PTR [rax],al
  402998:	1c 00                	sbb    al,0x0
  40299a:	00 00                	add    BYTE PTR [rax],al
  40299c:	e4 04                	in     al,0x4
  40299e:	00 00                	add    BYTE PTR [rax],al
  4029a0:	f4                   	hlt    
  4029a1:	ed                   	in     eax,dx
  4029a2:	ff                   	(bad)  
  4029a3:	ff 43 00             	inc    DWORD PTR [rbx+0x0]
  4029a6:	00 00                	add    BYTE PTR [rax],al
  4029a8:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
  4029ab:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  4029b1:	45 83 03 79          	rex.RB add DWORD PTR [r11],0x79
  4029b5:	0c 07                	or     al,0x7
  4029b7:	08 24 00             	or     BYTE PTR [rax+rax*1],ah
  4029ba:	00 00                	add    BYTE PTR [rax],al
  4029bc:	04 05                	add    al,0x5
  4029be:	00 00                	add    BYTE PTR [rax],al
  4029c0:	18 ee                	sbb    dh,ch
  4029c2:	ff                   	(bad)  
  4029c3:	ff c9                	dec    ecx
  4029c5:	00 00                	add    BYTE PTR [rax],al
  4029c7:	00 00                	add    BYTE PTR [rax],al
  4029c9:	41 0e                	rex.B (bad) 
  4029cb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  4029d1:	45 83 03 02          	rex.RB add DWORD PTR [r11],0x2
  4029d5:	bf 0c 07 08 00       	mov    edi,0x8070c
  4029da:	00 00                	add    BYTE PTR [rax],al
  4029dc:	00 00                	add    BYTE PTR [rax],al
  4029de:	00 00                	add    BYTE PTR [rax],al
  4029e0:	1c 00                	sbb    al,0x0
  4029e2:	00 00                	add    BYTE PTR [rax],al
  4029e4:	2c 05                	sub    al,0x5
  4029e6:	00 00                	add    BYTE PTR [rax],al
  4029e8:	ba ee ff ff 33       	mov    edx,0x33ffffee
  4029ed:	00 00                	add    BYTE PTR [rax],al
  4029ef:	00 00                	add    BYTE PTR [rax],al
  4029f1:	41 0e                	rex.B (bad) 
  4029f3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  4029f9:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  4029fa:	0c 07                	or     al,0x7
  4029fc:	08 00                	or     BYTE PTR [rax],al
  4029fe:	00 00                	add    BYTE PTR [rax],al
  402a00:	24 00                	and    al,0x0
  402a02:	00 00                	add    BYTE PTR [rax],al
  402a04:	4c 05 00 00 cd ee    	rex.WR add rax,0xffffffffeecd0000
  402a0a:	ff                   	(bad)  
  402a0b:	ff 54 00 00          	call   QWORD PTR [rax+rax*1+0x0]
  402a0f:	00 00                	add    BYTE PTR [rax],al
  402a11:	41 0e                	rex.B (bad) 
  402a13:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  402a19:	45 83 03 02          	rex.RB add DWORD PTR [r11],0x2
  402a1d:	4a 0c 07             	rex.WX or al,0x7
  402a20:	08 00                	or     BYTE PTR [rax],al
  402a22:	00 00                	add    BYTE PTR [rax],al
  402a24:	00 00                	add    BYTE PTR [rax],al
  402a26:	00 00                	add    BYTE PTR [rax],al
  402a28:	1c 00                	sbb    al,0x0
  402a2a:	00 00                	add    BYTE PTR [rax],al
  402a2c:	74 05                	je     402a33 <__GNU_EH_FRAME_HDR+0x873>
  402a2e:	00 00                	add    BYTE PTR [rax],al
  402a30:	f9                   	stc    
  402a31:	ee                   	out    dx,al
  402a32:	ff                   	(bad)  
  402a33:	ff 26                	jmp    QWORD PTR [rsi]
  402a35:	00 00                	add    BYTE PTR [rax],al
  402a37:	00 00                	add    BYTE PTR [rax],al
  402a39:	41 0e                	rex.B (bad) 
  402a3b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  402a41:	61                   	(bad)  
  402a42:	0c 07                	or     al,0x7
  402a44:	08 00                	or     BYTE PTR [rax],al
  402a46:	00 00                	add    BYTE PTR [rax],al
  402a48:	1c 00                	sbb    al,0x0
  402a4a:	00 00                	add    BYTE PTR [rax],al
  402a4c:	94                   	xchg   esp,eax
  402a4d:	05 00 00 ff ee       	add    eax,0xeeff0000
  402a52:	ff                   	(bad)  
  402a53:	ff 29                	jmp    FWORD PTR [rcx]
  402a55:	00 00                	add    BYTE PTR [rax],al
  402a57:	00 00                	add    BYTE PTR [rax],al
  402a59:	41 0e                	rex.B (bad) 
  402a5b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  402a61:	64 0c 07             	fs or  al,0x7
  402a64:	08 00                	or     BYTE PTR [rax],al
  402a66:	00 00                	add    BYTE PTR [rax],al
  402a68:	1c 00                	sbb    al,0x0
  402a6a:	00 00                	add    BYTE PTR [rax],al
  402a6c:	b4 05                	mov    ah,0x5
  402a6e:	00 00                	add    BYTE PTR [rax],al
  402a70:	08 ef                	or     bh,ch
  402a72:	ff                   	(bad)  
  402a73:	ff 26                	jmp    QWORD PTR [rsi]
  402a75:	00 00                	add    BYTE PTR [rax],al
  402a77:	00 00                	add    BYTE PTR [rax],al
  402a79:	41 0e                	rex.B (bad) 
  402a7b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  402a81:	61                   	(bad)  
  402a82:	0c 07                	or     al,0x7
  402a84:	08 00                	or     BYTE PTR [rax],al
  402a86:	00 00                	add    BYTE PTR [rax],al
  402a88:	1c 00                	sbb    al,0x0
  402a8a:	00 00                	add    BYTE PTR [rax],al
  402a8c:	d4                   	(bad)  
  402a8d:	05 00 00 0e ef       	add    eax,0xef0e0000
  402a92:	ff                   	(bad)  
  402a93:	ff 49 00             	dec    DWORD PTR [rcx+0x0]
  402a96:	00 00                	add    BYTE PTR [rax],al
  402a98:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
  402a9b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  402aa1:	02 44 0c 07          	add    al,BYTE PTR [rsp+rcx*1+0x7]
  402aa5:	08 00                	or     BYTE PTR [rax],al
  402aa7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  402aaa:	00 00                	add    BYTE PTR [rax],al
  402aac:	f4                   	hlt    
  402aad:	05 00 00 38 ef       	add    eax,0xef380000
  402ab2:	ff                   	(bad)  
  402ab3:	ff 59 00             	call   FWORD PTR [rcx+0x0]
  402ab6:	00 00                	add    BYTE PTR [rax],al
  402ab8:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
  402abb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  402ac1:	02 54 0c 07          	add    dl,BYTE PTR [rsp+rcx*1+0x7]
  402ac5:	08 00                	or     BYTE PTR [rax],al
  402ac7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  402aca:	00 00                	add    BYTE PTR [rax],al
  402acc:	14 06                	adc    al,0x6
  402ace:	00 00                	add    BYTE PTR [rax],al
  402ad0:	72 ef                	jb     402ac1 <__GNU_EH_FRAME_HDR+0x901>
  402ad2:	ff                   	(bad)  
  402ad3:	ff 1d 00 00 00 00    	call   FWORD PTR [rip+0x0]        # 402ad9 <__GNU_EH_FRAME_HDR+0x919>
  402ad9:	41 0e                	rex.B (bad) 
  402adb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  402ae1:	58                   	pop    rax
  402ae2:	0c 07                	or     al,0x7
  402ae4:	08 00                	or     BYTE PTR [rax],al
  402ae6:	00 00                	add    BYTE PTR [rax],al
  402ae8:	1c 00                	sbb    al,0x0
  402aea:	00 00                	add    BYTE PTR [rax],al
  402aec:	34 06                	xor    al,0x6
  402aee:	00 00                	add    BYTE PTR [rax],al
  402af0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  402af1:	ef                   	out    dx,eax
  402af2:	ff                   	(bad)  
  402af3:	ff 31                	push   QWORD PTR [rcx]
  402af5:	00 00                	add    BYTE PTR [rax],al
  402af7:	00 00                	add    BYTE PTR [rax],al
  402af9:	41 0e                	rex.B (bad) 
  402afb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  402b01:	6c                   	ins    BYTE PTR es:[rdi],dx
  402b02:	0c 07                	or     al,0x7
  402b04:	08 00                	or     BYTE PTR [rax],al
  402b06:	00 00                	add    BYTE PTR [rax],al
  402b08:	1c 00                	sbb    al,0x0
  402b0a:	00 00                	add    BYTE PTR [rax],al
  402b0c:	54                   	push   rsp
  402b0d:	06                   	(bad)  
  402b0e:	00 00                	add    BYTE PTR [rax],al
  402b10:	80 ef ff             	sub    bh,0xff
  402b13:	ff 29                	jmp    FWORD PTR [rcx]
  402b15:	00 00                	add    BYTE PTR [rax],al
  402b17:	00 00                	add    BYTE PTR [rax],al
  402b19:	41 0e                	rex.B (bad) 
  402b1b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  402b21:	64 0c 07             	fs or  al,0x7
  402b24:	08 00                	or     BYTE PTR [rax],al
  402b26:	00 00                	add    BYTE PTR [rax],al
  402b28:	1c 00                	sbb    al,0x0
  402b2a:	00 00                	add    BYTE PTR [rax],al
  402b2c:	74 06                	je     402b34 <__GNU_EH_FRAME_HDR+0x974>
  402b2e:	00 00                	add    BYTE PTR [rax],al
  402b30:	89 ef                	mov    edi,ebp
  402b32:	ff                   	(bad)  
  402b33:	ff 2e                	jmp    FWORD PTR [rsi]
  402b35:	00 00                	add    BYTE PTR [rax],al
  402b37:	00 00                	add    BYTE PTR [rax],al
  402b39:	41 0e                	rex.B (bad) 
  402b3b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  402b41:	69 0c 07 08 00 00 00 	imul   ecx,DWORD PTR [rdi+rax*1],0x8
  402b48:	1c 00                	sbb    al,0x0
  402b4a:	00 00                	add    BYTE PTR [rax],al
  402b4c:	94                   	xchg   esp,eax
  402b4d:	06                   	(bad)  
  402b4e:	00 00                	add    BYTE PTR [rax],al
  402b50:	97                   	xchg   edi,eax
  402b51:	ef                   	out    dx,eax
  402b52:	ff                   	(bad)  
  402b53:	ff 0f                	dec    DWORD PTR [rdi]
  402b55:	00 00                	add    BYTE PTR [rax],al
  402b57:	00 00                	add    BYTE PTR [rax],al
  402b59:	41 0e                	rex.B (bad) 
  402b5b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  402b61:	4a 0c 07             	rex.WX or al,0x7
  402b64:	08 00                	or     BYTE PTR [rax],al
  402b66:	00 00                	add    BYTE PTR [rax],al
  402b68:	1c 00                	sbb    al,0x0
  402b6a:	00 00                	add    BYTE PTR [rax],al
  402b6c:	b4 06                	mov    ah,0x6
  402b6e:	00 00                	add    BYTE PTR [rax],al
  402b70:	86 ef                	xchg   bh,ch
  402b72:	ff                   	(bad)  
  402b73:	ff 22                	jmp    QWORD PTR [rdx]
  402b75:	00 00                	add    BYTE PTR [rax],al
  402b77:	00 00                	add    BYTE PTR [rax],al
  402b79:	41 0e                	rex.B (bad) 
  402b7b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  402b81:	5d                   	pop    rbp
  402b82:	0c 07                	or     al,0x7
  402b84:	08 00                	or     BYTE PTR [rax],al
  402b86:	00 00                	add    BYTE PTR [rax],al
  402b88:	1c 00                	sbb    al,0x0
  402b8a:	00 00                	add    BYTE PTR [rax],al
  402b8c:	d4                   	(bad)  
  402b8d:	06                   	(bad)  
  402b8e:	00 00                	add    BYTE PTR [rax],al
  402b90:	88 ef                	mov    bh,ch
  402b92:	ff                   	(bad)  
  402b93:	ff 2b                	jmp    FWORD PTR [rbx]
  402b95:	00 00                	add    BYTE PTR [rax],al
  402b97:	00 00                	add    BYTE PTR [rax],al
  402b99:	41 0e                	rex.B (bad) 
  402b9b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  402ba1:	66 0c 07             	data16 or al,0x7
  402ba4:	08 00                	or     BYTE PTR [rax],al
  402ba6:	00 00                	add    BYTE PTR [rax],al
  402ba8:	1c 00                	sbb    al,0x0
  402baa:	00 00                	add    BYTE PTR [rax],al
  402bac:	f4                   	hlt    
  402bad:	06                   	(bad)  
  402bae:	00 00                	add    BYTE PTR [rax],al
  402bb0:	93                   	xchg   ebx,eax
  402bb1:	ef                   	out    dx,eax
  402bb2:	ff                   	(bad)  
  402bb3:	ff 2a                	jmp    FWORD PTR [rdx]
  402bb5:	00 00                	add    BYTE PTR [rax],al
  402bb7:	00 00                	add    BYTE PTR [rax],al
  402bb9:	41 0e                	rex.B (bad) 
  402bbb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  402bc1:	65 0c 07             	gs or  al,0x7
  402bc4:	08 00                	or     BYTE PTR [rax],al
  402bc6:	00 00                	add    BYTE PTR [rax],al
  402bc8:	1c 00                	sbb    al,0x0
  402bca:	00 00                	add    BYTE PTR [rax],al
  402bcc:	14 07                	adc    al,0x7
  402bce:	00 00                	add    BYTE PTR [rax],al
  402bd0:	9d                   	popf   
  402bd1:	ef                   	out    dx,eax
  402bd2:	ff                   	(bad)  
  402bd3:	ff 25 00 00 00 00    	jmp    QWORD PTR [rip+0x0]        # 402bd9 <__GNU_EH_FRAME_HDR+0xa19>
  402bd9:	41 0e                	rex.B (bad) 
  402bdb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  402be1:	60                   	(bad)  
  402be2:	0c 07                	or     al,0x7
  402be4:	08 00                	or     BYTE PTR [rax],al
  402be6:	00 00                	add    BYTE PTR [rax],al
  402be8:	1c 00                	sbb    al,0x0
  402bea:	00 00                	add    BYTE PTR [rax],al
  402bec:	34 07                	xor    al,0x7
  402bee:	00 00                	add    BYTE PTR [rax],al
  402bf0:	a2 ef ff ff 31 00 00 	movabs ds:0x31ffffef,al
  402bf7:	00 00 
  402bf9:	41 0e                	rex.B (bad) 
  402bfb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  402c01:	6c                   	ins    BYTE PTR es:[rdi],dx
  402c02:	0c 07                	or     al,0x7
  402c04:	08 00                	or     BYTE PTR [rax],al
  402c06:	00 00                	add    BYTE PTR [rax],al
  402c08:	1c 00                	sbb    al,0x0
  402c0a:	00 00                	add    BYTE PTR [rax],al
  402c0c:	54                   	push   rsp
  402c0d:	07                   	(bad)  
  402c0e:	00 00                	add    BYTE PTR [rax],al
  402c10:	b4 ef                	mov    ah,0xef
  402c12:	ff                   	(bad)  
  402c13:	ff 0f                	dec    DWORD PTR [rdi]
  402c15:	00 00                	add    BYTE PTR [rax],al
  402c17:	00 00                	add    BYTE PTR [rax],al
  402c19:	41 0e                	rex.B (bad) 
  402c1b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  402c21:	4a 0c 07             	rex.WX or al,0x7
  402c24:	08 00                	or     BYTE PTR [rax],al
  402c26:	00 00                	add    BYTE PTR [rax],al
  402c28:	1c 00                	sbb    al,0x0
  402c2a:	00 00                	add    BYTE PTR [rax],al
  402c2c:	74 07                	je     402c35 <__GNU_EH_FRAME_HDR+0xa75>
  402c2e:	00 00                	add    BYTE PTR [rax],al
  402c30:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  402c31:	ef                   	out    dx,eax
  402c32:	ff                   	(bad)  
  402c33:	ff 0f                	dec    DWORD PTR [rdi]
  402c35:	00 00                	add    BYTE PTR [rax],al
  402c37:	00 00                	add    BYTE PTR [rax],al
  402c39:	41 0e                	rex.B (bad) 
  402c3b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  402c41:	4a 0c 07             	rex.WX or al,0x7
  402c44:	08 00                	or     BYTE PTR [rax],al
  402c46:	00 00                	add    BYTE PTR [rax],al
  402c48:	1c 00                	sbb    al,0x0
  402c4a:	00 00                	add    BYTE PTR [rax],al
  402c4c:	94                   	xchg   esp,eax
  402c4d:	07                   	(bad)  
  402c4e:	00 00                	add    BYTE PTR [rax],al
  402c50:	93                   	xchg   ebx,eax
  402c51:	ef                   	out    dx,eax
  402c52:	ff                   	(bad)  
  402c53:	ff 2d 00 00 00 00    	jmp    FWORD PTR [rip+0x0]        # 402c59 <__GNU_EH_FRAME_HDR+0xa99>
  402c59:	41 0e                	rex.B (bad) 
  402c5b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  402c61:	68 0c 07 08 00       	push   0x8070c
  402c66:	00 00                	add    BYTE PTR [rax],al
  402c68:	1c 00                	sbb    al,0x0
  402c6a:	00 00                	add    BYTE PTR [rax],al
  402c6c:	b4 07                	mov    ah,0x7
  402c6e:	00 00                	add    BYTE PTR [rax],al
  402c70:	a0 ef ff ff 29 00 00 	movabs al,ds:0x29ffffef
  402c77:	00 00 
  402c79:	41 0e                	rex.B (bad) 
  402c7b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  402c81:	64 0c 07             	fs or  al,0x7
  402c84:	08 00                	or     BYTE PTR [rax],al
  402c86:	00 00                	add    BYTE PTR [rax],al
  402c88:	1c 00                	sbb    al,0x0
  402c8a:	00 00                	add    BYTE PTR [rax],al
  402c8c:	d4                   	(bad)  
  402c8d:	07                   	(bad)  
  402c8e:	00 00                	add    BYTE PTR [rax],al
  402c90:	aa                   	stos   BYTE PTR es:[rdi],al
  402c91:	ef                   	out    dx,eax
  402c92:	ff                   	(bad)  
  402c93:	ff 23                	jmp    QWORD PTR [rbx]
  402c95:	00 00                	add    BYTE PTR [rax],al
  402c97:	00 00                	add    BYTE PTR [rax],al
  402c99:	41 0e                	rex.B (bad) 
  402c9b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  402ca1:	5e                   	pop    rsi
  402ca2:	0c 07                	or     al,0x7
  402ca4:	08 00                	or     BYTE PTR [rax],al
  402ca6:	00 00                	add    BYTE PTR [rax],al
  402ca8:	1c 00                	sbb    al,0x0
  402caa:	00 00                	add    BYTE PTR [rax],al
  402cac:	f4                   	hlt    
  402cad:	07                   	(bad)  
  402cae:	00 00                	add    BYTE PTR [rax],al
  402cb0:	ad                   	lods   eax,DWORD PTR ds:[rsi]
  402cb1:	ef                   	out    dx,eax
  402cb2:	ff                   	(bad)  
  402cb3:	ff 1a                	call   FWORD PTR [rdx]
  402cb5:	00 00                	add    BYTE PTR [rax],al
  402cb7:	00 00                	add    BYTE PTR [rax],al
  402cb9:	41 0e                	rex.B (bad) 
  402cbb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  402cc1:	55                   	push   rbp
  402cc2:	0c 07                	or     al,0x7
  402cc4:	08 00                	or     BYTE PTR [rax],al
  402cc6:	00 00                	add    BYTE PTR [rax],al
  402cc8:	1c 00                	sbb    al,0x0
  402cca:	00 00                	add    BYTE PTR [rax],al
  402ccc:	14 08                	adc    al,0x8
  402cce:	00 00                	add    BYTE PTR [rax],al
  402cd0:	a8 ef                	test   al,0xef
  402cd2:	ff                   	(bad)  
  402cd3:	ff 42 00             	inc    DWORD PTR [rdx+0x0]
  402cd6:	00 00                	add    BYTE PTR [rax],al
  402cd8:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
  402cdb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  402ce1:	7d 0c                	jge    402cef <__GNU_EH_FRAME_HDR+0xb2f>
  402ce3:	07                   	(bad)  
  402ce4:	08 00                	or     BYTE PTR [rax],al
  402ce6:	00 00                	add    BYTE PTR [rax],al
  402ce8:	1c 00                	sbb    al,0x0
  402cea:	00 00                	add    BYTE PTR [rax],al
  402cec:	34 08                	xor    al,0x8
  402cee:	00 00                	add    BYTE PTR [rax],al
  402cf0:	ca ef ff             	retf   0xffef
  402cf3:	ff 1a                	call   FWORD PTR [rdx]
  402cf5:	00 00                	add    BYTE PTR [rax],al
  402cf7:	00 00                	add    BYTE PTR [rax],al
  402cf9:	41 0e                	rex.B (bad) 
  402cfb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  402d01:	55                   	push   rbp
  402d02:	0c 07                	or     al,0x7
  402d04:	08 00                	or     BYTE PTR [rax],al
  402d06:	00 00                	add    BYTE PTR [rax],al
  402d08:	1c 00                	sbb    al,0x0
  402d0a:	00 00                	add    BYTE PTR [rax],al
  402d0c:	54                   	push   rsp
  402d0d:	08 00                	or     BYTE PTR [rax],al
  402d0f:	00 c4                	add    ah,al
  402d11:	ef                   	out    dx,eax
  402d12:	ff                   	(bad)  
  402d13:	ff 31                	push   QWORD PTR [rcx]
  402d15:	00 00                	add    BYTE PTR [rax],al
  402d17:	00 00                	add    BYTE PTR [rax],al
  402d19:	41 0e                	rex.B (bad) 
  402d1b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  402d21:	6c                   	ins    BYTE PTR es:[rdi],dx
  402d22:	0c 07                	or     al,0x7
  402d24:	08 00                	or     BYTE PTR [rax],al
  402d26:	00 00                	add    BYTE PTR [rax],al
  402d28:	24 00                	and    al,0x0
  402d2a:	00 00                	add    BYTE PTR [rax],al
  402d2c:	74 08                	je     402d36 <__GNU_EH_FRAME_HDR+0xb76>
  402d2e:	00 00                	add    BYTE PTR [rax],al
  402d30:	d5                   	(bad)  
  402d31:	ef                   	out    dx,eax
  402d32:	ff                   	(bad)  
  402d33:	ff 4c 00 00          	dec    DWORD PTR [rax+rax*1+0x0]
  402d37:	00 00                	add    BYTE PTR [rax],al
  402d39:	41 0e                	rex.B (bad) 
  402d3b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  402d41:	45 83 03 02          	rex.RB add DWORD PTR [r11],0x2
  402d45:	42 0c 07             	rex.X or al,0x7
  402d48:	08 00                	or     BYTE PTR [rax],al
  402d4a:	00 00                	add    BYTE PTR [rax],al
  402d4c:	00 00                	add    BYTE PTR [rax],al
  402d4e:	00 00                	add    BYTE PTR [rax],al
  402d50:	1c 00                	sbb    al,0x0
  402d52:	00 00                	add    BYTE PTR [rax],al
  402d54:	9c                   	pushf  
  402d55:	08 00                	or     BYTE PTR [rax],al
  402d57:	00 f9                	add    cl,bh
  402d59:	ef                   	out    dx,eax
  402d5a:	ff                   	(bad)  
  402d5b:	ff 30                	push   QWORD PTR [rax]
  402d5d:	00 00                	add    BYTE PTR [rax],al
  402d5f:	00 00                	add    BYTE PTR [rax],al
  402d61:	41 0e                	rex.B (bad) 
  402d63:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  402d69:	6b 0c 07 08          	imul   ecx,DWORD PTR [rdi+rax*1],0x8
  402d6d:	00 00                	add    BYTE PTR [rax],al
  402d6f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  402d72:	00 00                	add    BYTE PTR [rax],al
  402d74:	bc 08 00 00 0a       	mov    esp,0xa000008
  402d79:	f0 ff                	lock (bad) 
  402d7b:	ff 14 00             	call   QWORD PTR [rax+rax*1]
  402d7e:	00 00                	add    BYTE PTR [rax],al
  402d80:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
  402d83:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  402d89:	4f 0c 07             	rex.WRXB or al,0x7
  402d8c:	08 00                	or     BYTE PTR [rax],al
  402d8e:	00 00                	add    BYTE PTR [rax],al
  402d90:	1c 00                	sbb    al,0x0
  402d92:	00 00                	add    BYTE PTR [rax],al
  402d94:	dc 08                	fmul   QWORD PTR [rax]
  402d96:	00 00                	add    BYTE PTR [rax],al
  402d98:	fe                   	(bad)  
  402d99:	ef                   	out    dx,eax
  402d9a:	ff                   	(bad)  
  402d9b:	ff 2d 00 00 00 00    	jmp    FWORD PTR [rip+0x0]        # 402da1 <__GNU_EH_FRAME_HDR+0xbe1>
  402da1:	41 0e                	rex.B (bad) 
  402da3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  402da9:	68 0c 07 08 00       	push   0x8070c
  402dae:	00 00                	add    BYTE PTR [rax],al
  402db0:	1c 00                	sbb    al,0x0
  402db2:	00 00                	add    BYTE PTR [rax],al
  402db4:	fc                   	cld    
  402db5:	08 00                	or     BYTE PTR [rax],al
  402db7:	00 0b                	add    BYTE PTR [rbx],cl
  402db9:	f0 ff                	lock (bad) 
  402dbb:	ff 0e                	dec    DWORD PTR [rsi]
  402dbd:	00 00                	add    BYTE PTR [rax],al
  402dbf:	00 00                	add    BYTE PTR [rax],al
  402dc1:	41 0e                	rex.B (bad) 
  402dc3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  402dc9:	49 0c 07             	rex.WB or al,0x7
  402dcc:	08 00                	or     BYTE PTR [rax],al
  402dce:	00 00                	add    BYTE PTR [rax],al
  402dd0:	24 00                	and    al,0x0
  402dd2:	00 00                	add    BYTE PTR [rax],al
  402dd4:	1c 09                	sbb    al,0x9
  402dd6:	00 00                	add    BYTE PTR [rax],al
  402dd8:	f9                   	stc    
  402dd9:	ef                   	out    dx,eax
  402dda:	ff                   	(bad)  
  402ddb:	ff 58 00             	call   FWORD PTR [rax+0x0]
  402dde:	00 00                	add    BYTE PTR [rax],al
  402de0:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
  402de3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  402de9:	47 8c 03             	rex.RXB mov WORD PTR [r11],es
  402dec:	83 04 02 4c          	add    DWORD PTR [rdx+rax*1],0x4c
  402df0:	0c 07                	or     al,0x7
  402df2:	08 00                	or     BYTE PTR [rax],al
  402df4:	00 00                	add    BYTE PTR [rax],al
  402df6:	00 00                	add    BYTE PTR [rax],al
  402df8:	1c 00                	sbb    al,0x0
  402dfa:	00 00                	add    BYTE PTR [rax],al
  402dfc:	44 09 00             	or     DWORD PTR [rax],r8d
  402dff:	00 29                	add    BYTE PTR [rcx],ch
  402e01:	f0 ff                	lock (bad) 
  402e03:	ff                   	(bad)  
  402e04:	38 00                	cmp    BYTE PTR [rax],al
  402e06:	00 00                	add    BYTE PTR [rax],al
  402e08:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
  402e0b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  402e11:	73 0c                	jae    402e1f <__GNU_EH_FRAME_HDR+0xc5f>
  402e13:	07                   	(bad)  
  402e14:	08 00                	or     BYTE PTR [rax],al
  402e16:	00 00                	add    BYTE PTR [rax],al
  402e18:	24 00                	and    al,0x0
  402e1a:	00 00                	add    BYTE PTR [rax],al
  402e1c:	64 09 00             	or     DWORD PTR fs:[rax],eax
  402e1f:	00 41 f0             	add    BYTE PTR [rcx-0x10],al
  402e22:	ff                   	(bad)  
  402e23:	ff 4c 00 00          	dec    DWORD PTR [rax+rax*1+0x0]
  402e27:	00 00                	add    BYTE PTR [rax],al
  402e29:	41 0e                	rex.B (bad) 
  402e2b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  402e31:	45 83 03 02          	rex.RB add DWORD PTR [r11],0x2
  402e35:	42 0c 07             	rex.X or al,0x7
  402e38:	08 00                	or     BYTE PTR [rax],al
  402e3a:	00 00                	add    BYTE PTR [rax],al
  402e3c:	00 00                	add    BYTE PTR [rax],al
  402e3e:	00 00                	add    BYTE PTR [rax],al
  402e40:	1c 00                	sbb    al,0x0
  402e42:	00 00                	add    BYTE PTR [rax],al
  402e44:	8c 09                	mov    WORD PTR [rcx],cs
  402e46:	00 00                	add    BYTE PTR [rax],al
  402e48:	65 f0 ff             	gs lock (bad) 
  402e4b:	ff 1d 00 00 00 00    	call   FWORD PTR [rip+0x0]        # 402e51 <__GNU_EH_FRAME_HDR+0xc91>
  402e51:	41 0e                	rex.B (bad) 
  402e53:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  402e59:	58                   	pop    rax
  402e5a:	0c 07                	or     al,0x7
  402e5c:	08 00                	or     BYTE PTR [rax],al
  402e5e:	00 00                	add    BYTE PTR [rax],al
  402e60:	1c 00                	sbb    al,0x0
  402e62:	00 00                	add    BYTE PTR [rax],al
  402e64:	ac                   	lods   al,BYTE PTR ds:[rsi]
  402e65:	09 00                	or     DWORD PTR [rax],eax
  402e67:	00 62 f0             	add    BYTE PTR [rdx-0x10],ah
  402e6a:	ff                   	(bad)  
  402e6b:	ff 0e                	dec    DWORD PTR [rsi]
  402e6d:	00 00                	add    BYTE PTR [rax],al
  402e6f:	00 00                	add    BYTE PTR [rax],al
  402e71:	41 0e                	rex.B (bad) 
  402e73:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  402e79:	49 0c 07             	rex.WB or al,0x7
  402e7c:	08 00                	or     BYTE PTR [rax],al
  402e7e:	00 00                	add    BYTE PTR [rax],al
  402e80:	1c 00                	sbb    al,0x0
  402e82:	00 00                	add    BYTE PTR [rax],al
  402e84:	cc                   	int3   
  402e85:	09 00                	or     DWORD PTR [rax],eax
  402e87:	00 50 f0             	add    BYTE PTR [rax-0x10],dl
  402e8a:	ff                   	(bad)  
  402e8b:	ff 31                	push   QWORD PTR [rcx]
  402e8d:	00 00                	add    BYTE PTR [rax],al
  402e8f:	00 00                	add    BYTE PTR [rax],al
  402e91:	41 0e                	rex.B (bad) 
  402e93:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  402e99:	6c                   	ins    BYTE PTR es:[rdi],dx
  402e9a:	0c 07                	or     al,0x7
  402e9c:	08 00                	or     BYTE PTR [rax],al
  402e9e:	00 00                	add    BYTE PTR [rax],al
  402ea0:	1c 00                	sbb    al,0x0
  402ea2:	00 00                	add    BYTE PTR [rax],al
  402ea4:	ec                   	in     al,dx
  402ea5:	09 00                	or     DWORD PTR [rax],eax
  402ea7:	00 61 f0             	add    BYTE PTR [rcx-0x10],ah
  402eaa:	ff                   	(bad)  
  402eab:	ff 43 00             	inc    DWORD PTR [rbx+0x0]
  402eae:	00 00                	add    BYTE PTR [rax],al
  402eb0:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
  402eb3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  402eb9:	7e 0c                	jle    402ec7 <__GNU_EH_FRAME_HDR+0xd07>
  402ebb:	07                   	(bad)  
  402ebc:	08 00                	or     BYTE PTR [rax],al
  402ebe:	00 00                	add    BYTE PTR [rax],al
  402ec0:	1c 00                	sbb    al,0x0
  402ec2:	00 00                	add    BYTE PTR [rax],al
  402ec4:	0c 0a                	or     al,0xa
  402ec6:	00 00                	add    BYTE PTR [rax],al
  402ec8:	84 f0                	test   al,dh
  402eca:	ff                   	(bad)  
  402ecb:	ff 22                	jmp    QWORD PTR [rdx]
  402ecd:	00 00                	add    BYTE PTR [rax],al
  402ecf:	00 00                	add    BYTE PTR [rax],al
  402ed1:	41 0e                	rex.B (bad) 
  402ed3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  402ed9:	5d                   	pop    rbp
  402eda:	0c 07                	or     al,0x7
  402edc:	08 00                	or     BYTE PTR [rax],al
  402ede:	00 00                	add    BYTE PTR [rax],al
  402ee0:	24 00                	and    al,0x0
  402ee2:	00 00                	add    BYTE PTR [rax],al
  402ee4:	2c 0a                	sub    al,0xa
  402ee6:	00 00                	add    BYTE PTR [rax],al
  402ee8:	86 f0                	xchg   al,dh
  402eea:	ff                   	(bad)  
  402eeb:	ff 58 00             	call   FWORD PTR [rax+0x0]
  402eee:	00 00                	add    BYTE PTR [rax],al
  402ef0:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
  402ef3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  402ef9:	47 8c 03             	rex.RXB mov WORD PTR [r11],es
  402efc:	83 04 02 4c          	add    DWORD PTR [rdx+rax*1],0x4c
  402f00:	0c 07                	or     al,0x7
  402f02:	08 00                	or     BYTE PTR [rax],al
  402f04:	00 00                	add    BYTE PTR [rax],al
  402f06:	00 00                	add    BYTE PTR [rax],al
  402f08:	1c 00                	sbb    al,0x0
  402f0a:	00 00                	add    BYTE PTR [rax],al
  402f0c:	54                   	push   rsp
  402f0d:	0a 00                	or     al,BYTE PTR [rax]
  402f0f:	00 b6 f0 ff ff 0e    	add    BYTE PTR [rsi+0xefffff0],dh
  402f15:	00 00                	add    BYTE PTR [rax],al
  402f17:	00 00                	add    BYTE PTR [rax],al
  402f19:	41 0e                	rex.B (bad) 
  402f1b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  402f21:	49 0c 07             	rex.WB or al,0x7
  402f24:	08 00                	or     BYTE PTR [rax],al
  402f26:	00 00                	add    BYTE PTR [rax],al
  402f28:	1c 00                	sbb    al,0x0
  402f2a:	00 00                	add    BYTE PTR [rax],al
  402f2c:	74 0a                	je     402f38 <__GNU_EH_FRAME_HDR+0xd78>
  402f2e:	00 00                	add    BYTE PTR [rax],al
  402f30:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  402f31:	f0 ff                	lock (bad) 
  402f33:	ff 65 00             	jmp    QWORD PTR [rbp+0x0]
  402f36:	00 00                	add    BYTE PTR [rax],al
  402f38:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
  402f3b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  402f41:	02 60 0c             	add    ah,BYTE PTR [rax+0xc]
  402f44:	07                   	(bad)  
  402f45:	08 00                	or     BYTE PTR [rax],al
  402f47:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  402f4a:	00 00                	add    BYTE PTR [rax],al
  402f4c:	94                   	xchg   esp,eax
  402f4d:	0a 00                	or     al,BYTE PTR [rax]
  402f4f:	00 ea                	add    dl,ch
  402f51:	f0 ff                	lock (bad) 
  402f53:	ff 11                	call   QWORD PTR [rcx]
  402f55:	00 00                	add    BYTE PTR [rax],al
  402f57:	00 00                	add    BYTE PTR [rax],al
  402f59:	41 0e                	rex.B (bad) 
  402f5b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  402f61:	4c 0c 07             	rex.WR or al,0x7
  402f64:	08 00                	or     BYTE PTR [rax],al
  402f66:	00 00                	add    BYTE PTR [rax],al
  402f68:	1c 00                	sbb    al,0x0
  402f6a:	00 00                	add    BYTE PTR [rax],al
  402f6c:	b4 0a                	mov    ah,0xa
  402f6e:	00 00                	add    BYTE PTR [rax],al
  402f70:	db f0                	fcomi  st,st(0)
  402f72:	ff                   	(bad)  
  402f73:	ff 0e                	dec    DWORD PTR [rsi]
  402f75:	00 00                	add    BYTE PTR [rax],al
  402f77:	00 00                	add    BYTE PTR [rax],al
  402f79:	41 0e                	rex.B (bad) 
  402f7b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  402f81:	49 0c 07             	rex.WB or al,0x7
  402f84:	08 00                	or     BYTE PTR [rax],al
  402f86:	00 00                	add    BYTE PTR [rax],al
  402f88:	1c 00                	sbb    al,0x0
  402f8a:	00 00                	add    BYTE PTR [rax],al
  402f8c:	d4                   	(bad)  
  402f8d:	0a 00                	or     al,BYTE PTR [rax]
  402f8f:	00 c9                	add    cl,cl
  402f91:	f0 ff                	lock (bad) 
  402f93:	ff 31                	push   QWORD PTR [rcx]
  402f95:	00 00                	add    BYTE PTR [rax],al
  402f97:	00 00                	add    BYTE PTR [rax],al
  402f99:	41 0e                	rex.B (bad) 
  402f9b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  402fa1:	6c                   	ins    BYTE PTR es:[rdi],dx
  402fa2:	0c 07                	or     al,0x7
  402fa4:	08 00                	or     BYTE PTR [rax],al
  402fa6:	00 00                	add    BYTE PTR [rax],al
  402fa8:	1c 00                	sbb    al,0x0
  402faa:	00 00                	add    BYTE PTR [rax],al
  402fac:	f4                   	hlt    
  402fad:	0a 00                	or     al,BYTE PTR [rax]
  402faf:	00 da                	add    dl,bl
  402fb1:	f0 ff                	lock (bad) 
  402fb3:	ff 65 00             	jmp    QWORD PTR [rbp+0x0]
  402fb6:	00 00                	add    BYTE PTR [rax],al
  402fb8:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
  402fbb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  402fc1:	02 60 0c             	add    ah,BYTE PTR [rax+0xc]
  402fc4:	07                   	(bad)  
  402fc5:	08 00                	or     BYTE PTR [rax],al
  402fc7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  402fca:	00 00                	add    BYTE PTR [rax],al
  402fcc:	14 0b                	adc    al,0xb
  402fce:	00 00                	add    BYTE PTR [rax],al
  402fd0:	b3 df                	mov    bl,0xdf
  402fd2:	ff                   	(bad)  
  402fd3:	ff                   	(bad)  
  402fd4:	3e 00 00             	add    BYTE PTR ds:[rax],al
  402fd7:	00 00                	add    BYTE PTR [rax],al
  402fd9:	41 0e                	rex.B (bad) 
  402fdb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  402fe1:	79 0c                	jns    402fef <__GNU_EH_FRAME_HDR+0xe2f>
  402fe3:	07                   	(bad)  
  402fe4:	08 00                	or     BYTE PTR [rax],al
  402fe6:	00 00                	add    BYTE PTR [rax],al
  402fe8:	1c 00                	sbb    al,0x0
  402fea:	00 00                	add    BYTE PTR [rax],al
  402fec:	34 0b                	xor    al,0xb
  402fee:	00 00                	add    BYTE PTR [rax],al
  402ff0:	d1 df                	rcr    edi,1
  402ff2:	ff                   	(bad)  
  402ff3:	ff 15 00 00 00 00    	call   QWORD PTR [rip+0x0]        # 402ff9 <__GNU_EH_FRAME_HDR+0xe39>
  402ff9:	41 0e                	rex.B (bad) 
  402ffb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  403001:	50                   	push   rax
  403002:	0c 07                	or     al,0x7
  403004:	08 00                	or     BYTE PTR [rax],al
  403006:	00 00                	add    BYTE PTR [rax],al
  403008:	44 00 00             	add    BYTE PTR [rax],r8b
  40300b:	00 54 0b 00          	add    BYTE PTR [rbx+rcx*1+0x0],dl
  40300f:	00 e0                	add    al,ah
  403011:	f0 ff                	lock (bad) 
  403013:	ff 65 00             	jmp    QWORD PTR [rbp+0x0]
  403016:	00 00                	add    BYTE PTR [rax],al
  403018:	00 42 0e             	add    BYTE PTR [rdx+0xe],al
  40301b:	10 8f 02 42 0e 18    	adc    BYTE PTR [rdi+0x180e4202],cl
  403021:	8e 03                	mov    es,WORD PTR [rbx]
  403023:	45 0e                	rex.RB (bad) 
  403025:	20 8d 04 42 0e 28    	and    BYTE PTR [rbp+0x280e4204],cl
  40302b:	8c 05 48 0e 30 86    	mov    WORD PTR [rip+0xffffffff86300e48],es        # ffffffff86703e79 <_end+0xffffffff860ffb81>
  403031:	06                   	(bad)  
  403032:	48 0e                	rex.W (bad) 
  403034:	38 83 07 4d 0e 40    	cmp    BYTE PTR [rbx+0x400e4d07],al
  40303a:	72 0e                	jb     40304a <__GNU_EH_FRAME_HDR+0xe8a>
  40303c:	38 41 0e             	cmp    BYTE PTR [rcx+0xe],al
  40303f:	30 41 0e             	xor    BYTE PTR [rcx+0xe],al
  403042:	28 42 0e             	sub    BYTE PTR [rdx+0xe],al
  403045:	20 42 0e             	and    BYTE PTR [rdx+0xe],al
  403048:	18 42 0e             	sbb    BYTE PTR [rdx+0xe],al
  40304b:	10 42 0e             	adc    BYTE PTR [rdx+0xe],al
  40304e:	08 00                	or     BYTE PTR [rax],al
  403050:	14 00                	adc    al,0x0
  403052:	00 00                	add    BYTE PTR [rax],al
  403054:	9c                   	pushf  
  403055:	0b 00                	or     eax,DWORD PTR [rax]
  403057:	00 08                	add    BYTE PTR [rax],cl
  403059:	f1                   	icebp  
  40305a:	ff                   	(bad)  
  40305b:	ff 02                	inc    DWORD PTR [rdx]
	...

0000000000403068 <__FRAME_END__>:
  403068:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .gcc_except_table:

000000000040306c <.gcc_except_table>:
  40306c:	ff                   	(bad)  
  40306d:	ff 01                	inc    DWORD PTR [rcx]
  40306f:	23 29                	and    ebp,DWORD PTR [rcx]
  403071:	b4 01                	mov    ah,0x1
  403073:	a8 03                	test   al,0x3
  403075:	00 e6                	add    dh,ah
  403077:	01 05 f5 02 00 9c    	add    DWORD PTR [rip+0xffffffff9c0002f5],eax        # ffffffff9c403372 <_end+0xffffffff9bdff07a>
  40307d:	02 05 a8 03 00 b2    	add    al,BYTE PTR [rip+0xffffffffb20003a8]        # ffffffffb240342b <_end+0xffffffffb1dff133>
  403083:	02 05 97 03 00 c0    	add    al,BYTE PTR [rip+0xffffffffc0000397]        # ffffffffc0403420 <_end+0xffffffffbfdff128>
  403089:	02 05 86 03 00 c0    	add    al,BYTE PTR [rip+0xffffffffc0000386]        # ffffffffc0403415 <_end+0xffffffffbfdff11d>
  40308f:	03 05 00 00 ff ff    	add    eax,DWORD PTR [rip+0xffffffffffff0000]        # 3f3095 <_init-0xd91b>
  403095:	01 10                	add    DWORD PTR [rax],edx
  403097:	3b 05 ae 01 00 a3    	cmp    eax,DWORD PTR [rip+0xffffffffa30001ae]        # ffffffffa340324b <_end+0xffffffffa2dfef53>
  40309d:	01 05 c8 01 00 c3    	add    DWORD PTR [rip+0xffffffffc30001c8],eax        # ffffffffc340326b <_end+0xffffffffc2dfef73>
  4030a3:	01 1f                	add    DWORD PTR [rdi],ebx
  4030a5:	00 00                	add    BYTE PTR [rax],al
  4030a7:	ff                   	(bad)  
  4030a8:	ff 01                	inc    DWORD PTR [rcx]
  4030aa:	00 ff                	add    bh,bh
  4030ac:	ff 01                	inc    DWORD PTR [rcx]
  4030ae:	00 ff                	add    bh,bh
  4030b0:	ff 01                	inc    DWORD PTR [rcx]
  4030b2:	14 2e                	adc    al,0x2e
  4030b4:	05 00 00 50 05       	add    eax,0x5500000
  4030b9:	b0 01                	mov    al,0x1
  4030bb:	00 9e 01 05 ca 01    	add    BYTE PTR [rsi+0x1ca0501],bl
  4030c1:	00 c5                	add    ch,al
  4030c3:	01 1f                	add    DWORD PTR [rdi],ebx
  4030c5:	00 00                	add    BYTE PTR [rax],al
  4030c7:	ff                   	(bad)  
  4030c8:	ff 01                	inc    DWORD PTR [rcx]
  4030ca:	0c 27                	or     al,0x27
  4030cc:	05 00 00 3a 05       	add    eax,0x53a0000
  4030d1:	41 00 56 05          	add    BYTE PTR [r14+0x5],dl
  4030d5:	00 00                	add    BYTE PTR [rax],al
  4030d7:	ff                   	(bad)  
  4030d8:	ff 01                	inc    DWORD PTR [rcx]
  4030da:	00 00                	add    BYTE PTR [rax],al
  4030dc:	ff 03                	inc    DWORD PTR [rbx]
  4030de:	25 01 1a 22 1c       	and    eax,0x1c221a01
  4030e3:	00 00                	add    BYTE PTR [rax],al
  4030e5:	b4 01                	mov    ah,0x1
  4030e7:	05 d7 02 01 e6       	add    eax,0xe60102d7
  4030ec:	01 3a                	add    DWORD PTR [rdx],edi
  4030ee:	00 00                	add    BYTE PTR [rax],al
  4030f0:	8b 03                	mov    eax,DWORD PTR [rbx]
  4030f2:	45 d0 03             	rex.RB rol BYTE PTR [r11],1
  4030f5:	00 de                	add    dh,bl
  4030f7:	03 05 00 00 01 00    	add    eax,DWORD PTR [rip+0x10000]        # 4130fd <__FRAME_END__+0x10095>
  4030fd:	00 00                	add    BYTE PTR [rax],al
  4030ff:	00 00                	add    BYTE PTR [rax],al
  403101:	00 00                	add    BYTE PTR [rax],al
  403103:	00 ff                	add    bh,bh
  403105:	ff 01                	inc    DWORD PTR [rcx]
  403107:	08 36                	or     BYTE PTR [rsi],dh
  403109:	05 3d 00 52 05       	add    eax,0x552003d
	...

Disassembly of section .init_array:

0000000000603dd8 <__frame_dummy_init_array_entry>:
  603dd8:	f0 0b 40 00          	lock or eax,DWORD PTR [rax+0x0]
  603ddc:	00 00                	add    BYTE PTR [rax],al
  603dde:	00 00                	add    BYTE PTR [rax],al
  603de0:	c1 0f 40             	ror    DWORD PTR [rdi],0x40
  603de3:	00 00                	add    BYTE PTR [rax],al
  603de5:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .fini_array:

0000000000603de8 <__do_global_dtors_aux_fini_array_entry>:
  603de8:	d0 0b                	ror    BYTE PTR [rbx],1
  603dea:	40 00 00             	add    BYTE PTR [rax],al
  603ded:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .jcr:

0000000000603df0 <__JCR_END__>:
	...

Disassembly of section .dynamic:

0000000000603df8 <_DYNAMIC>:
  603df8:	01 00                	add    DWORD PTR [rax],eax
  603dfa:	00 00                	add    BYTE PTR [rax],al
  603dfc:	00 00                	add    BYTE PTR [rax],al
  603dfe:	00 00                	add    BYTE PTR [rax],al
  603e00:	01 00                	add    DWORD PTR [rax],eax
  603e02:	00 00                	add    BYTE PTR [rax],al
  603e04:	00 00                	add    BYTE PTR [rax],al
  603e06:	00 00                	add    BYTE PTR [rax],al
  603e08:	01 00                	add    DWORD PTR [rax],eax
  603e0a:	00 00                	add    BYTE PTR [rax],al
  603e0c:	00 00                	add    BYTE PTR [rax],al
  603e0e:	00 00                	add    BYTE PTR [rax],al
  603e10:	84 01                	test   BYTE PTR [rcx],al
  603e12:	00 00                	add    BYTE PTR [rax],al
  603e14:	00 00                	add    BYTE PTR [rax],al
  603e16:	00 00                	add    BYTE PTR [rax],al
  603e18:	01 00                	add    DWORD PTR [rax],eax
  603e1a:	00 00                	add    BYTE PTR [rax],al
  603e1c:	00 00                	add    BYTE PTR [rax],al
  603e1e:	00 00                	add    BYTE PTR [rax],al
  603e20:	8e 01                	mov    es,WORD PTR [rcx]
  603e22:	00 00                	add    BYTE PTR [rax],al
  603e24:	00 00                	add    BYTE PTR [rax],al
  603e26:	00 00                	add    BYTE PTR [rax],al
  603e28:	01 00                	add    DWORD PTR [rax],eax
  603e2a:	00 00                	add    BYTE PTR [rax],al
  603e2c:	00 00                	add    BYTE PTR [rax],al
  603e2e:	00 00                	add    BYTE PTR [rax],al
  603e30:	ab                   	stos   DWORD PTR es:[rdi],eax
  603e31:	01 00                	add    DWORD PTR [rax],eax
  603e33:	00 00                	add    BYTE PTR [rax],al
  603e35:	00 00                	add    BYTE PTR [rax],al
  603e37:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
  603e3a:	00 00                	add    BYTE PTR [rax],al
  603e3c:	00 00                	add    BYTE PTR [rax],al
  603e3e:	00 00                	add    BYTE PTR [rax],al
  603e40:	b0 09                	mov    al,0x9
  603e42:	40 00 00             	add    BYTE PTR [rax],al
  603e45:	00 00                	add    BYTE PTR [rax],al
  603e47:	00 0d 00 00 00 00    	add    BYTE PTR [rip+0x0],cl        # 603e4d <_DYNAMIC+0x55>
  603e4d:	00 00                	add    BYTE PTR [rax],al
  603e4f:	00 64 21 40          	add    BYTE PTR [rcx+riz*1+0x40],ah
  603e53:	00 00                	add    BYTE PTR [rax],al
  603e55:	00 00                	add    BYTE PTR [rax],al
  603e57:	00 19                	add    BYTE PTR [rcx],bl
  603e59:	00 00                	add    BYTE PTR [rax],al
  603e5b:	00 00                	add    BYTE PTR [rax],al
  603e5d:	00 00                	add    BYTE PTR [rax],al
  603e5f:	00 d8                	add    al,bl
  603e61:	3d 60 00 00 00       	cmp    eax,0x60
  603e66:	00 00                	add    BYTE PTR [rax],al
  603e68:	1b 00                	sbb    eax,DWORD PTR [rax]
  603e6a:	00 00                	add    BYTE PTR [rax],al
  603e6c:	00 00                	add    BYTE PTR [rax],al
  603e6e:	00 00                	add    BYTE PTR [rax],al
  603e70:	10 00                	adc    BYTE PTR [rax],al
  603e72:	00 00                	add    BYTE PTR [rax],al
  603e74:	00 00                	add    BYTE PTR [rax],al
  603e76:	00 00                	add    BYTE PTR [rax],al
  603e78:	1a 00                	sbb    al,BYTE PTR [rax]
  603e7a:	00 00                	add    BYTE PTR [rax],al
  603e7c:	00 00                	add    BYTE PTR [rax],al
  603e7e:	00 00                	add    BYTE PTR [rax],al
  603e80:	e8 3d 60 00 00       	call   609ec2 <_end+0x5bca>
  603e85:	00 00                	add    BYTE PTR [rax],al
  603e87:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  603e8a:	00 00                	add    BYTE PTR [rax],al
  603e8c:	00 00                	add    BYTE PTR [rax],al
  603e8e:	00 00                	add    BYTE PTR [rax],al
  603e90:	08 00                	or     BYTE PTR [rax],al
  603e92:	00 00                	add    BYTE PTR [rax],al
  603e94:	00 00                	add    BYTE PTR [rax],al
  603e96:	00 00                	add    BYTE PTR [rax],al
  603e98:	f5                   	cmc    
  603e99:	fe                   	(bad)  
  603e9a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
  603e9d:	00 00                	add    BYTE PTR [rax],al
  603e9f:	00 98 02 40 00 00    	add    BYTE PTR [rax+0x4002],bl
  603ea5:	00 00                	add    BYTE PTR [rax],al
  603ea7:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 603ead <_DYNAMIC+0xb5>
  603ead:	00 00                	add    BYTE PTR [rax],al
  603eaf:	00 f8                	add    al,bh
  603eb1:	04 40                	add    al,0x40
  603eb3:	00 00                	add    BYTE PTR [rax],al
  603eb5:	00 00                	add    BYTE PTR [rax],al
  603eb7:	00 06                	add    BYTE PTR [rsi],al
  603eb9:	00 00                	add    BYTE PTR [rax],al
  603ebb:	00 00                	add    BYTE PTR [rax],al
  603ebd:	00 00                	add    BYTE PTR [rax],al
  603ebf:	00 d0                	add    al,dl
  603ec1:	02 40 00             	add    al,BYTE PTR [rax+0x0]
  603ec4:	00 00                	add    BYTE PTR [rax],al
  603ec6:	00 00                	add    BYTE PTR [rax],al
  603ec8:	0a 00                	or     al,BYTE PTR [rax]
  603eca:	00 00                	add    BYTE PTR [rax],al
  603ecc:	00 00                	add    BYTE PTR [rax],al
  603ece:	00 00                	add    BYTE PTR [rax],al
  603ed0:	07                   	(bad)  
  603ed1:	02 00                	add    al,BYTE PTR [rax]
  603ed3:	00 00                	add    BYTE PTR [rax],al
  603ed5:	00 00                	add    BYTE PTR [rax],al
  603ed7:	00 0b                	add    BYTE PTR [rbx],cl
  603ed9:	00 00                	add    BYTE PTR [rax],al
  603edb:	00 00                	add    BYTE PTR [rax],al
  603edd:	00 00                	add    BYTE PTR [rax],al
  603edf:	00 18                	add    BYTE PTR [rax],bl
  603ee1:	00 00                	add    BYTE PTR [rax],al
  603ee3:	00 00                	add    BYTE PTR [rax],al
  603ee5:	00 00                	add    BYTE PTR [rax],al
  603ee7:	00 15 00 00 00 00    	add    BYTE PTR [rip+0x0],dl        # 603eed <_DYNAMIC+0xf5>
	...
  603ef5:	00 00                	add    BYTE PTR [rax],al
  603ef7:	00 03                	add    BYTE PTR [rbx],al
	...
  603f01:	40 60                	rex (bad) 
  603f03:	00 00                	add    BYTE PTR [rax],al
  603f05:	00 00                	add    BYTE PTR [rax],al
  603f07:	00 02                	add    BYTE PTR [rdx],al
  603f09:	00 00                	add    BYTE PTR [rax],al
  603f0b:	00 00                	add    BYTE PTR [rax],al
  603f0d:	00 00                	add    BYTE PTR [rax],al
  603f0f:	00 c8                	add    al,cl
  603f11:	01 00                	add    DWORD PTR [rax],eax
  603f13:	00 00                	add    BYTE PTR [rax],al
  603f15:	00 00                	add    BYTE PTR [rax],al
  603f17:	00 14 00             	add    BYTE PTR [rax+rax*1],dl
  603f1a:	00 00                	add    BYTE PTR [rax],al
  603f1c:	00 00                	add    BYTE PTR [rax],al
  603f1e:	00 00                	add    BYTE PTR [rax],al
  603f20:	07                   	(bad)  
  603f21:	00 00                	add    BYTE PTR [rax],al
  603f23:	00 00                	add    BYTE PTR [rax],al
  603f25:	00 00                	add    BYTE PTR [rax],al
  603f27:	00 17                	add    BYTE PTR [rdi],dl
  603f29:	00 00                	add    BYTE PTR [rax],al
  603f2b:	00 00                	add    BYTE PTR [rax],al
  603f2d:	00 00                	add    BYTE PTR [rax],al
  603f2f:	00 e8                	add    al,ch
  603f31:	07                   	(bad)  
  603f32:	40 00 00             	add    BYTE PTR [rax],al
  603f35:	00 00                	add    BYTE PTR [rax],al
  603f37:	00 07                	add    BYTE PTR [rdi],al
  603f39:	00 00                	add    BYTE PTR [rax],al
  603f3b:	00 00                	add    BYTE PTR [rax],al
  603f3d:	00 00                	add    BYTE PTR [rax],al
  603f3f:	00 a0 07 40 00 00    	add    BYTE PTR [rax+0x4007],ah
  603f45:	00 00                	add    BYTE PTR [rax],al
  603f47:	00 08                	add    BYTE PTR [rax],cl
  603f49:	00 00                	add    BYTE PTR [rax],al
  603f4b:	00 00                	add    BYTE PTR [rax],al
  603f4d:	00 00                	add    BYTE PTR [rax],al
  603f4f:	00 48 00             	add    BYTE PTR [rax+0x0],cl
  603f52:	00 00                	add    BYTE PTR [rax],al
  603f54:	00 00                	add    BYTE PTR [rax],al
  603f56:	00 00                	add    BYTE PTR [rax],al
  603f58:	09 00                	or     DWORD PTR [rax],eax
  603f5a:	00 00                	add    BYTE PTR [rax],al
  603f5c:	00 00                	add    BYTE PTR [rax],al
  603f5e:	00 00                	add    BYTE PTR [rax],al
  603f60:	18 00                	sbb    BYTE PTR [rax],al
  603f62:	00 00                	add    BYTE PTR [rax],al
  603f64:	00 00                	add    BYTE PTR [rax],al
  603f66:	00 00                	add    BYTE PTR [rax],al
  603f68:	fe                   	(bad)  
  603f69:	ff                   	(bad)  
  603f6a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
  603f6d:	00 00                	add    BYTE PTR [rax],al
  603f6f:	00 30                	add    BYTE PTR [rax],dh
  603f71:	07                   	(bad)  
  603f72:	40 00 00             	add    BYTE PTR [rax],al
  603f75:	00 00                	add    BYTE PTR [rax],al
  603f77:	00 ff                	add    bh,bh
  603f79:	ff                   	(bad)  
  603f7a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
  603f7d:	00 00                	add    BYTE PTR [rax],al
  603f7f:	00 03                	add    BYTE PTR [rbx],al
  603f81:	00 00                	add    BYTE PTR [rax],al
  603f83:	00 00                	add    BYTE PTR [rax],al
  603f85:	00 00                	add    BYTE PTR [rax],al
  603f87:	00 f0                	add    al,dh
  603f89:	ff                   	(bad)  
  603f8a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
  603f8d:	00 00                	add    BYTE PTR [rax],al
  603f8f:	00 00                	add    BYTE PTR [rax],al
  603f91:	07                   	(bad)  
  603f92:	40 00 00             	add    BYTE PTR [rax],al
	...

Disassembly of section .got:

0000000000603ff8 <.got>:
	...

Disassembly of section .got.plt:

0000000000604000 <_GLOBAL_OFFSET_TABLE_>:
  604000:	f8                   	clc    
  604001:	3d 60 00 00 00       	cmp    eax,0x60
	...
  604016:	00 00                	add    BYTE PTR [rax],al
  604018:	e6 09                	out    0x9,al
  60401a:	40 00 00             	add    BYTE PTR [rax],al
  60401d:	00 00                	add    BYTE PTR [rax],al
  60401f:	00 f6                	add    dh,dh
  604021:	09 40 00             	or     DWORD PTR [rax+0x0],eax
  604024:	00 00                	add    BYTE PTR [rax],al
  604026:	00 00                	add    BYTE PTR [rax],al
  604028:	06                   	(bad)  
  604029:	0a 40 00             	or     al,BYTE PTR [rax+0x0]
  60402c:	00 00                	add    BYTE PTR [rax],al
  60402e:	00 00                	add    BYTE PTR [rax],al
  604030:	16                   	(bad)  
  604031:	0a 40 00             	or     al,BYTE PTR [rax+0x0]
  604034:	00 00                	add    BYTE PTR [rax],al
  604036:	00 00                	add    BYTE PTR [rax],al
  604038:	26 0a 40 00          	or     al,BYTE PTR es:[rax+0x0]
  60403c:	00 00                	add    BYTE PTR [rax],al
  60403e:	00 00                	add    BYTE PTR [rax],al
  604040:	36 0a 40 00          	or     al,BYTE PTR ss:[rax+0x0]
  604044:	00 00                	add    BYTE PTR [rax],al
  604046:	00 00                	add    BYTE PTR [rax],al
  604048:	46 0a 40 00          	rex.RX or r8b,BYTE PTR [rax+0x0]
  60404c:	00 00                	add    BYTE PTR [rax],al
  60404e:	00 00                	add    BYTE PTR [rax],al
  604050:	56                   	push   rsi
  604051:	0a 40 00             	or     al,BYTE PTR [rax+0x0]
  604054:	00 00                	add    BYTE PTR [rax],al
  604056:	00 00                	add    BYTE PTR [rax],al
  604058:	66 0a 40 00          	data16 or al,BYTE PTR [rax+0x0]
  60405c:	00 00                	add    BYTE PTR [rax],al
  60405e:	00 00                	add    BYTE PTR [rax],al
  604060:	76 0a                	jbe    60406c <_GLOBAL_OFFSET_TABLE_+0x6c>
  604062:	40 00 00             	add    BYTE PTR [rax],al
  604065:	00 00                	add    BYTE PTR [rax],al
  604067:	00 86 0a 40 00 00    	add    BYTE PTR [rsi+0x400a],al
  60406d:	00 00                	add    BYTE PTR [rax],al
  60406f:	00 96 0a 40 00 00    	add    BYTE PTR [rsi+0x400a],dl
  604075:	00 00                	add    BYTE PTR [rax],al
  604077:	00 a6 0a 40 00 00    	add    BYTE PTR [rsi+0x400a],ah
  60407d:	00 00                	add    BYTE PTR [rax],al
  60407f:	00 b6 0a 40 00 00    	add    BYTE PTR [rsi+0x400a],dh
  604085:	00 00                	add    BYTE PTR [rax],al
  604087:	00 c6                	add    dh,al
  604089:	0a 40 00             	or     al,BYTE PTR [rax+0x0]
  60408c:	00 00                	add    BYTE PTR [rax],al
  60408e:	00 00                	add    BYTE PTR [rax],al
  604090:	d6                   	(bad)  
  604091:	0a 40 00             	or     al,BYTE PTR [rax+0x0]
  604094:	00 00                	add    BYTE PTR [rax],al
  604096:	00 00                	add    BYTE PTR [rax],al
  604098:	e6 0a                	out    0xa,al
  60409a:	40 00 00             	add    BYTE PTR [rax],al
  60409d:	00 00                	add    BYTE PTR [rax],al
  60409f:	00 f6                	add    dh,dh
  6040a1:	0a 40 00             	or     al,BYTE PTR [rax+0x0]
  6040a4:	00 00                	add    BYTE PTR [rax],al
  6040a6:	00 00                	add    BYTE PTR [rax],al
  6040a8:	06                   	(bad)  
  6040a9:	0b 40 00             	or     eax,DWORD PTR [rax+0x0]
  6040ac:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .data:

00000000006040b0 <__data_start>:
	...

00000000006040b8 <__dso_handle>:
	...

Disassembly of section .bss:

00000000006040c0 <_ZSt3cin@@GLIBCXX_3.4>:
	...

00000000006041e0 <_ZSt4cout@@GLIBCXX_3.4>:
	...

00000000006042f0 <completed.6979>:
	...

00000000006042f1 <_ZStL8__ioinit>:
  6042f1:	00 00                	add    BYTE PTR [rax],al
  6042f3:	00 00                	add    BYTE PTR [rax],al
  6042f5:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp spl,BYTE PTR [r8]
   5:	28 44 65 62          	sub    BYTE PTR [rbp+riz*2+0x62],al
   9:	69 61 6e 20 36 2e 31 	imul   esp,DWORD PTR [rcx+0x6e],0x312e3620
  10:	2e 31 2d 31 31 29 20 	xor    DWORD PTR cs:[rip+0x20293131],ebp        # 20293148 <_end+0x1fc8ee50>
  17:	36 2e 31 2e          	ss xor DWORD PTR cs:[rsi],ebp
  1b:	31 20                	xor    DWORD PTR [rax],esp
  1d:	32 30                	xor    dh,BYTE PTR [rax]
  1f:	31 36                	xor    DWORD PTR [rsi],esi
  21:	30 38                	xor    BYTE PTR [rax],bh
  23:	30 32                	xor    BYTE PTR [rdx],dh
	...
